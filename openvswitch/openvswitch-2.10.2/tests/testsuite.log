## ------------------------------ ##
## openvswitch 2.10.2 test suite. ##
## ------------------------------ ##

testsuite: command line was:
  $ ./tests/testsuite -C tests AUTOTEST_PATH=utilities:vswitchd:ovsdb:vtep:tests:::ovn/controller-vtep:ovn/northd:ovn/utilities:ovn/controller

## --------- ##
## Platform. ##
## --------- ##

hostname = ubuntu
uname -m = x86_64
uname -r = 4.15.0-107-generic
uname -s = Linux
uname -v = #108~16.04.1-Ubuntu SMP Fri Jun 12 02:57:13 UTC 2020

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /home/peid/openvswitch/openvswitch-2.10.2/utilities
PATH: /home/peid/openvswitch/openvswitch-2.10.2/vswitchd
PATH: /home/peid/openvswitch/openvswitch-2.10.2/ovsdb
PATH: /home/peid/openvswitch/openvswitch-2.10.2/vtep
PATH: /home/peid/openvswitch/openvswitch-2.10.2/tests
PATH: /home/peid/openvswitch/openvswitch-2.10.2
PATH: /home/peid/openvswitch/openvswitch-2.10.2/ovn/controller-vtep
PATH: /home/peid/openvswitch/openvswitch-2.10.2/ovn/northd
PATH: /home/peid/openvswitch/openvswitch-2.10.2/ovn/utilities
PATH: /home/peid/openvswitch/openvswitch-2.10.2/ovn/controller
PATH: /home/peid/anaconda3/condabin
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games

testsuite: atconfig:
| # Configurable variable values for building test suites.
| # Generated by ./config.status.
| # Copyright (C) 2012 Free Software Foundation, Inc.
| 
| # The test suite will define top_srcdir=/../.. etc.
| at_testdir='tests'
| abs_builddir='/home/peid/openvswitch/openvswitch-2.10.2/tests'
| at_srcdir='.'
| abs_srcdir='/home/peid/openvswitch/openvswitch-2.10.2/tests'
| at_top_srcdir='..'
| abs_top_srcdir='/home/peid/openvswitch/openvswitch-2.10.2'
| at_top_build_prefix='../'
| abs_top_builddir='/home/peid/openvswitch/openvswitch-2.10.2'
| 
| # Backward compatibility with Autotest <= 2.59b:
| at_top_builddir=$at_top_build_prefix
| 
| AUTOTEST_PATH='tests'
| 
| SHELL=${CONFIG_SHELL-'/bin/bash'}

testsuite: atlocal:
| # -*- shell-script -*-
| HAVE_OPENSSL='yes'
| HAVE_PYTHON='yes'
| HAVE_PYTHON2='yes'
| HAVE_PYTHON3='yes'
| EGREP='/bin/grep -E'
| 
| if test x"$PYTHON" = x; then
|     PYTHON='/usr/bin/python2'
| fi
| 
| if test x"$PYTHON2" = x; then
|     PYTHON2='/usr/bin/python2'
| fi
| 
| if test x"$PYTHON3" = x; then
|     PYTHON3='/usr/bin/python3'
| 
|     # PYTHONCOERCECLOCALE=0 disables the Unicode compatibility warning on
|     # stderr that breaks almost any Python3 test (PEP 0538)
|     PYTHONCOERCECLOCALE=0
|     export PYTHONCOERCECLOCALE
| fi
| 
| PYTHONPATH=$abs_top_srcdir/python:$abs_top_builddir/tests:$PYTHONPATH
| export PYTHONPATH
| 
| PYTHONIOENCODING=utf_8
| export PYTHONIOENCODING
| 
| # PYTHONDONTWRITEBYTECODE=yes keeps Python from creating .pyc and .pyo
| # files.  Creating .py[co] works OK for any given version of Open
| # vSwitch, but it causes trouble if you switch from a version with
| # foo/__init__.py into an (older) version with plain foo.py, since
| # foo/__init__.pyc will cause Python to ignore foo.py.
| PYTHONDONTWRITEBYTECODE=yes
| export PYTHONDONTWRITEBYTECODE
| 
| # Test whether the current working directory name is all ASCII
| # characters.  Some Python code doesn't tolerate non-ASCII characters
| # in filenames very well, so if the current working directory is
| # non-ASCII then we skip the tests that run those programs.
| #
| # This would be just papering over a real problem, except that the
| # tests that we skip are launched from initscripts and thus normally
| # run in system directories with ASCII names.  (This problem only came
| # up at all because the Debian autobuilders do build in a top-level
| # directory named /«BUILDDIR».)
| case `pwd | tr -d ' -~'` in
|     '') non_ascii_cwd=false ;;
|     *) non_ascii_cwd=true
| esac
| 
| # Enable malloc debugging features.
| case `uname` in
| Linux)
|     MALLOC_PERTURB_=165; export MALLOC_PERTURB_
| 
|     # Before glibc 2.11, the feature enabled by MALLOC_CHECK_ was not
|     # thread-safe.  See https://bugzilla.redhat.com/show_bug.cgi?id=585674 and
|     # in particular the patch attached there, which was applied to glibc CVS as
|     # "Restore locking in free_check." between 1.11 and 1.11.1.
|     vswitchd=$abs_top_builddir/vswitchd/ovs-vswitchd
|     glibc=`ldd $vswitchd | sed -n 's/^	libc\.[^ ]* => \([^ ]*\) .*/\1/p'`
|     glibc_version=`$glibc | sed -n '1s/.*version \([0-9]\{1,\}\.[0-9]\{1,\}\).*/\1/p'`
|     case $glibc_version in
|         2.[0-9] | 2.1[01]) mcheck=disabled ;;
|         *) mcheck=enabled ;;
|     esac
|     if test $mcheck = enabled; then
|         MALLOC_CHECK_=2; export MALLOC_CHECK_
|     else
|         echo >&2 "glibc $glibc_version detected, disabling memory checking"
|     fi
|     ;;
| FreeBSD)
|     case `uname -r` in
|     [789].*)
|         MALLOC_CONF=AJ
|         ;;
|     *)
|         MALLOC_CONF=abort:true,junk:true,redzone:true
|         ;;
|     esac
|     export MALLOC_CONF
| esac
| 
| # The name of loopback interface 
| case `uname` in
| Linux)
|     LOOPBACK_INTERFACE=lo
|     ;;
| FreeBSD|NetBSD)
|     LOOPBACK_INTERFACE=lo0
|     ;;
| esac
| 
| # Check for platform.
| case `uname` in
| MINGW*)
|     IS_WIN32="yes"
|     IS_BSD="no"
|     ;;
| FreeBSD|NetBSD)
|     IS_WIN32="no"
|     IS_BSD="yes"
|     ;;
| *)
|     IS_WIN32="no"
|     IS_BSD="no"
|     ;;
| esac
| 
| if test x"$PYTHON3" != x && test "$IS_WIN32" = yes; then
|     # enables legacy windows unicode printing needed for Python3 compatibility
|     # with the Python2 tests
|     PYTHONLEGACYWINDOWSFSENCODING=true
|     export PYTHONLEGACYWINDOWSFSENCODING
|     PYTHONLEGACYWINDOWSSTDIO=true
|     export PYTHONLEGACYWINDOWSSTDIO
| fi
| 
| # Check whether to run IPv6 tests.
| $PYTHON -c '
| import errno
| import socket
| import sys
| try:
|     socket.socket(family=socket.AF_INET6).bind(("::1", 0, 0, 0))
| except socket.error as e:
|     if e.errno == errno.EAFNOSUPPORT or errno.EADDRNOTAVAIL:
|         sys.exit(2)
|     raise
| '
| case $? in
|     0) HAVE_IPV6=yes ;;
|     2) HAVE_IPV6=no ;;
|     *) echo "$0: unexpected error probing $PYTHON for IPv6 support" >&2 ;;
| esac
| 
| # Look for a python L7 library 'LIB' in the system. If it is found, defines
| # HAVE_LIB="yes", otherwise HAVE_LIB="no"
| find_l7_lib()
| {
|     set +x
|     var=HAVE_`echo "$1" | tr '[a-z]' '[A-Z]'`
|     if test "$HAVE_PYTHON" = "yes"; then
|         result=$($PYTHON $abs_top_srcdir/tests/test-l7.py --help | grep "$1")
|         if test "x${result}" != x; then
|             eval ${var}="yes"
|         else
|             eval ${var}="no"
|         fi
|     else
|         eval ${var}="no"
|     fi
| }
| 
| # HAVE_FTP
| find_l7_lib ftp
| # HAVE_TFTP
| find_l7_lib tftp
| 
| # Look for a commnand in the system. If it is found, defines
| # HAVE_COMMAND="yes", otherwise HAVE_COMMAND="no".
| find_command()
| {
|     which $1 > /dev/null 2>&1
|     status=$?
|     var=HAVE_`echo "$1" | tr '[a-z]' '[A-Z]'`
|     if test "$status" = "0"; then
|         eval ${var}="yes"
|     else
|         eval ${var}="no"
|     fi
| }
| 
| # Set HAVE_NC
| find_command nc
| 
| # Determine correct netcat option to quit on stdin EOF
| if nc --version 2>&1 | grep -q nmap.org; then
|     # Nmap netcat
|     NC_EOF_OPT="--send-only -w 5"
| else
|     # BSD netcat
|     NC_EOF_OPT="-q 1 -w 5"
| fi
| 
| # Set HAVE_TCPDUMP
| find_command tcpdump
| 
| # Set HAVE_LFTP
| find_command lftp
| 
| CURL_OPT="-g -v --max-time 1 --retry 2 --retry-delay 1 --connect-timeout 1"
| 
| # Determine whether "diff" supports "normal" diffs.  (busybox diff does not.)
| if echo xyzzy | diff /dev/null - | grep '^>' >/dev/null; then
|     DIFF_SUPPORTS_NORMAL_FORMAT=yes
| else
|     DIFF_SUPPORTS_NORMAL_FORMAT=no
| fi
| 
| # Turn off proxies.
| unset http_proxy
| unset https_proxy
| unset ftp_proxy
| unset no_proxy
| unset HTTP_PROXY
| unset HTTPS_PROXY
| unset FTP_PROXY
| unset NO_PROXY
| 
| # Avoid OVN environment variables leaking in from external environment.
| unset OVN_NB_DB
| unset OVN_SB_DB

## ---------------- ##
## Tested programs. ##
## ---------------- ##

./testsuite.at:1: /home/peid/openvswitch/openvswitch-2.10.2/vswitchd/ovs-vswitchd --version
ovs-vswitchd (Open vSwitch) 2.10.2

./testsuite.at:1: /home/peid/openvswitch/openvswitch-2.10.2/utilities/ovs-vsctl --version
ovs-vsctl (Open vSwitch) 2.10.2
DB Schema 7.16.1

## ------------------ ##
## Running the tests. ##
## ------------------ ##
testsuite: starting at: Sun Jul  5 09:43:53 CST 2020
1. appctl-bashcomp - basic verification (completion.at:21): ok     (0m0.888s 0m0.360s)
2. appctl-bashcomp - complex completion check 1 (completion.at:88): ok     (0m0.352s 0m0.109s)
3. appctl-bashcomp - complex completion check 2 (completion.at:142): ok     (0m0.207s 0m0.060s)
4. appctl-bashcomp - complex completion check 3 (completion.at:176): ok     (0m0.626s 0m0.157s)
5. appctl-bashcomp - complex completion check 4 (completion.at:265): ok     (0m0.181s 0m0.074s)
6. appctl-bashcomp - negative test (completion.at:291): ok     (0m0.385s 0m0.193s)
7. vsctl-bashcomp - basic verification (completion.at:345): ok     (0m1.684s 0m0.704s)
8. vsctl-bashcomp - argument completion (completion.at:427): ok     (0m5.547s 0m2.524s)
9. vsctl-bashcomp - negative test (completion.at:754): ok     (0m0.577s 0m0.207s)
10. bfd - basic config on different bridges (bfd.at:52): ok     (0m0.241s 0m0.120s)
11. bfd - Verify tunnel down detection (bfd.at:94): ok     (0m0.417s 0m0.145s)
12. bfd - concatenated path down (bfd.at:175): ok     (0m0.235s 0m0.076s)
13. bfd - Edit the Min Tx/Rx values (bfd.at:202): ok     (0m0.260s 0m0.127s)
14. bfd - check_tnl_key (bfd.at:233): ok     (0m0.139s 0m0.067s)
15. bfd - bfd decay (bfd.at:268): ok     (0m4.363s 0m1.517s)
16. bfd - bfd forwarding_if_rx - bfd on one side (bfd.at:415): ok     (0m0.683s 0m0.266s)
17. bfd - bfd forwarding_if_rx - bfd on both sides (bfd.at:460): ok     (0m0.586s 0m0.218s)
18. bfd - bfd forwarding_if_rx - with bfd decay (bfd.at:526): ok     (0m1.201s 0m0.421s)
19. bfd - bfd forwarding_if_rx - demand_rx_bfd (bfd.at:614): ok     (0m5.397s 0m2.155s)
20. bfd - flap_count (bfd.at:685): ok     (0m2.292s 0m0.986s)
21. bfd - check that BFD works together with RSTP (bfd.at:805): ok     (0m0.181s 0m0.082s)
22. bfd - liveness propagation - OF1.3 (bfd.at:842): ok     (0m0.356s 0m0.144s)
23. bfd - liveness propagation - OF1.4 (bfd.at:913): ok     (0m0.359s 0m0.134s)
24. bfd - liveness propagation - OF1.5 (bfd.at:984): ok     (0m0.382s 0m0.114s)
25. bfd - Edit the Detect Mult values (bfd.at:1054): ok     (0m0.456s 0m0.200s)
26. cfm - check update ovsdb 1 (cfm.at:49): ok     (0m0.745s 0m0.253s)
27. cfm - check update ovsdb 2 (cfm.at:81): ok     (0m0.449s 0m0.197s)
28. cfm - demand mode (cfm.at:115): ok     (0m7.782s 0m2.692s)
29. cfm - demand_rx_ccm (cfm.at:157): ok     (0m16.683s 0m6.889s)
30. cfm - flap_count (cfm.at:219): ok     (0m0.210s 0m0.085s)
31. cfm - fault_override (cfm.at:252): ok     (0m0.275s 0m0.094s)
32. cfm - check that CFM works together with RSTP (cfm.at:290): ok     (0m0.214s 0m0.075s)
33. cfm - liveness propagation - OF1.3 (cfm.at:327): ok     (0m0.278s 0m0.116s)
34. cfm - liveness propagation - OF1.4 (cfm.at:389): ok     (0m0.275s 0m0.132s)
35. cfm - liveness propagation - OF1.5 (cfm.at:451): ok     (0m0.255s 0m0.136s)
36. lacp - config (lacp.at:13): ok     (0m0.118s 0m0.073s)
37. lacp - multi port config (lacp.at:53): ok     (0m0.142s 0m0.078s)
38. lacp - negotiation (lacp.at:140): ok     (0m0.640s 0m0.293s)
39. lacp - liveness propagation - OF1.3 (lacp.at:731): ok     (0m0.512s 0m0.207s)
40. lacp - liveness propagation - OF1.4 (lacp.at:827): ok     (0m0.532s 0m0.193s)
41. lacp - liveness propagation - OF1.5 (lacp.at:923): ok     (0m0.520s 0m0.204s)
42. flow extractor (library.at:3): ok     (0m0.110s 0m0.088s)
43. TCP/IP checksumming (library.at:9): ok     (0m0.009s 0m0.007s)
44. hash functions (library.at:14): ok     (0m0.099s 0m0.002s)
45. hash map (library.at:18): ok     (0m0.037s 0m0.005s)
46. hash index (library.at:24): ok     (0m0.071s 0m0.006s)
47. cuckoo hash (library.at:30): ok     (0m7.381s 0m0.008s)
48. counting cuckoo hash (library.at:36): ok     (0m0.127s 0m0.009s)
49. atomic operations (library.at:42): ok     (0m0.374s 0m0.148s)
50. test linked lists (library.at:46): ok     (0m0.013s 0m0.002s)
51. packet library (library.at:51): ok     (0m0.011s 0m0.002s)
52. SHA-1 (library.at:55): ok     (0m0.060s 0m0.005s)
53. test skiplist (library.at:60): ok     (0m0.722s 0m1.028s)
54. type properties (library.at:71): ok     (0m0.003s 0m0.000s)
55. strtok_r bug fix (library.at:75): ok     (0m0.004s 0m0.000s)
56. byte order conversion (library.at:80): ok     (0m0.011s 0m0.002s)
57. random number generator (library.at:85): ok     (0m0.008s 0m0.008s)
58. ctz() function (library.at:137): ok     (0m0.009s 0m0.004s)
59. clz() function (library.at:137): ok     (0m0.012s 0m0.001s)
60. round_up_pow2() function (library.at:137): ok     (0m0.007s 0m0.008s)
61. round_down_pow2() function (library.at:137): ok     (0m0.008s 0m0.006s)
62. count_1bits() function (library.at:137): ok     (0m0.014s 0m0.000s)
63. log_2_floor() function (library.at:137): ok     (0m0.013s 0m0.000s)
64. bitwise_copy() function (library.at:137): ok     (0m0.012s 0m0.006s)
65. bitwise_zero() function (library.at:137): ok     (0m0.008s 0m0.006s)
66. bitwise_one() function (library.at:137): ok     (0m0.013s 0m0.000s)
67. bitwise_is_all_zeros() function (library.at:137): ok     (0m0.068s 0m0.007s)
68. bitwise_rscan() function (library.at:137): ok     (0m0.356s 0m0.001s)
69. ovs_scan() function (library.at:137): ok     (0m0.008s 0m0.006s)
70. unix socket, short pathname - C (library.at:156): ok     (0m0.011s 0m0.002s)
71. unix socket, long pathname - C (library.at:166): ok     (0m0.015s 0m0.001s)
72. unix socket, short pathname - Python2 (library.at:186): ok     (0m0.005s 0m0.038s)
73. unix socket, short pathname - Python3 (library.at:187): ok     (0m0.018s 0m0.055s)
74. unix socket, long pathname - Python2 (library.at:208): ok     (0m0.026s 0m0.012s)
75. unix socket, long pathname - Python3 (library.at:209): ok     (0m0.031s 0m0.048s)
76. ovs_assert (library.at:211): ok     (0m0.015s 0m0.005s)
77. snprintf (library.at:234): ok     (0m0.007s 0m0.007s)
78. bitmap functions (library.at:238): ok     (0m0.013s 0m0.002s)
79. use of public headers (library.at:243): ok     (0m0.078s 0m0.001s)
80. ofpbuf module (library.at:247): ok     (0m0.008s 0m0.006s)
81. rcu (library.at:251): ok     (0m0.011s 0m0.006s)
82. stopwatch module (library.at:255): ok     (0m0.010s 0m0.005s)
83. heap library -- insert delete same order (heap.at:8): ok     (0m0.026s 0m0.005s)
84. heap library -- insert delete reverse order (heap.at:9): ok     (0m0.027s 0m0.002s)
85. heap library -- insert delete every order (heap.at:10): ok     (0m0.034s 0m0.007s)
86. heap library -- insert delete same order with dups (heap.at:11): ok     (0m0.154s 0m0.012s)
87. heap library -- raw insert (heap.at:12): ok     (0m0.024s 0m0.002s)
88. heap library -- raw delete (heap.at:13): ok     (0m0.006s 0m0.009s)
89. hrw bundle link selection (bundle.at:10): ok     (0m0.153s 0m0.017s)
90. active_backup bundle link selection (bundle.at:81): ok     (0m0.073s 0m0.018s)
91. hrw bundle single link selection (bundle.at:153): ok     (0m0.031s 0m0.012s)
92. hrw bundle no link selection (bundle.at:162): ok     (0m0.032s 0m0.006s)
93. bundle action missing argument (bundle.at:170): ok     (0m0.010s 0m0.006s)
94. bundle action bad fields (bundle.at:177): ok     (0m0.011s 0m0.005s)
95. bundle action bad algorithm (bundle.at:184): ok     (0m0.012s 0m0.005s)
96. bundle action bad slave type (bundle.at:191): ok     (0m0.012s 0m0.004s)
97. bundle action bad slave delimiter (bundle.at:198): ok     (0m0.011s 0m0.005s)
98. bundle action with many ports (bundle.at:211): ok     (0m0.110s 0m0.042s)
99. bundle action with ports up and down (bundle.at:221): ok     (0m0.228s 0m0.095s)
100. bundle_load action with ports down (bundle.at:259): ok     (0m0.137s 0m0.053s)
101. flow classifier - empty (classifier.at:2): ok     (0m0.011s 0m0.003s)
102. flow classifier - destroy null (classifier.at:2): ok     (0m0.012s 0m0.001s)
103. flow classifier - single rule (classifier.at:2): ok     (0m1.326s 0m0.008s)
104. flow classifier - rule replacement (classifier.at:2): ok     (0m2.074s 0m0.010s)
105. flow classifier - many rules in one list (classifier.at:2): ok     (0m0.203s 0m0.008s)
106. flow classifier - versioned many rules in one list (classifier.at:2): ok     (0m0.216s 0m0.003s)
107. flow classifier - many rules in one table (classifier.at:2): ok     (0m1.074s 0m0.008s)
108. flow classifier - versioned many rules in one table (classifier.at:2): ok     (0m1.176s 0m0.003s)
109. flow classifier - many rules in two tables (classifier.at:2): ok     (0m3.734s 0m0.005s)
110. flow classifier - versioned many rules in two tables (classifier.at:2): ok     (0m5.955s 0m0.012s)
111. flow classifier - many rules in five tables (classifier.at:2): ok     (0m3.819s 0m0.004s)
112. flow classifier - versioned many rules in five tables (classifier.at:2): ok     (0m6.215s 0m0.012s)
113. miniflow - miniflow (classifier.at:21): ok     (0m0.076s 0m0.004s)
114. miniflow - minimask_has_extra (classifier.at:21): ok     (0m0.083s 0m0.005s)
115. miniflow - minimask_combine (classifier.at:21): ok     (0m0.149s 0m0.001s)
116. flow classifier - lookup segmentation (classifier.at:31): ok     (0m0.176s 0m0.067s)
117. flow classifier - prefix lookup (classifier.at:69): ok     (0m0.239s 0m0.119s)
118. single conjunctive match (classifier.at:134): ok     (0m0.980s 0m0.339s)
119. multiple conjunctive match (classifier.at:171): ok     (0m5.700s 0m1.904s)
120. conjunctive match priority fallback (classifier.at:247): ok     (0m0.434s 0m0.166s)
121. conjunctive match and other actions (classifier.at:293): ok     (0m0.125s 0m0.058s)
122. check struct tail padding (check-structs.at:11): ok     (0m0.010s 0m0.005s)
123. check struct internal alignment (check-structs.at:21): ok     (0m0.003s 0m0.014s)
124. check struct declared size (check-structs.at:32): ok     (0m0.015s 0m0.001s)
125. check wrong struct's declared size (check-structs.at:44): ok     (0m0.004s 0m0.014s)
126. daemon (daemon.at:3): ok     (0m0.040s 0m0.005s)
127. daemon --monitor (daemon.at:30): ok     (0m0.068s 0m0.022s)
128. daemon --detach (daemon.at:79): ok     (0m0.038s 0m0.015s)
129. daemon --detach --monitor (daemon.at:102): ok     (0m0.088s 0m0.031s)
130. daemon --detach startup errors (daemon.at:148): ok     (0m0.032s 0m0.019s)
131. daemon --detach --monitor startup errors (daemon.at:157): ok     (0m0.034s 0m0.020s)
132. daemon --service (daemon.at:167): skipped (daemon.at:169)
133. daemon - Python2 (daemon-py.at:25): ok     (0m0.012s 0m0.002s)
134. daemon - Python3 (daemon-py.at:26): ok     (0m0.013s 0m0.001s)
135. daemon --monitor - Python2 (daemon-py.at:69): ok     (0m0.041s 0m0.011s)
136. daemon --monitor - Python3 (daemon-py.at:70): ok     (0m0.038s 0m0.014s)
137. daemon --monitor restart exit code - Python2 (daemon-py.at:113): ok     (0m0.039s 0m0.011s)
138. daemon --monitor restart exit code - Python3 (daemon-py.at:114): ok     (0m0.045s 0m0.010s)
139. daemon --detach - Python2 (daemon-py.at:135): ok     (0m0.034s 0m0.019s)
140. daemon --detach - Python3 (daemon-py.at:136): ok     (0m0.046s 0m0.047s)
141. daemon --detach --monitor - Python2 (daemon-py.at:186): ok     (0m0.101s 0m0.022s)
142. daemon --detach --monitor - Python3 (daemon-py.at:187): ok     (0m0.115s 0m0.034s)
143. daemon --detach startup errors - Python2 (daemon-py.at:199): ok     (0m0.049s 0m0.014s)
144. daemon --detach startup errors - Python3 (daemon-py.at:200): ok     (0m0.066s 0m0.013s)
145. daemon --detach --monitor startup errors - Python2 (daemon-py.at:212): ok     (0m0.040s 0m0.032s)
146. daemon --detach --monitor startup errors - Python3 (daemon-py.at:213): ok     (0m0.075s 0m0.016s)
147. daemon --detach closes standard fds - Python2 (daemon-py.at:238): ok     (0m0.038s 0m0.020s)
148. daemon --detach closes standard fds - Python3 (daemon-py.at:239): ok     (0m0.065s 0m0.011s)
149. daemon --detach --monitor closes standard fds - Python2 (daemon-py.at:265): ok     (0m0.044s 0m0.078s)
150. daemon --detach --monitor closes standard fds - Python3 (daemon-py.at:266): ok     (0m0.063s 0m0.065s)
151. OpenFlow 1.0 action translation (ofp-actions.at:3): ok     (0m0.015s 0m0.006s)
152. OpenFlow 1.0 "instruction" translations (ofp-actions.at:325): ok     (0m0.017s 0m0.002s)
153. OpenFlow 1.1 action translation (ofp-actions.at:355): ok     (0m0.011s 0m0.010s)
154. OpenFlow 1.1 instruction translation (ofp-actions.at:498): ok     (0m0.015s 0m0.005s)
155. OpenFlow 1.2 action translation (ofp-actions.at:709): ok     (0m0.014s 0m0.006s)
156. OpenFlow 1.3 action translation (ofp-actions.at:735): ok     (0m0.015s 0m0.005s)
157. OpenFlow 1.5 action translation (ofp-actions.at:763): ok     (0m0.020s 0m0.003s)
158. ofp-actions - inconsistent MPLS actions (ofp-actions.at:787): ok     (0m0.104s 0m0.058s)
159. reg_load <-> set_field translation corner case (ofp-actions.at:799): ok     (0m0.125s 0m0.075s)
160. enqueue action for OF1.1+ (ofp-actions.at:814): ok     (0m0.131s 0m0.047s)
161. mod_nw_ttl action for OF1.0 (ofp-actions.at:831): ok     (0m0.130s 0m0.045s)
162. mod_nw_ecn action translation (ofp-actions.at:848): ok     (0m0.199s 0m0.120s)
163. empty (ofp-print.at:3): ok     (0m0.013s 0m0.004s)
164. too short (ofp-print.at:9): ok     (0m0.013s 0m0.004s)
165. wrong OpenFlow version (ofp-print.at:17): ok     (0m0.015s 0m0.003s)
166. truncated message (ofp-print.at:27): ok     (0m0.013s 0m0.005s)
167. message only uses part of buffer (ofp-print.at:35): ok     (0m0.010s 0m0.007s)
168. OFPT_HELLO - ordinary (ofp-print.at:44): ok     (0m0.011s 0m0.006s)
169. OFPT_HELLO with extra data (ofp-print.at:52): ok     (0m0.014s 0m0.004s)
170. OFPT_HELLO with version bitmap (ofp-print.at:64): ok     (0m0.016s 0m0.001s)
171. OFPT_HELLO with version bitmap and extra data (ofp-print.at:73): ok     (0m0.016s 0m0.001s)
172. OFPT_HELLO with higher than supported version (ofp-print.at:87): ok     (0m0.035s 0m0.012s)
173. OFPT_HELLO with contradictory version bitmaps (ofp-print.at:106): ok     (0m0.048s 0m0.020s)
174. OFPT_ECHO_REQUEST, empty payload (ofp-print.at:148): ok     (0m0.014s 0m0.002s)
175. OFPT_ECHO_REQUEST, 5-byte payload (ofp-print.at:155): ok     (0m0.015s 0m0.002s)
176. OFPT_ECHO_REPLY, empty payload (ofp-print.at:163): ok     (0m0.009s 0m0.008s)
177. OFPT_ECHO_REPLY, 5-byte payload (ofp-print.at:170): ok     (0m0.014s 0m0.003s)
178. OFPT_FEATURES_REQUEST (ofp-print.at:178): ok     (0m0.010s 0m0.007s)
179. OFPT_FEATURES_REPLY - OF1.0 (ofp-print.at:185): ok     (0m0.013s 0m0.003s)
180. OFPT_FEATURES_REPLY cut off mid-port - OF1.0 (ofp-print.at:235): ok     (0m0.011s 0m0.010s)
181. OFPT_FEATURES_REPLY - OF1.1 (ofp-print.at:274): ok     (0m0.011s 0m0.006s)
182. OFPT_FEATURES_REPLY cut off mid-port - OF1.1 (ofp-print.at:305): ok     (0m0.015s 0m0.006s)
183. OFPT_FEATURES_REPLY - OF1.2 (ofp-print.at:334): ok     (0m0.012s 0m0.004s)
184. OFPT_FEATURES_REPLY cut off mid-port - OF1.2 (ofp-print.at:365): ok     (0m0.014s 0m0.005s)
185. OFPT_FEATURES_REPLY - OF1.3 (ofp-print.at:394): ok     (0m0.011s 0m0.006s)
186. OFPT_FEATURES_REPLY - OF1.4 (ofp-print.at:406): ok     (0m0.012s 0m0.005s)
187. OFPT_FEATURES_REPLY - OF1.5 (ofp-print.at:418): ok     (0m0.012s 0m0.005s)
188. OFPT_FEATURES_REPLY - with auxiliary_id - OF1.3 (ofp-print.at:430): ok     (0m0.009s 0m0.009s)
189. OFPT_GET_CONFIG_REQUEST (ofp-print.at:442): ok     (0m0.012s 0m0.006s)
190. OFPT_GET_CONFIG_REPLY, most common form (ofp-print.at:449): ok     (0m0.015s 0m0.002s)
191. OFPT_GET_CONFIG_REPLY, frags and miss_send_len (ofp-print.at:457): ok     (0m0.010s 0m0.006s)
192. OFPT_PACKET_IN - OF1.0 (ofp-print.at:464): ok     (0m0.010s 0m0.006s)
193. OFPT_PACKET_IN - OF1.0, with hex output of packet data (ofp-print.at:478): ok     (0m0.011s 0m0.006s)
194. OFPT_PACKET_IN - OF1.1 (ofp-print.at:496): ok     (0m0.012s 0m0.006s)
195. OFPT_PACKET_IN - OF1.2 (ofp-print.at:511): ok     (0m0.014s 0m0.003s)
196. OFPT_PACKET_IN - OF1.2, with hex output of packet data (ofp-print.at:525): ok     (0m0.014s 0m0.002s)
197. OFPT_PACKET_IN - OF1.3 (ofp-print.at:542): ok     (0m0.012s 0m0.005s)
198. OFPT_PACKET_IN - OF1.4 (ofp-print.at:557): ok     (0m0.010s 0m0.007s)
199. OFPT_PACKET_IN - OF1.5 (ofp-print.at:572): ok     (0m0.011s 0m0.009s)
200. OFPT_PACKET_IN - OF1.3, with hex output of packet data (ofp-print.at:587): ok     (0m0.010s 0m0.008s)
201. OFPT_FLOW_REMOVED - OF1.0 (ofp-print.at:605): ok     (0m0.014s 0m0.004s)
202. OFPT_FLOW_REMOVED - OF1.2 (ofp-print.at:619): ok     (0m0.012s 0m0.003s)
203. OFPT_FLOW_REMOVED - OF1.3 (ofp-print.at:630): ok     (0m0.013s 0m0.142s)
204. OFPT_FLOW_REMOVED - OF1.5 (ofp-print.at:641): ok     (0m0.019s 0m0.062s)
205. OFPT_PORT_STATUS - OF1.0 (ofp-print.at:657): ok     (0m0.015s 0m0.074s)
206. OFPT_PORT_STATUS - OF1.1 (ofp-print.at:675): ok     (0m0.021s 0m0.103s)
207. OFPT_PORT_STATUS - OF1.4 (ofp-print.at:694): ok     (0m0.010s 0m0.038s)
208. OFPT_PORT_STATUS - OF1.6 (ofp-print.at:714): ok     (0m0.015s 0m0.006s)
209. OFPT_PACKET_OUT - OF1.0 (ofp-print.at:740): ok     (0m0.014s 0m0.034s)
210. OFPT_PACKET_OUT - OF1.0, with packet (ofp-print.at:754): ok     (0m0.009s 0m0.292s)
211. OFPT_PACKET_OUT - OF1.0, with hex output of packet data (ofp-print.at:769): ok     (0m0.019s 0m0.013s)
212. OFPT_PACKET_OUT - OF1.1 (ofp-print.at:788): ok     (0m0.012s 0m0.080s)
213. OFPT_PACKET_OUT - OF1.1, with packet (ofp-print.at:799): ok     (0m0.019s 0m0.085s)
214. OFPT_PACKET_OUT - OF1.5 (ofp-print.at:815): ok     (0m0.039s 0m0.188s)
215. OFPT_PACKET_OUT - OF1.5, with packet (ofp-print.at:866): ok     (0m0.018s 0m0.001s)
216. OFPT_FLOW_MOD - OF1.0 - low verbosity (ofp-print.at:884): ok     (0m0.014s 0m0.004s)
217. OFPT_FLOW_MOD - OF1.1 - low verbosity (ofp-print.at:902): ok     (0m0.010s 0m0.005s)
218. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:922): ok     (0m0.008s 0m0.008s)
219. OFPT_FLOW_MOD - OF1.0 - high verbosity (ofp-print.at:942): ok     (0m0.012s 0m0.004s)
220. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:960): ok     (0m0.013s 0m0.003s)
221. OFPT_FLOW_MOD - OF1.3 - flags - low verbosity (ofp-print.at:979): ok     (0m0.010s 0m0.010s)
222. OFPT_FLOW_MOD - OF1.2 - set-field ip_src (ofp-print.at:997): ok     (0m0.018s 0m0.017s)
223. OFPT_FLOW_MOD - OF1.2 - set-field ip_dst (ofp-print.at:1012): ok     (0m0.009s 0m0.007s)
224. OFPT_FLOW_MOD - OF1.2 - set-field sctp_src (ofp-print.at:1027): ok     (0m0.009s 0m0.023s)
225. OFPT_FLOW_MOD - OF1.2 - set-field sctp_dst (ofp-print.at:1042): ok     (0m0.011s 0m0.043s)
226. OFPT_FLOW_MOD - OF1.2 - experimenter OXM (ofp-print.at:1057): ok     (0m0.006s 0m0.030s)
227. OFPT_FLOW_MOD - OF1.2 - set-field nd_target, nd_sll (ofp-print.at:1071): ok     (0m0.015s 0m0.006s)
228. OFPT_FLOW_MOD - OF1.3 - meter (ofp-print.at:1089): ok     (0m0.010s 0m0.029s)
229. OFPT_FLOW reply - OF1.2 - set-field ip_src (ofp-print.at:1100): ok     (0m0.012s 0m0.007s)
230. OFPT_FLOW reply - OF1.2 - set-field ip_dst (ofp-print.at:1117): ok     (0m0.009s 0m0.013s)
231. OFPT_FLOW reply - OF1.2 - set-field sctp_src (ofp-print.at:1134): ok     (0m0.016s 0m0.003s)
232. OFPT_FLOW reply - OF1.2 - set-field sctp_dst (ofp-print.at:1151): ok     (0m0.012s 0m0.006s)
233. OFPT_PORT_MOD - OF1.0 (ofp-print.at:1168): ok     (0m0.011s 0m0.017s)
234. OFPT_PORT_MOD - OF1.1 (ofp-print.at:1181): ok     (0m0.011s 0m0.005s)
235. OFPT_PORT_MOD - OF1.2 (ofp-print.at:1195): ok     (0m0.012s 0m0.005s)
236. OFPT_PORT_MOD - OF1.3 (ofp-print.at:1209): ok     (0m0.012s 0m0.005s)
237. OFPT_PORT_MOD - OF1.4 (ofp-print.at:1223): ok     (0m0.010s 0m0.007s)
238. OFPT_PORT_MOD - OF1.6 (ofp-print.at:1237): ok     (0m0.014s 0m0.007s)
239. OFPT_TABLE_MOD - OF1.1 (ofp-print.at:1252): ok     (0m0.017s 0m0.004s)
240. OFPT_TABLE_MOD - OF1.2 (ofp-print.at:1261): ok     (0m0.014s 0m0.005s)
241. OFPT_TABLE_MOD - OF1.3 (ofp-print.at:1270): ok     (0m0.014s 0m0.003s)
242. OFPT_TABLE_MOD - OF1.4 (ofp-print.at:1279): ok     (0m0.013s 0m0.008s)
243. OFPST_DESC request (ofp-print.at:1288): ok     (0m0.014s 0m0.007s)
244. OFPST_DESC reply (ofp-print.at:1295): ok     (0m0.018s 0m0.001s)
245. OFPST_FLOW request - OF1.0 (ofp-print.at:1375): ok     (0m0.012s 0m0.006s)
246. OFPST_FLOW request - OF1.2 (ofp-print.at:1387): ok     (0m0.009s 0m0.010s)
247. OFPST_FLOW request - OF1.3 (ofp-print.at:1399): ok     (0m0.011s 0m0.008s)
248. OFPST_FLOW request - OF1.5 (ofp-print.at:1411): ok     (0m0.014s 0m0.005s)
249. OFPST_FLOW reply - OF1.0 (ofp-print.at:1423): ok     (0m0.013s 0m0.005s)
250. OFPST_FLOW reply - OF1.2 (ofp-print.at:1467): ok     (0m0.011s 0m0.008s)
251. OFPST_FLOW reply - OF1.5 (ofp-print.at:1502): ok     (0m0.012s 0m0.005s)
252. OFPST_AGGREGATE request - OF1.0 (ofp-print.at:1528): ok     (0m0.009s 0m0.009s)
253. OFPST_AGGREGATE request - OF1.2 (ofp-print.at:1540): ok     (0m0.012s 0m0.005s)
254. OFPST_AGGREGATE request - OF1.3 (ofp-print.at:1552): ok     (0m0.014s 0m0.005s)
255. OFPST_AGGREGATE request - OF1.5 (ofp-print.at:1564): ok     (0m0.013s 0m0.006s)
256. OFPST_AGGREGATE reply - OF1.0 (ofp-print.at:1578): ok     (0m0.011s 0m0.006s)
257. OFPST_AGGREGATE reply - OF1.2 (ofp-print.at:1589): ok     (0m0.011s 0m0.007s)
258. OFPST_AGGREGATE reply - OF1.3 (ofp-print.at:1600): ok     (0m0.016s 0m0.002s)
259. OFPST_AGGREGATE reply - OF1.5 (ofp-print.at:1611): ok     (0m0.014s 0m0.005s)
260. OFPST_TABLE request - OF1.0 (ofp-print.at:1623): ok     (0m0.016s 0m0.003s)
261. OFPST_TABLE request - OF1.1 (ofp-print.at:1630): ok     (0m0.012s 0m0.005s)
262. OFPST_TABLE request - OF1.2 (ofp-print.at:1637): ok     (0m0.015s 0m0.002s)
263. OFPST_TABLE request - OF1.3 (ofp-print.at:1644): ok     (0m0.013s 0m0.003s)
264. OFPST_TABLE reply - OF1.0 (ofp-print.at:1651): ok     (0m0.008s 0m0.009s)
265. OFPST_TABLE reply - OF1.2 (ofp-print.at:1680): ok     (0m1.249s 0m0.699s)
266. OFPST_TABLE reply - OF1.3 (ofp-print.at:1771): ok     (0m0.009s 0m0.008s)
267. OFPST_PORT request - 1.0 (ofp-print.at:1788): ok     (0m0.011s 0m0.004s)
268. OFPST_PORT request - 1.1 (ofp-print.at:1798): ok     (0m0.012s 0m0.004s)
269. OFPST_PORT request - 1.2 (ofp-print.at:1808): ok     (0m0.008s 0m0.008s)
270. OFPST_PORT request - 1.3 (ofp-print.at:1818): ok     (0m0.014s 0m0.003s)
271. OFPST_PORT reply - OF1.0 (ofp-print.at:1828): ok     (0m0.015s 0m0.001s)
272. OFPST_PORT reply - OF1.2 (ofp-print.at:1871): ok     (0m0.013s 0m0.005s)
273. OFPST_PORT reply - OF1.3 (ofp-print.at:1906): ok     (0m0.010s 0m0.006s)
274. OFPST_PORT reply - OF1.4 (ofp-print.at:1945): ok     (0m0.011s 0m0.005s)
275. OFPST_QUEUE request - OF1.0 (ofp-print.at:1965): ok     (0m0.008s 0m0.008s)
276. OFPST_QUEUE request - OF1.1 (ofp-print.at:1975): ok     (0m0.012s 0m0.004s)
277. OFPST_QUEUE request - OF1.2 (ofp-print.at:1985): ok     (0m0.012s 0m0.004s)
278. OFPST_QUEUE request - OF1.3 (ofp-print.at:1995): ok     (0m0.007s 0m0.011s)
279. OFPST_QUEUE reply - OF1.0 (ofp-print.at:2005): ok     (0m0.012s 0m0.004s)
280. OFPST_QUEUE reply - OF1.1 (ofp-print.at:2032): ok     (0m0.014s 0m0.003s)
281. OFPST_QUEUE reply - OF1.2 (ofp-print.at:2059): ok     (0m0.008s 0m0.009s)
282. OFPST_QUEUE reply - OF1.3 (ofp-print.at:2086): ok     (0m0.012s 0m0.003s)
283. OFPST_QUEUE reply - OF1.4 (ofp-print.at:2119): ok     (0m0.014s 0m0.003s)
284. NXST_GROUP request - OF1.0 (ofp-print.at:2153): ok     (0m0.014s 0m0.002s)
285. OFPST_GROUP request - OF1.1 (ofp-print.at:2162): ok     (0m0.014s 0m0.002s)
286. NXST_GROUP reply - OF1.0 (ofp-print.at:2171): ok     (0m0.012s 0m0.005s)
287. OFPST_GROUP reply - OF1.1 (ofp-print.at:2193): ok     (0m0.008s 0m0.008s)
288. OFPST_GROUP reply - OF1.3 (ofp-print.at:2213): ok     (0m0.013s 0m0.003s)
289. NXST_GROUP_DESC request - OF1.0 (ofp-print.at:2235): ok     (0m0.009s 0m0.007s)
290. OFPST_GROUP_DESC request - OF1.1 (ofp-print.at:2244): ok     (0m0.012s 0m0.004s)
291. OFPST_GROUP_DESC request - OF1.5 (ofp-print.at:2252): ok     (0m0.012s 0m0.005s)
292. NXST_GROUP_DESC reply - OF1.0 (ofp-print.at:2261): ok     (0m0.016s 0m0.000s)
293. OFPST_GROUP_DESC reply - OF1.1 (ofp-print.at:2286): ok     (0m0.011s 0m0.006s)
294. OFPST_GROUP_DESC reply - OF1.5 (ofp-print.at:2303): ok     (0m0.014s 0m0.002s)
295. NXST_GROUP_FEATURES request (ofp-print.at:2328): ok     (0m0.014s 0m0.002s)
296. OFPST_GROUP_FEATURES request (ofp-print.at:2336): ok     (0m0.012s 0m0.004s)
297. NXST_GROUP_FEATURES reply (ofp-print.at:2344): ok     (0m0.016s 0m0.000s)
298. OFPST_GROUP_FEATURES reply (ofp-print.at:2371): ok     (0m0.017s 0m0.000s)
299. OFPST_PORT_DESC request - OF1.0 (ofp-print.at:2398): ok     (0m0.010s 0m0.006s)
300. OFPST_PORT_DESC request - OF1.5 (ofp-print.at:2405): ok     (0m0.016s 0m0.000s)
301. OFPST_PORT_DESC reply - OF1.0 (ofp-print.at:2414): ok     (0m0.015s 0m0.003s)
302. OFPST_PORT_DESC reply - OF1.4 (ofp-print.at:2433): ok     (0m0.010s 0m0.005s)
303. OFPT_METER_MOD request - OF1.3 (ofp-print.at:2454): ok     (0m0.011s 0m0.004s)
304. OFPT_METER_MOD request - bad band - OF1.3 (ofp-print.at:2465): ok     (0m0.014s 0m0.002s)
305. OFPT_METER_MOD request - bad command - OF1.3 (ofp-print.at:2477): ok     (0m0.011s 0m0.005s)
306. OFPT_METER_MOD request - bad flags - OF1.3 (ofp-print.at:2487): ok     (0m0.014s 0m0.002s)
307. OFPST_METER request - OF1.3 (ofp-print.at:2499): ok     (0m0.010s 0m0.006s)
308. OFPST_METER_CONFIG request - OF1.3 (ofp-print.at:2506): ok     (0m0.011s 0m0.005s)
309. OFPST_METER_FEATURES request - OF1.3 (ofp-print.at:2513): ok     (0m0.013s 0m0.003s)
310. OFPST_METER_FEATURES reply - OF1.3 (ofp-print.at:2520): ok     (0m0.016s 0m0.000s)
311. OFPST_METER_CONFIG reply - OF1.3 (ofp-print.at:2533): ok     (0m0.014s 0m0.002s)
312. OFPST_METER reply - OF1.3 (ofp-print.at:2553): ok     (0m0.008s 0m0.009s)
313. OFPST_TABLE_FEATURES request - OF1.3 (ofp-print.at:2577): ok     (0m0.013s 0m0.005s)
314. OFPT_BARRIER_REQUEST - OF1.0 (ofp-print.at:2796): ok     (0m0.015s 0m0.001s)
315. OFPT_BARRIER_REQUEST - OF1.1 (ofp-print.at:2803): ok     (0m0.009s 0m0.006s)
316. OFPT_BARRIER_REQUEST - OF1.2 (ofp-print.at:2810): ok     (0m0.012s 0m0.005s)
317. OFPT_BARRIER_REQUEST - OF1.3 (ofp-print.at:2817): ok     (0m0.015s 0m0.001s)
318. OFPT_BARRIER_REPLY - OF1.0 (ofp-print.at:2824): ok     (0m0.010s 0m0.007s)
319. OFPT_BARRIER_REPLY - OF1.1 (ofp-print.at:2831): ok     (0m0.010s 0m0.006s)
320. OFPT_BARRIER_REPLY - OF1.2 (ofp-print.at:2838): ok     (0m0.010s 0m0.006s)
321. OFPT_BARRIER_REPLY - OF1.3 (ofp-print.at:2845): ok     (0m0.013s 0m0.003s)
322. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.0 (ofp-print.at:2852): ok     (0m0.010s 0m0.005s)
323. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.2 (ofp-print.at:2859): ok     (0m0.007s 0m0.010s)
324. OFPST_QUEUE_DESC request - OF1.4 (ofp-print.at:2867): ok     (0m0.016s 0m0.001s)
325. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.0 (ofp-print.at:2876): ok     (0m0.010s 0m0.005s)
326. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.1 (ofp-print.at:2891): ok     (0m0.009s 0m0.006s)
327. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.2 (ofp-print.at:2906): ok     (0m0.007s 0m0.009s)
328. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.3 (ofp-print.at:2921): ok     (0m0.011s 0m0.006s)
329. OFPST_QUEUE_DESC reply - OF1.4 (ofp-print.at:2937): ok     (0m0.010s 0m0.006s)
330. OFPT_SET_ASYNC - OF1.3 (ofp-print.at:2956): ok     (0m0.013s 0m0.003s)
331. OFPT_ROLE_REQUEST - OF1.2 (ofp-print.at:2985): ok     (0m0.011s 0m0.005s)
332. OFPT_ROLE_REQUEST - nochange - OF1.2 (ofp-print.at:2995): ok     (0m0.016s 0m0.001s)
333. NXT_ROLE_REQUEST (ofp-print.at:3005): ok     (0m0.015s 0m0.001s)
334. OFPT_ROLE_REPLY - OF1.2 (ofp-print.at:3015): ok     (0m0.012s 0m0.006s)
335. NXT_ROLE_REPLY (ofp-print.at:3025): ok     (0m0.010s 0m0.006s)
336. OFP_ROLE_STATUS - master, experimenter - OF1.3 (ofp-print.at:3035): ok     (0m0.015s 0m0.002s)
337. OFP_ROLE_STATUS - master, config - OF1.3 (ofp-print.at:3045): ok     (0m0.015s 0m0.002s)
338. OFP_ROLE_STATUS - master, config,generation - OF1.3 (ofp-print.at:3055): ok     (0m0.015s 0m0.001s)
339. OFP_ROLE_STATUS - master, experimenter - OF1.4 (ofp-print.at:3065): ok     (0m0.014s 0m0.003s)
340. OFP_ROLE_STATUS - master, config - OF1.4 (ofp-print.at:3075): ok     (0m0.009s 0m0.007s)
341. OFP_ROLE_STATUS - master, config,generation - OF1.4 (ofp-print.at:3085): ok     (0m0.011s 0m0.006s)
342. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:3095): ok     (0m0.010s 0m0.006s)
343. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:3107): ok     (0m0.012s 0m0.005s)
344. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:3119): ok     (0m0.014s 0m0.002s)
345. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:3130): ok     (0m0.014s 0m0.002s)
346. NXT_SET_PACKET_IN (ofp-print.at:3141): ok     (0m0.010s 0m0.008s)
347. NXT_PACKET_IN (ofp-print.at:3151): ok     (0m0.009s 0m0.007s)
348. NXT_PACKET_IN, with hex output of packet data (ofp-print.at:3172): ok     (0m0.014s 0m0.002s)
349. NX_PACKET_IN2 (ofp-print.at:3197): ok     (0m0.010s 0m0.006s)
350. NXT_SET_ASYNC_CONFIG (ofp-print.at:3220): ok     (0m0.016s 0m0.001s)
351. OFPT_SET_ASYNC_CONFIG (ofp-print.at:3248): ok     (0m0.008s 0m0.009s)
352. OFPT_SET_ASYNC_CONFIG - invalid mask - OF1.4 (ofp-print.at:3275): ok     (0m0.017s 0m0.004s)
353. OFPT_SET_ASYNC_CONFIG - unsupported configuration - OF1.4 (ofp-print.at:3294): ok     (0m0.018s 0m0.004s)
354. NXT_SET_CONTROLLER_ID (ofp-print.at:3313): ok     (0m0.013s 0m0.005s)
355. NXT_FLOW_MONITOR_CANCEL (ofp-print.at:3323): ok     (0m0.009s 0m0.009s)
356. NXT_FLOW_MONITOR_PAUSED (ofp-print.at:3333): ok     (0m0.009s 0m0.007s)
357. NXT_FLOW_MONITOR_RESUMED (ofp-print.at:3342): ok     (0m0.014s 0m0.003s)
358. NXT_SET_FLOW_FORMAT (ofp-print.at:3351): ok     (0m0.012s 0m0.005s)
359. NXT_FLOW_MOD, low verbosity (ofp-print.at:3362): ok     (0m0.008s 0m0.010s)
360. NXT_FLOW_MOD, high verbosity (ofp-print.at:3378): ok     (0m0.009s 0m0.008s)
361. NXT_GROUP_MOD add - OF1.0 (ofp-print.at:3392): ok     (0m0.015s 0m0.003s)
362. OFPT_GROUP_MOD - OF1.1 (ofp-print.at:3416): ok     (0m0.013s 0m0.004s)
363. OFPT_GROUP_MOD add - OF1.5 (ofp-print.at:3432): ok     (0m0.013s 0m0.003s)
364. OFPT_GROUP_MOD insert bucket - OF1.5 (ofp-print.at:3453): ok     (0m0.008s 0m0.009s)
365. NXT_FLOW_REMOVED (ofp-print.at:3471): ok     (0m0.011s 0m0.006s)
366. NXT_FLOW_MOD_TABLE_ID (ofp-print.at:3487): ok     (0m0.010s 0m0.007s)
367. NXT_RESUME (ofp-print.at:3497): ok     (0m0.014s 0m0.002s)
368. NXST_FLOW request (ofp-print.at:3509): ok     (0m0.016s 0m0.001s)
369. NXST_FLOW reply (ofp-print.at:3519): ok     (0m0.015s 0m0.003s)
370. NXST_AGGREGATE request (ofp-print.at:3673): ok     (0m0.015s 0m0.004s)
371. NXST_AGGREGATE reply (ofp-print.at:3683): ok     (0m0.007s 0m0.010s)
372. NXST_FLOW_MONITOR request (ofp-print.at:3694): ok     (0m0.011s 0m0.004s)
373. NXST_FLOW_MONITOR reply (ofp-print.at:3707): ok     (0m0.008s 0m0.009s)
374. OFPT_BUNDLE_CONTROL - atomic OPEN_REQUEST (ofp-print.at:3722): ok     (0m0.010s 0m0.007s)
375. OFPT_BUNDLE_CONTROL - ordered OPEN_REQUEST (ofp-print.at:3733): ok     (0m0.014s 0m0.002s)
376. OFPT_BUNDLE_CONTROL - atomic ordered OPEN_REQUEST (ofp-print.at:3744): ok     (0m0.010s 0m0.007s)
377. OFPT_BUNDLE_CONTROL - OPEN_REPLY (ofp-print.at:3755): ok     (0m0.015s 0m0.001s)
378. OFPT_BUNDLE_CONTROL - CLOSE_REQUEST (ofp-print.at:3766): ok     (0m0.014s 0m0.002s)
379. OFPT_BUNDLE_CONTROL - CLOSE_REPLY (ofp-print.at:3777): ok     (0m0.013s 0m0.004s)
380. OFPT_BUNDLE_CONTROL - COMMIT_REQUEST (ofp-print.at:3788): ok     (0m0.013s 0m0.004s)
381. OFPT_BUNDLE_CONTROL - COMMIT_REPLY (ofp-print.at:3799): ok     (0m0.012s 0m0.006s)
382. OFPT_BUNDLE_CONTROL - DISCARD_REQUEST (ofp-print.at:3810): ok     (0m0.011s 0m0.005s)
383. OFPT_BUNDLE_CONTROL - DISCARD_REPLY (ofp-print.at:3821): ok     (0m0.010s 0m0.006s)
384. OFPT_BUNDLE_ADD_MESSAGE - verify xid (ofp-print.at:3832): ok     (0m0.013s 0m0.004s)
385. OFPT_BUNDLE_ADD_MESSAGE - reject OFPT_HELLO (ofp-print.at:3844): ok     (0m0.017s 0m0.002s)
386. OFPT_BUNDLE_ADD_MESSAGE - FLOW_MOD (ofp-print.at:3858): ok     (0m0.017s 0m0.000s)
387. OFPT_BUNDLE_ADD_MESSAGE - PORT_MOD (ofp-print.at:3878): ok     (0m0.010s 0m0.006s)
388. OFPT_BUNDLE_ADD_MESSAGE - GROUP_MOD (ofp-print.at:3895): ok     (0m0.012s 0m0.005s)
389. OFPT_BUNDLE_ADD_MESSAGE - PACKET_OUT (ofp-print.at:3919): ok     (0m0.011s 0m0.005s)
390. NXST_IPFIX_BRIDGE - request (ofp-print.at:3938): ok     (0m0.017s 0m0.003s)
391. NXST_IPFIX_BRIDGE - reply (ofp-print.at:3948): ok     (0m0.010s 0m0.035s)
392. NXST_IPFIX_FLOW - request (ofp-print.at:3971): ok     (0m0.015s 0m0.051s)
393. NXST_IPFIX_FLOW - reply (ofp-print.at:3981): ok     (0m0.010s 0m0.039s)
394. NXT_CT_FLUSH_ZONE (ofp-print.at:4017): ok     (0m0.017s 0m0.012s)
395. encoding hellos (ofp-util.at:3): ok     (0m0.109s 0m0.098s)
396. parsing key-value pairs (ofp-util.at:54): ok     (0m0.060s 0m0.013s)
397. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.0 (ofp-errors.at:3): ok     (0m0.012s 0m0.004s)
398. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.1 (ofp-errors.at:11): ok     (0m0.016s 0m0.001s)
399. OFPT_ERROR with type OFPET_BAD_REQUEST - OF1.0 (ofp-errors.at:19): ok     (0m0.015s 0m0.002s)
400. OFPT_ERROR prints type of truncated inner messages (ofp-errors.at:29): ok     (0m0.011s 0m0.005s)
401. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.0 (ofp-errors.at:46): ok     (0m0.012s 0m0.004s)
402. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.1 (ofp-errors.at:54): ok     (0m0.013s 0m0.004s)
403. OFPT_ERROR with type OFPFMFC_OVERLAP - OF1.0 (ofp-errors.at:64): ok     (0m0.012s 0m0.006s)
404. OFPT_ERROR with type OFPBIC_UNSUP_INST - OF1.1 (ofp-errors.at:73): ok     (0m0.014s 0m0.005s)
405. OFPT_ERROR with type OFPBIC_DUP_INST - OF1.4 (ofp-errors.at:83): ok     (0m0.013s 0m0.005s)
406. encoding OFPBIC_* experimenter errors (ofp-errors.at:97): ok     (0m0.025s 0m0.008s)
407. encoding errors extension that became official (ofp-errors.at:119): ok     (0m0.023s 0m0.025s)
408. decoding OFPBIC_* experimenter errors (ofp-errors.at:138): ok     (0m0.027s 0m0.022s)
409. decoding experimenter errors (ofp-errors.at:154): ok     (0m0.071s 0m0.023s)
410. encoding experimenter errors (ofp-errors.at:186): ok     (0m0.099s 0m0.030s)
411. ovs-ofctl parse-flows choice of protocol (ovs-ofctl.at:3): ok     (0m1.927s 0m0.643s)
412. ovs-ofctl parse-flows (OpenFlow 1.0) (ovs-ofctl.at:181): ok     (0m0.018s 0m0.003s)
413. ovs-ofctl parse-flows (OpenFlow 1.1) (ovs-ofctl.at:248): ok     (0m0.017s 0m0.003s)
414. ovs-ofctl parse-flows (OpenFlow 1.2) (ovs-ofctl.at:287): ok     (0m0.015s 0m0.004s)
415. ovs-ofctl parse-flow with invalid mask (ovs-ofctl.at:338): ok     (0m0.242s 0m0.094s)
416. ovs-ofctl action inconsistency (OpenFlow 1.1) (ovs-ofctl.at:377): ok     (0m0.117s 0m0.039s)
417. ovs-ofctl parse-flows (skb_priority) (ovs-ofctl.at:386): ok     (0m0.010s 0m0.007s)
418. ovs-ofctl parse-flows (NXM) (ovs-ofctl.at:398): ok     (0m0.010s 0m0.010s)
419. ovs-ofctl -F nxm parse-flows (ovs-ofctl.at:497): ok     (0m0.017s 0m0.002s)
420. ovs-ofctl -F nxm -mmm parse-flows (ovs-ofctl.at:576): ok     (0m0.018s 0m0.003s)
421. ovs-ofctl parse-nx-match (ovs-ofctl.at:657): ok     (0m0.018s 0m0.006s)
422. ovs-ofctl parse-ofp10-match (ovs-ofctl.at:1271): ok     (0m0.017s 0m0.004s)
423. ovs-ofctl parse-ofp11-match (ovs-ofctl.at:1488): ok     (0m0.013s 0m0.007s)
424. ovs-ofctl parse-nx-match loose (ovs-ofctl.at:1814): ok     (0m0.026s 0m0.007s)
425. ovs-ofctl parse-oxm (OpenFlow 1.2) (ovs-ofctl.at:1835): ok     (0m0.022s 0m0.003s)
426. ovs-ofctl parse-oxm (OpenFlow 1.3) (ovs-ofctl.at:2329): ok     (0m0.010s 0m0.007s)
427. ovs-ofctl parse-oxm (OpenFlow 1.5) (ovs-ofctl.at:2352): ok     (0m0.011s 0m0.006s)
428. ovs-ofctl parse-oxm loose (ovs-ofctl.at:2417): ok     (0m0.024s 0m0.009s)
429. experimenter OXM encoding (ovs-ofctl.at:2438): ok     (0m0.026s 0m0.006s)
430. check TCP flags expression in OXM and NXM (ovs-ofctl.at:2486): ok     (0m0.062s 0m0.017s)
431. ovs-ofctl check-vlan (ovs-ofctl.at:2518): ok     (0m0.120s 0m0.037s)
432. ovs-ofctl -F option and NXM features (ovs-ofctl.at:2615): ok     (0m0.123s 0m0.032s)
433. ovs-ofctl -F option with flow_mods (ovs-ofctl.at:2630): ok     (0m0.121s 0m0.038s)
434. ovs-ofctl dump-flows honors -F option (ovs-ofctl.at:2642): ok     (0m0.113s 0m0.046s)
435. ovs-ofctl dump-flows rejects bad -F option (ovs-ofctl.at:2654): ok     (0m0.098s 0m0.043s)
436. ovs-ofctl add-flow reports non-normalized flows (ovs-ofctl.at:2663): ok     (0m0.087s 0m0.053s)
437. ovs-ofctl dump-flows with sorting (ovs-ofctl.at:2677): ok     (0m0.192s 0m0.084s)
438. ovs-ofctl dump-flows --names (ovs-ofctl.at:2780): ok     (0m0.177s 0m0.074s)
439. ovs-ofctl diff-flows (ovs-ofctl.at:2817): ok     (0m4.706s 0m1.951s)
440. ovs-ofctl diff-flows - tunnel metadata (ovs-ofctl.at:2841): ok     (0m0.131s 0m0.041s)
441. ovs-ofctl diff-flows - suppress false differences (ovs-ofctl.at:2877): ok     (0m0.135s 0m0.083s)
442. ovs-ofctl -F and -O interaction (ovs-ofctl.at:2894): ok     (0m0.081s 0m0.015s)
443. ovs-ofctl ofp-parse (ovs-ofctl.at:2915): ok     (0m0.025s 0m0.009s)
444. tcp flags - filtering (ovs-ofctl.at:2933): ok     (0m0.213s 0m0.075s)
445. ovs-ofctl rule with importance (ovs-ofctl.at:3002): ok     (0m0.195s 0m0.085s)
446. ovs-ofctl replace-flows with importance (ovs-ofctl.at:3029): ok     (0m0.175s 0m0.062s)
447. ovs-ofctl replace-flows with --bundle (ovs-ofctl.at:3048): ok     (0m0.171s 0m0.062s)
448. ovs-ofctl ct-flush-zone (ovs-ofctl.at:3176): ok     (0m0.116s 0m0.039s)
449. OVS datapath key parsing and formatting - valid forms (odp.at:3): ok     (0m0.028s 0m0.020s)
450. OVS datapath wildcarded key parsing and formatting - valid forms (odp.at:113): ok     (0m0.027s 0m0.012s)
451. OVS datapath wildcarded key filtering. (odp.at:202): ok     (0m0.129s 0m0.044s)
452. OVS datapath actions parsing and formatting - valid forms (odp.at:267): ok     (0m0.016s 0m0.006s)
453. OVS datapath actions parsing and formatting - invalid forms (odp.at:390): ok     (0m0.015s 0m0.002s)
454. MPLS xlate action (mpls-xlate.at:3): ok     (0m0.685s 0m0.279s)
455. MPLS xlate action - patch-port (mpls-xlate.at:147): ok     (0m0.194s 0m0.068s)
456. MPLS xlate action - group bucket (mpls-xlate.at:191): ok     (0m0.180s 0m0.076s)
457. modulo_n multipath link selection (multipath.at:10): ok     (0m0.835s 0m0.000s)
458. hash_threshold multipath link selection (multipath.at:78): ok     (0m0.814s 0m0.004s)
459. hrw multipath link selection (multipath.at:146): ok     (0m1.562s 0m0.006s)
460. iter_hash multipath link selection (multipath.at:214): ok     (0m0.906s 0m0.005s)
461. multipath action missing argument (multipath.at:282): ok     (0m0.013s 0m0.004s)
462. multipath action bad fields (multipath.at:288): ok     (0m0.010s 0m0.006s)
463. multipath action bad algorithm (multipath.at:294): ok     (0m0.011s 0m0.006s)
464. multipath action bad n_links (multipath.at:300): ok     (0m0.011s 0m0.005s)
465. multipath action destination too narrow (multipath.at:306): ok     (0m0.014s 0m0.003s)
466. learning action - parsing and formatting (learn.at:3): ok     (0m0.010s 0m0.007s)
467. learning action - parsing and formatting - illegal in_port_oxm (learn.at:28): ok     (0m0.014s 0m0.005s)
468. learning action - parsing and formatting - OXM (learn.at:37): ok     (0m0.012s 0m0.006s)
469. learning action - examples (learn.at:50): ok     (0m0.009s 0m0.009s)
470. learning action - satisfied prerequisites (learn.at:68): ok     (0m0.013s 0m0.003s)
471. learning action - invalid prerequisites (learn.at:83): ok     (0m0.030s 0m0.008s)
472. learning action - too-long immediate value (learn.at:98): ok     (0m0.026s 0m0.008s)
473. learning action - standard VLAN+MAC learning (learn.at:112): ok     (0m0.202s 0m0.108s)
474. learning action - learn refreshes hard_age (learn.at:178): ok     (0m1.122s 0m0.561s)
475. learning action - TCPv4 port learning (learn.at:244): ok     (0m0.164s 0m0.048s)
476. learning action - TCPv6 port learning (learn.at:269): ok     (0m0.154s 0m0.053s)
477. learning action - self-modifying flow (learn.at:300): ok     (0m0.323s 0m0.153s)
478. learning action - self-modifying flow with idle_timeout (learn.at:342): ok     (0m0.544s 0m0.222s)
479. learning action - self-modifying flow with hard_timeout (learn.at:400): ok     (0m0.582s 0m0.212s)
480. learning action - fin_timeout feature (learn.at:496): ok     (0m0.131s 0m0.049s)
481. learning action - delete_learned feature (learn.at:510): ok     (0m0.330s 0m0.135s)
482. learning action - delete_learned/limit with packet (learn.at:628): ok     (0m0.203s 0m0.087s)
483. learning action - limit (learn.at:666): ok     (0m0.244s 0m0.114s)
484. learning action - limit result_dst (learn.at:705): ok     (0m0.177s 0m0.088s)
485. learning action - different limits (learn.at:738): ok     (0m1.022s 0m0.465s)
486. unix vconn - refuse connection (vconn.at:20): ok     (0m0.010s 0m0.005s)
487. unix vconn - accept then close (vconn.at:20): ok     (0m0.007s 0m0.007s)
488. unix vconn - read hello (vconn.at:20): ok     (0m0.010s 0m0.005s)
489. unix vconn - send plain hello (vconn.at:20): ok     (0m0.008s 0m0.007s)
490. unix vconn - send long hello (vconn.at:20): ok     (0m0.010s 0m0.006s)
491. unix vconn - send echo hello (vconn.at:20): ok     (0m0.009s 0m0.005s)
492. unix vconn - send short hello (vconn.at:20): ok     (0m0.010s 0m0.005s)
493. unix vconn - send invalid version hello (vconn.at:20): ok     (0m0.008s 0m0.007s)
494. tcp vconn - refuse connection (vconn.at:21): ok     (0m0.013s 0m0.002s)
495. tcp vconn - accept then close (vconn.at:21): ok     (0m0.011s 0m0.005s)
496. tcp vconn - read hello (vconn.at:21): ok     (0m0.010s 0m0.005s)
497. tcp vconn - send plain hello (vconn.at:21): ok     (0m0.008s 0m0.007s)
498. tcp vconn - send long hello (vconn.at:21): ok     (0m0.009s 0m0.006s)
499. tcp vconn - send echo hello (vconn.at:21): ok     (0m0.012s 0m0.003s)
500. tcp vconn - send short hello (vconn.at:21): ok     (0m0.011s 0m0.005s)
501. tcp vconn - send invalid version hello (vconn.at:21): ok     (0m0.007s 0m0.007s)
502. ssl vconn - refuse connection (vconn.at:22): ok     (0m0.018s 0m0.002s)
503. ssl vconn - accept then close (vconn.at:22): ok     (0m0.012s 0m0.009s)
504. ssl vconn - read hello (vconn.at:22): ok     (0m0.018s 0m0.006s)
505. ssl vconn - send plain hello (vconn.at:22): ok     (0m0.019s 0m0.005s)
506. ssl vconn - send long hello (vconn.at:22): ok     (0m0.018s 0m0.006s)
507. ssl vconn - send echo hello (vconn.at:22): ok     (0m0.020s 0m0.004s)
508. ssl vconn - send short hello (vconn.at:22): ok     (0m0.020s 0m0.004s)
509. ssl vconn - send invalid version hello (vconn.at:22): ok     (0m0.016s 0m0.007s)
510. components of "/usr/lib" are "/usr", "lib" (file_name.at:13): ok     (0m0.011s 0m0.006s)
511. components of "/usr/" are "/", "usr" (file_name.at:14): ok     (0m0.010s 0m0.004s)
512. components of "usr" are ".", "usr" (file_name.at:15): ok     (0m0.007s 0m0.009s)
513. components of "/" are "/", "/" (file_name.at:16): ok     (0m0.009s 0m0.006s)
514. components of "." are ".", "." (file_name.at:17): ok     (0m0.012s 0m0.002s)
515. components of ".." are ".", ".." (file_name.at:18): ok     (0m0.011s 0m0.003s)
516. components of "//" are "//", "//" (file_name.at:19): ok     (0m0.012s 0m0.003s)
517. components of "//foo" are "//", "foo" (file_name.at:20): ok     (0m0.013s 0m0.001s)
518. components of "" are ".", "." (file_name.at:21): ok     (0m0.012s 0m0.003s)
519. components of "dir/file" are "dir", "file" (file_name.at:24): ok     (0m0.010s 0m0.004s)
520. components of "dir/file/" are "dir", "file" (file_name.at:25): ok     (0m0.007s 0m0.008s)
521. components of "dir/file//" are "dir", "file" (file_name.at:26): ok     (0m0.014s 0m0.001s)
522. components of "///foo" are "/", "foo" (file_name.at:27): ok     (0m0.007s 0m0.007s)
523. follow_symlinks - relative symlinks (file_name.at:37): ok     (0m0.035s 0m0.014s)
524. follow_symlinks - absolute symlinks (file_name.at:54): ok     (0m0.037s 0m0.017s)
525. follow_symlinks - symlinks to directories (file_name.at:71): ok     (0m0.040s 0m0.004s)
526. follow_symlinks - nonexistent targets (file_name.at:84): ok     (0m0.036s 0m0.010s)
527. follow_symlinks - regular files (file_name.at:92): ok     (0m0.008s 0m0.008s)
528. follow_symlinks - device targets (file_name.at:97): ok     (0m0.022s 0m0.008s)
529. follow_symlinks - nonexistent files (file_name.at:106): ok     (0m0.041s 0m0.015s)
530. follow_symlinks - symlink loop (file_name.at:114): ok     (0m0.015s 0m0.006s)
531. wikipedia test vector 1 (aes128.at:10): ok     (0m0.009s 0m0.005s)
532. wikipedia test vector 2 (aes128.at:16): ok     (0m0.008s 0m0.007s)
533. NIST KAT ECBKeySbox128e vector 0 (aes128.at:22): ok     (0m0.013s 0m0.001s)
534. NIST KAT ECBKeySbox128e vector 1 (aes128.at:28): ok     (0m0.010s 0m0.005s)
535. NIST KAT ECBKeySbox128e vector 2 (aes128.at:34): ok     (0m0.010s 0m0.005s)
536. NIST KAT ECBKeySbox128e vector 3 (aes128.at:40): ok     (0m0.011s 0m0.003s)
537. NIST KAT ECBKeySbox128e vector 4 (aes128.at:46): ok     (0m0.009s 0m0.005s)
538. NIST KAT ECBKeySbox128e vector 5 (aes128.at:52): ok     (0m0.013s 0m0.003s)
539. NIST KAT ECBKeySbox128e vector 6 (aes128.at:58): ok     (0m0.012s 0m0.003s)
540. NIST KAT ECBKeySbox128e vector 7 (aes128.at:64): ok     (0m0.008s 0m0.007s)
541. NIST KAT ECBKeySbox128e vector 8 (aes128.at:70): ok     (0m0.014s 0m0.002s)
542. NIST KAT ECBKeySbox128e vector 9 (aes128.at:76): ok     (0m0.014s 0m0.001s)
543. NIST KAT ECBKeySbox128e vector 10 (aes128.at:82): ok     (0m0.010s 0m0.021s)
544. NIST KAT ECBKeySbox128e vector 11 (aes128.at:88): ok     (0m0.010s 0m0.006s)
545. NIST KAT ECBKeySbox128e vector 12 (aes128.at:94): ok     (0m0.009s 0m0.006s)
546. NIST KAT ECBKeySbox128e vector 13 (aes128.at:100): ok     (0m0.011s 0m0.004s)
547. NIST KAT ECBKeySbox128e vector 14 (aes128.at:106): ok     (0m0.012s 0m0.002s)
548. NIST KAT ECBKeySbox128e vector 15 (aes128.at:112): ok     (0m0.015s 0m0.001s)
549. NIST KAT ECBKeySbox128e vector 16 (aes128.at:118): ok     (0m0.012s 0m0.003s)
550. NIST KAT ECBKeySbox128e vector 17 (aes128.at:124): ok     (0m0.014s 0m0.002s)
551. NIST KAT ECBKeySbox128e vector 18 (aes128.at:130): ok     (0m0.013s 0m0.002s)
552. NIST KAT ECBKeySbox128e vector 19 (aes128.at:136): ok     (0m0.010s 0m0.005s)
553. NIST KAT ECBKeySbox128e vector 20 (aes128.at:142): ok     (0m0.015s 0m0.000s)
554. unixctl ovs-vswitchd exit - Python2 (unixctl-py.at:19): ok     (0m0.137s 0m0.058s)
555. unixctl ovs-vswitchd exit - Python3 (unixctl-py.at:20): ok     (0m0.181s 0m0.091s)
556. unixctl ovs-vswitchd list-commands - Python2 (unixctl-py.at:37): ok     (0m0.154s 0m0.055s)
557. unixctl ovs-vswitchd list-commands - Python3 (unixctl-py.at:38): ok     (0m0.162s 0m0.062s)
558. unixctl ovs-vswitchd arguments - Python2 (unixctl-py.at:83): ok     (0m0.346s 0m0.154s)
559. unixctl ovs-vswitchd arguments - Python3 (unixctl-py.at:84): ok     (0m0.393s 0m0.312s)
560. unixctl bad target - Python2 (unixctl-py.at:108): ok     (0m0.088s 0m0.048s)
561. unixctl bad target - Python3 (unixctl-py.at:109): ok     (0m0.111s 0m0.075s)
562. unixctl server - Python2 (unixctl-py.at:182): ok     (0m0.395s 0m0.241s)
563. unixctl server - Python3 (unixctl-py.at:183): ok     (0m0.547s 0m0.320s)
564. unixctl server errors - Python2 (unixctl-py.at:191): ok     (0m0.052s 0m0.005s)
565. unixctl server errors - Python3 (unixctl-py.at:192): ok     (0m0.029s 0m0.080s)
566. UUID generation, parsing, serialization (uuid.at:15): ok     (0m1.809s 0m0.859s)
567. empty array - C (json.at:84): ok     (0m0.014s 0m0.004s)
568. empty array - Python2 (json.at:84): ok     (0m0.020s 0m0.002s)
569. empty array - Python3 (json.at:84): ok     (0m0.021s 0m0.034s)
570. single-element array - C (json.at:85): ok     (0m0.010s 0m0.008s)
571. single-element array - Python2 (json.at:85): ok     (0m0.023s 0m0.001s)
572. single-element array - Python3 (json.at:85): ok     (0m0.033s 0m0.005s)
573. 2-element array - C (json.at:86): ok     (0m0.012s 0m0.007s)
574. 2-element array - Python2 (json.at:86): ok     (0m0.016s 0m0.007s)
575. 2-element array - Python3 (json.at:86): ok     (0m0.016s 0m0.036s)
576. many-element array - C (json.at:87): ok     (0m0.014s 0m0.005s)
577. many-element array - Python2 (json.at:87): ok     (0m0.010s 0m0.015s)
578. many-element array - Python3 (json.at:87): ok     (0m0.018s 0m0.036s)
579. missing comma - C (json.at:90): ok     (0m0.014s 0m0.010s)
580. missing comma - Python2 (json.at:90): ok     (0m0.025s 0m0.001s)
581. missing comma - Python3 (json.at:90): ok     (0m0.037s 0m0.015s)
582. trailing comma not allowed - C (json.at:92): ok     (0m0.015s 0m0.011s)
583. trailing comma not allowed - Python2 (json.at:92): ok     (0m0.027s 0m0.014s)
584. trailing comma not allowed - Python3 (json.at:92): ok     (0m0.024s 0m0.047s)
585. doubled comma not allowed - C (json.at:94): ok     (0m0.019s 0m0.006s)
586. doubled comma not allowed - Python2 (json.at:94): ok     (0m0.017s 0m0.010s)
587. doubled comma not allowed - Python3 (json.at:94): ok     (0m0.038s 0m0.016s)
588. empty string - C (json.at:99): ok     (0m0.014s 0m0.005s)
589. empty string - Python2 (json.at:99): ok     (0m0.015s 0m0.017s)
590. empty string - Python3 (json.at:99): ok     (0m0.031s 0m0.020s)
591. 1-character strings - C (json.at:100): ok     (0m0.016s 0m0.004s)
592. 1-character strings - Python2 (json.at:100): ok     (0m0.016s 0m0.011s)
593. 1-character strings - Python3 (json.at:100): ok     (0m0.035s 0m0.012s)
594. escape sequences - C (json.at:103): ok     (0m0.009s 0m0.009s)
595. escape sequences - Python2 (json.at:103): ok     (0m0.011s 0m0.018s)
596. escape sequences - Python3 (json.at:103): ok     (0m0.039s 0m0.007s)
597. Unicode escape sequences - C (json.at:106): ok     (0m0.018s 0m0.001s)
598. Unicode escape sequences - Python2 (json.at:106): ok     (0m0.005s 0m0.023s)
599. Unicode escape sequences - Python3 (json.at:106): ok     (0m0.034s 0m0.014s)
600. surrogate pairs - C (json.at:109): ok     (0m0.020s 0m0.001s)
601. surrogate pairs - Python (json.at:112): ok     (0m0.020s 0m0.004s)
602. a string by itself is not valid JSON - C (json.at:115): ok     (0m0.016s 0m0.005s)
603. a string by itself is not valid JSON - Python2 (json.at:115): ok     (0m0.022s 0m0.001s)
604. a string by itself is not valid JSON - Python3 (json.at:115): ok     (0m0.019s 0m0.045s)
605. end of line in quoted string - C (json.at:117): ok     (0m0.020s 0m0.003s)
606. end of line in quoted string - Python2 (json.at:117): ok     (0m0.010s 0m0.018s)
607. end of line in quoted string - Python3 (json.at:117): ok     (0m0.033s 0m0.029s)
608. formfeed in quoted string - C (json.at:121): ok     (0m0.019s 0m0.001s)
609. formfeed in quoted string - Python2 (json.at:121): ok     (0m0.022s 0m0.008s)
610. formfeed in quoted string - Python3 (json.at:121): ok     (0m0.021s 0m0.038s)
611. bad escape in quoted string - C (json.at:124): ok     (0m0.014s 0m0.005s)
612. bad escape in quoted string - Python2 (json.at:124): ok     (0m0.018s 0m0.013s)
613. bad escape in quoted string - Python3 (json.at:124): ok     (0m0.027s 0m0.032s)
614. \u must be followed by 4 hex digits (1) - C (json.at:127): ok     (0m0.013s 0m0.006s)
615. \u must be followed by 4 hex digits (1) - Python2 (json.at:127): ok     (0m0.012s 0m0.016s)
616. \u must be followed by 4 hex digits (1) - Python3 (json.at:127): ok     (0m0.053s 0m0.011s)
617. \u must be followed by 4 hex digits (2) - C (json.at:130): ok     (0m0.018s 0m0.001s)
618. \u must be followed by 4 hex digits (2) - Python2 (json.at:130): ok     (0m0.024s 0m0.005s)
619. \u must be followed by 4 hex digits (2) - Python3 (json.at:130): ok     (0m0.019s 0m0.039s)
620. isolated leading surrogate not allowed - C (json.at:133): ok     (0m0.018s 0m0.002s)
621. isolated leading surrogate not allowed - Python2 (json.at:133): ok     (0m0.015s 0m0.009s)
622. isolated leading surrogate not allowed - Python3 (json.at:133): ok     (0m0.037s 0m0.007s)
623. surrogatess must paired properly - C (json.at:136): ok     (0m0.013s 0m0.007s)
624. surrogatess must paired properly - Python2 (json.at:136): ok     (0m0.006s 0m0.024s)
625. surrogatess must paired properly - Python3 (json.at:136): ok     (0m0.014s 0m0.043s)
626. null bytes not allowed - C (json.at:139): ok     (0m0.012s 0m0.008s)
627. null bytes not allowed - Python2 (json.at:139): ok     (0m0.017s 0m0.010s)
628. null bytes not allowed - Python3 (json.at:139): ok     (0m0.015s 0m0.042s)
629. properly quoted backslash at end of string - C (json.at:143): ok     (0m0.012s 0m0.006s)
630. properly quoted backslash at end of string - Python2 (json.at:143): ok     (0m0.011s 0m0.015s)
631. properly quoted backslash at end of string - Python3 (json.at:143): ok     (0m0.040s 0m0.001s)
632. stray backslash at end of string - C (json.at:146): ok     (0m0.010s 0m0.008s)
633. stray backslash at end of string - Python2 (json.at:146): ok     (0m0.005s 0m0.020s)
634. stray backslash at end of string - Python3 (json.at:146): ok     (0m0.022s 0m0.028s)
635. end of input in quoted string - C (json.at:150): ok     (0m0.015s 0m0.001s)
636. end of input in quoted string - Python (json.at:157): ok     (0m0.005s 0m0.019s)
637. empty object - C (json.at:168): ok     (0m0.013s 0m0.006s)
638. empty object - Python2 (json.at:168): ok     (0m0.010s 0m0.012s)
639. empty object - Python3 (json.at:168): ok     (0m0.038s 0m0.004s)
640. simple object - C (json.at:169): ok     (0m0.016s 0m0.003s)
641. simple object - Python2 (json.at:169): ok     (0m0.024s 0m0.000s)
642. simple object - Python3 (json.at:169): ok     (0m0.018s 0m0.043s)
643. bad value - C (json.at:172): ok     (0m0.018s 0m0.002s)
644. bad value - Python2 (json.at:172): ok     (0m0.020s 0m0.005s)
645. bad value - Python3 (json.at:172): ok     (0m0.043s 0m0.002s)
646. missing colon - C (json.at:174): ok     (0m0.017s 0m0.002s)
647. missing colon - Python2 (json.at:174): ok     (0m0.010s 0m0.019s)
648. missing colon - Python3 (json.at:174): ok     (0m0.021s 0m0.034s)
649. missing comma - C (json.at:176): ok     (0m0.016s 0m0.003s)
650. missing comma - Python2 (json.at:176): ok     (0m0.010s 0m0.017s)
651. missing comma - Python3 (json.at:176): ok     (0m0.016s 0m0.038s)
652. trailing comma not allowed - C (json.at:178): ok     (0m0.015s 0m0.003s)
653. trailing comma not allowed - Python2 (json.at:178): ok     (0m0.015s 0m0.007s)
654. trailing comma not allowed - Python3 (json.at:178): ok     (0m0.010s 0m0.043s)
655. doubled comma not allowed - C (json.at:181): ok     (0m0.013s 0m0.006s)
656. doubled comma not allowed - Python2 (json.at:181): ok     (0m0.020s 0m0.002s)
657. doubled comma not allowed - Python3 (json.at:181): ok     (0m0.013s 0m0.042s)
658. names must be strings - C (json.at:184): ok     (0m0.014s 0m0.004s)
659. names must be strings - Python2 (json.at:184): ok     (0m0.013s 0m0.009s)
660. names must be strings - Python3 (json.at:184): ok     (0m0.021s 0m0.034s)
661. null - C (json.at:190): ok     (0m0.013s 0m0.005s)
662. null - Python2 (json.at:190): ok     (0m0.019s 0m0.004s)
663. null - Python3 (json.at:190): ok     (0m0.014s 0m0.039s)
664. false - C (json.at:191): ok     (0m0.012s 0m0.006s)
665. false - Python2 (json.at:191): ok     (0m0.009s 0m0.020s)
666. false - Python3 (json.at:191): ok     (0m0.019s 0m0.035s)
667. true - C (json.at:192): ok     (0m0.017s 0m0.000s)
668. true - Python2 (json.at:192): ok     (0m0.008s 0m0.017s)
669. true - Python3 (json.at:192): ok     (0m0.011s 0m0.042s)
670. a literal by itself is not valid JSON - C (json.at:193): ok     (0m0.016s 0m0.002s)
671. a literal by itself is not valid JSON - Python2 (json.at:193): ok     (0m0.004s 0m0.019s)
672. a literal by itself is not valid JSON - Python3 (json.at:193): ok     (0m0.026s 0m0.015s)
673. nullify is invalid - C (json.at:195): ok     (0m0.015s 0m0.004s)
674. nullify is invalid - Python2 (json.at:195): ok     (0m0.021s 0m0.000s)
675. nullify is invalid - Python3 (json.at:195): ok     (0m0.010s 0m0.045s)
676. nubs is invalid - C (json.at:197): ok     (0m0.013s 0m0.005s)
677. nubs is invalid - Python2 (json.at:197): ok     (0m0.015s 0m0.006s)
678. nubs is invalid - Python3 (json.at:197): ok     (0m0.029s 0m0.012s)
679. xxx is invalid - C (json.at:199): ok     (0m0.011s 0m0.007s)
680. xxx is invalid - Python2 (json.at:199): ok     (0m0.012s 0m0.010s)
681. xxx is invalid - Python3 (json.at:199): ok     (0m0.031s 0m0.010s)
682. integers expressed as reals - C (json.at:204): ok     (0m0.015s 0m0.003s)
683. integers expressed as reals - Python2 (json.at:204): ok     (0m0.009s 0m0.013s)
684. integers expressed as reals - Python3 (json.at:204): ok     (0m0.036s 0m0.005s)
685. large integers - C (json.at:214): ok     (0m0.015s 0m0.003s)
686. large integers - Python2 (json.at:214): ok     (0m0.013s 0m0.010s)
687. large integers - Python3 (json.at:214): ok     (0m0.034s 0m0.005s)
688. large integers expressed as reals - C (json.at:218): ok     (0m0.013s 0m0.005s)
689. large integers expressed as reals - Python2 (json.at:218): ok     (0m0.009s 0m0.018s)
690. large integers expressed as reals - Python3 (json.at:218): ok     (0m0.017s 0m0.036s)
691. C - large integers that overflow to reals (json.at:226): ok     (0m0.009s 0m0.008s)
692. large integers that overflow to reals - Python2 (json.at:230): ok     (0m0.003s 0m0.024s)
693. large integers that overflow to reals - Python3 (json.at:230): ok     (0m0.019s 0m0.042s)
694. negative zero - C (json.at:235): ok     (0m0.021s 0m0.005s)
695. negative zero - Python2 (json.at:235): ok     (0m0.011s 0m0.016s)
696. negative zero - Python3 (json.at:235): ok     (0m0.030s 0m0.013s)
697. reals - C (json.at:240): ok     (0m0.019s 0m0.002s)
698. reals - Python2 (json.at:240): ok     (0m0.010s 0m0.018s)
699. reals - Python3 (json.at:240): ok     (0m0.019s 0m0.040s)
700. scientific notation - C (json.at:244): ok     (0m0.016s 0m0.004s)
701. scientific notation - Python2 (json.at:244): ok     (0m0.021s 0m0.004s)
702. scientific notation - Python3 (json.at:244): ok     (0m0.023s 0m0.041s)
703. C - +/- DBL_MAX (json.at:251): ok     (0m0.018s 0m0.003s)
704. +/- DBL_MAX - Python2 (json.at:255): ok     (0m0.017s 0m0.006s)
705. +/- DBL_MAX - Python3 (json.at:255): ok     (0m0.034s 0m0.007s)
706. negative reals - C (json.at:260): ok     (0m0.014s 0m0.004s)
707. negative reals - Python2 (json.at:260): ok     (0m0.010s 0m0.014s)
708. negative reals - Python3 (json.at:260): ok     (0m0.035s 0m0.005s)
709. negative scientific notation - C (json.at:264): ok     (0m0.012s 0m0.007s)
710. negative scientific notation - Python2 (json.at:264): ok     (0m0.006s 0m0.019s)
711. negative scientific notation - Python3 (json.at:264): ok     (0m0.029s 0m0.024s)
712. 1e-9999 underflows to 0 - C (json.at:268): ok     (0m0.016s 0m0.003s)
713. 1e-9999 underflows to 0 - Python2 (json.at:268): ok     (0m0.009s 0m0.016s)
714. 1e-9999 underflows to 0 - Python3 (json.at:268): ok     (0m0.023s 0m0.017s)
715. a number by itself is not valid JSON - C (json.at:272): ok     (0m0.014s 0m0.004s)
716. a number by itself is not valid JSON - Python2 (json.at:272): ok     (0m0.005s 0m0.020s)
717. a number by itself is not valid JSON - Python3 (json.at:272): ok     (0m0.027s 0m0.021s)
718. leading zeros not allowed - C (json.at:274): ok     (0m0.014s 0m0.005s)
719. leading zeros not allowed - Python2 (json.at:274): ok     (0m0.009s 0m0.016s)
720. leading zeros not allowed - Python3 (json.at:274): ok     (0m0.031s 0m0.009s)
721. 1e9999 is too big - C (json.at:278): ok     (0m0.014s 0m0.005s)
722. 1e9999 is too big - Python2 (json.at:278): ok     (0m0.010s 0m0.016s)
723. 1e9999 is too big - Python3 (json.at:278): ok     (0m0.019s 0m0.035s)
724. exponent bigger than INT_MAX (json.at:282): ok     (0m0.014s 0m0.003s)
725. exponent smaller than INT_MIN (json.at:286): ok     (0m0.014s 0m0.003s)
726. accumulated exponent bigger than INT_MAX (json.at:290): ok     (0m0.009s 0m0.008s)
727. accumulated exponent smaller than INT_MIN (json.at:294): ok     (0m0.014s 0m0.005s)
728. decimal point must be followed by digit - C (json.at:298): ok     (0m0.016s 0m0.002s)
729. decimal point must be followed by digit - Python2 (json.at:298): ok     (0m0.021s 0m0.002s)
730. decimal point must be followed by digit - Python3 (json.at:298): ok     (0m0.014s 0m0.040s)
731. exponent must contain at least one digit (1) - C (json.at:302): ok     (0m0.011s 0m0.007s)
732. exponent must contain at least one digit (1) - Python2 (json.at:302): ok     (0m0.017s 0m0.005s)
733. exponent must contain at least one digit (1) - Python3 (json.at:302): ok     (0m0.015s 0m0.041s)
734. exponent must contain at least one digit (2) - C (json.at:306): ok     (0m0.013s 0m0.006s)
735. exponent must contain at least one digit (2) - Python2 (json.at:306): ok     (0m0.008s 0m0.019s)
736. exponent must contain at least one digit (2) - Python3 (json.at:306): ok     (0m0.021s 0m0.035s)
737. exponent must contain at least one digit (3) - C (json.at:310): ok     (0m0.015s 0m0.003s)
738. exponent must contain at least one digit (3) - Python2 (json.at:310): ok     (0m0.012s 0m0.013s)
739. exponent must contain at least one digit (3) - Python3 (json.at:310): ok     (0m0.032s 0m0.009s)
740. RFC 4267 object example - C (json.at:317): ok     (0m0.015s 0m0.003s)
741. RFC 4267 object example - Python2 (json.at:317): ok     (0m0.011s 0m0.014s)
742. RFC 4267 object example - Python3 (json.at:317): ok     (0m0.014s 0m0.040s)
743. RFC 4267 array example - C (json.at:333): ok     (0m0.011s 0m0.007s)
744. RFC 4267 array example - Python2 (json.at:333): ok     (0m0.007s 0m0.020s)
745. RFC 4267 array example - Python3 (json.at:333): ok     (0m0.010s 0m0.042s)
746. trailing garbage - C (json.at:360): ok     (0m0.016s 0m0.002s)
747. trailing garbage - Python2 (json.at:360): ok     (0m0.012s 0m0.015s)
748. trailing garbage - Python3 (json.at:360): ok     (0m0.031s 0m0.009s)
749. formfeeds are not valid white space - C (json.at:362): ok     (0m0.011s 0m0.007s)
750. formfeeds are not valid white space - Python2 (json.at:362): ok     (0m0.010s 0m0.016s)
751. formfeeds are not valid white space - Python3 (json.at:362): ok     (0m0.027s 0m0.025s)
752. ';' is not a valid token - C (json.at:364): ok     (0m0.012s 0m0.006s)
753. ';' is not a valid token - Python2 (json.at:364): ok     (0m0.019s 0m0.007s)
754. ';' is not a valid token - Python3 (json.at:364): ok     (0m0.031s 0m0.008s)
755. arrays nesting too deep - C (json.at:366): ok     (0m0.012s 0m0.006s)
756. arrays nesting too deep - Python2 (json.at:366): ok     (0m0.017s 0m0.008s)
757. arrays nesting too deep - Python3 (json.at:366): ok     (0m0.031s 0m0.013s)
758. objects nesting too deep - C (json.at:370): ok     (0m0.017s 0m0.002s)
759. objects nesting too deep - Python2 (json.at:370): ok     (0m0.025s 0m0.005s)
760. objects nesting too deep - Python3 (json.at:370): ok     (0m0.033s 0m0.029s)
761. input may not be empty (json.at:375): ok     (0m0.008s 0m0.007s)
762. multiple adjacent objects - C (json.at:383): ok     (0m0.017s 0m0.001s)
763. multiple adjacent objects - Python2 (json.at:383): ok     (0m0.014s 0m0.013s)
764. multiple adjacent objects - Python3 (json.at:383): ok     (0m0.021s 0m0.033s)
765. multiple space-separated objects - C (json.at:388): ok     (0m0.012s 0m0.006s)
766. multiple space-separated objects - Python2 (json.at:388): ok     (0m0.018s 0m0.008s)
767. multiple space-separated objects - Python3 (json.at:388): ok     (0m0.038s 0m0.003s)
768. multiple objects on separate lines - C (json.at:393): ok     (0m0.014s 0m0.004s)
769. multiple objects on separate lines - Python2 (json.at:393): ok     (0m0.018s 0m0.004s)
770. multiple objects on separate lines - Python3 (json.at:393): ok     (0m0.041s 0m0.005s)
771. multiple objects and arrays - C (json.at:400): ok     (0m0.016s 0m0.005s)
772. multiple objects and arrays - Python2 (json.at:400): ok     (0m0.010s 0m0.017s)
773. multiple objects and arrays - Python3 (json.at:400): ok     (0m0.021s 0m0.038s)
774. garbage between multiple objects - C (json.at:406): ok     (0m0.017s 0m0.003s)
775. garbage between multiple objects - Python2 (json.at:406): ok     (0m0.025s 0m0.004s)
776. garbage between multiple objects - Python3 (json.at:406): ok     (0m0.036s 0m0.006s)
777. garbage after multiple objects - C (json.at:410): ok     (0m0.022s 0m0.001s)
778. garbage after multiple objects - Python2 (json.at:410): ok     (0m0.013s 0m0.013s)
779. garbage after multiple objects - Python3 (json.at:410): ok     (0m0.027s 0m0.019s)
780. JSON-RPC request and successful reply (jsonrpc.at:3): ok     (0m0.023s 0m0.008s)
781. JSON-RPC request and error reply (jsonrpc.at:12): ok     (0m0.020s 0m0.011s)
782. JSON-RPC notification (jsonrpc.at:21): ok     (0m0.023s 0m0.010s)
783. JSON-RPC request and successful reply - Python2 (jsonrpc-py.at:15): ok     (0m0.063s 0m0.075s)
784. JSON-RPC request and successful reply - Python3 (jsonrpc-py.at:16): ok     (0m0.130s 0m0.063s)
785. JSON-RPC request and error reply - Python2 (jsonrpc-py.at:30): ok     (0m0.086s 0m0.048s)
786. JSON-RPC request and error reply - Python3 (jsonrpc-py.at:31): ok     (0m0.109s 0m0.074s)
787. JSON-RPC notification - Python2 (jsonrpc-py.at:45): ok     (0m0.100s 0m0.040s)
788. JSON-RPC notification - Python3 (jsonrpc-py.at:46): ok     (0m0.093s 0m0.090s)
789. tunnel - input (tunnel.at:3): ok     (0m0.232s 0m0.086s)
790. tunnel - ECN decapsulation (tunnel.at:65): ok     (0m0.187s 0m0.055s)
791. tunnel - output (tunnel.at:112): ok     (0m0.159s 0m0.065s)
792. tunnel - unencrypted tunnel and not setting skb_mark (tunnel.at:145): ok     (0m0.123s 0m0.051s)
793. tunnel - unencrypted tunnel and setting skb_mark to 1 (tunnel.at:163): ok     (0m0.127s 0m0.055s)
794. tunnel - unencrypted tunnel and setting skb_mark to 2 (tunnel.at:181): ok     (0m0.135s 0m0.052s)
795. tunnel - ToS and TTL inheritance (tunnel.at:199): ok     (0m0.147s 0m0.079s)
796. tunnel - set_tunnel (tunnel.at:238): ok     (0m0.145s 0m0.048s)
797. tunnel - key (tunnel.at:273): ok     (0m0.176s 0m0.075s)
798. tunnel - key match (tunnel.at:323): ok     (0m0.183s 0m0.073s)
799. tunnel - Geneve (tunnel.at:373): ok     (0m0.095s 0m0.049s)
800. tunnel - VXLAN (tunnel.at:385): ok     (0m0.101s 0m0.039s)
801. tunnel - LISP (tunnel.at:397): ok     (0m0.096s 0m0.045s)
802. tunnel - ERSPAN (tunnel.at:409): ok     (0m0.134s 0m0.073s)
803. tunnel - different VXLAN UDP port (tunnel.at:452): ok     (0m0.130s 0m0.071s)
804. ofproto-dpif - set_field - tun_src/tun_dst/tun_id (tunnel.at:481): ok     (0m0.126s 0m0.061s)
805. tunnel - ERSPAN v1/v2 metadata (tunnel.at:512): ok     (0m0.310s 0m0.140s)
806. tunnel - Geneve metadata (tunnel.at:632): ok     (0m0.585s 0m0.257s)
807. tunnel - Geneve option present (tunnel.at:780): ok     (0m0.144s 0m0.095s)
808. tunnel - concomitant IPv6 and IPv4 tunnels (tunnel.at:819): ok     (0m0.136s 0m0.059s)
809. tunnel - Mix Geneve/GRE options (tunnel.at:846): ok     (0m0.192s 0m0.074s)
810. tunnel_push_pop - erspan (tunnel-push-pop.at:3): ok     (0m0.755s 0m0.381s)
811. tunnel_push_pop - action (tunnel-push-pop.at:201): ok     (0m1.054s 0m0.538s)
812. tunnel_push_pop - packet_out (tunnel-push-pop.at:516): ok     (0m0.239s 0m0.110s)
813. tunnel_push_pop - underlay bridge match (tunnel-push-pop.at:554): ok     (0m0.210s 0m0.132s)
814. tunnel_push_pop_ipv6 - ip6erspan (tunnel-push-pop-ipv6.at:3): ok     (0m0.389s 0m0.191s)
815. tunnel_push_pop_ipv6 - action (tunnel-push-pop-ipv6.at:122): ok     (0m0.963s 0m0.450s)
816. appctl - route/add with gateway (ovs-router.at:3): ok     (0m0.125s 0m0.038s)
817. appctl - route/lookup (ovs-router.at:15): ok     (0m0.202s 0m0.077s)
818. appctl - route/lookup6 (ovs-router.at:51): ok     (0m0.203s 0m0.054s)
819. lock and unlock (lockfile.at:15): ok     (0m0.012s 0m0.005s)
820. lock and unlock twice (lockfile.at:17): ok     (0m0.014s 0m0.003s)
821. lock blocks same process (lockfile.at:19): ok     (0m0.016s 0m0.003s)
822. lock blocks same process twice (lockfile.at:23): ok     (0m0.016s 0m0.002s)
823. lock blocks other process (lockfile.at:28): ok     (0m0.013s 0m0.006s)
824. lock twice blocks other process (lockfile.at:33): ok     (0m0.018s 0m0.001s)
825. lock and unlock allows other process (lockfile.at:39): ok     (0m0.016s 0m0.002s)
826. lock multiple (lockfile.at:41): ok     (0m0.014s 0m0.003s)
827. lock symlink (lockfile.at:45): ok     (0m0.014s 0m0.005s)
828. lock symlink to dir (lockfile.at:52): ok     (0m0.017s 0m0.001s)
829. nothing happens if not enabled - C (reconnect.at:32): ok     (0m0.009s 0m0.006s)
830. nothing happens if not enabled - Python2 (reconnect.at:32): ok     (0m0.011s 0m0.015s)
831. nothing happens if not enabled - Python3 (reconnect.at:32): ok     (0m0.032s 0m0.033s)
832. quick connect, idle disconnect - C (reconnect.at:43): ok     (0m0.014s 0m0.002s)
833. quick connect, idle disconnect - Python2 (reconnect.at:43): ok     (0m0.012s 0m0.018s)
834. quick connect, idle disconnect - Python3 (reconnect.at:43): ok     (0m0.017s 0m0.051s)
835. slow connect, idle disconnect - C (reconnect.at:99): ok     (0m0.011s 0m0.004s)
836. slow connect, idle disconnect - Python2 (reconnect.at:99): ok     (0m0.021s 0m0.009s)
837. slow connect, idle disconnect - Python3 (reconnect.at:99): ok     (0m0.019s 0m0.045s)
838. connect backs off - C (reconnect.at:169): ok     (0m0.015s 0m0.001s)
839. connect backs off - Python2 (reconnect.at:169): ok     (0m0.013s 0m0.020s)
840. connect backs off - Python3 (reconnect.at:169): ok     (0m0.037s 0m0.028s)
841. connections with no data preserve backoff - C (reconnect.at:368): ok     (0m0.014s 0m0.001s)
842. connections with no data preserve backoff - Python2 (reconnect.at:368): ok     (0m0.015s 0m0.012s)
843. connections with no data preserve backoff - Python3 (reconnect.at:368): ok     (0m0.046s 0m0.004s)
844. brief connection preserves backoff - C (reconnect.at:532): ok     (0m0.008s 0m0.007s)
845. brief connection preserves backoff - Python2 (reconnect.at:532): ok     (0m0.009s 0m0.022s)
846. brief connection preserves backoff - Python3 (reconnect.at:532): ok     (0m0.037s 0m0.012s)
847. brief connection with data preserves backoff - C (reconnect.at:663): ok     (0m0.009s 0m0.006s)
848. brief connection with data preserves backoff - Python2 (reconnect.at:663): ok     (0m0.013s 0m0.018s)
849. brief connection with data preserves backoff - Python3 (reconnect.at:663): ok     (0m0.039s 0m0.009s)
850. long connection resets backoff - C (reconnect.at:824): ok     (0m0.006s 0m0.010s)
851. long connection resets backoff - Python2 (reconnect.at:824): ok     (0m0.017s 0m0.013s)
852. long connection resets backoff - Python3 (reconnect.at:824): ok     (0m0.027s 0m0.037s)
853. connection attempt fails quickly - C (reconnect.at:985): ok     (0m0.013s 0m0.002s)
854. connection attempt fails quickly - Python2 (reconnect.at:985): ok     (0m0.023s 0m0.005s)
855. connection attempt fails quickly - Python3 (reconnect.at:985): ok     (0m0.035s 0m0.013s)
856. backoff-free tries work - C (reconnect.at:1040): ok     (0m0.014s 0m0.001s)
857. backoff-free tries work - Python2 (reconnect.at:1040): ok     (0m0.019s 0m0.007s)
858. backoff-free tries work - Python3 (reconnect.at:1040): ok     (0m0.039s 0m0.010s)
859. max-tries of 1 honored - C (reconnect.at:1094): ok     (0m0.009s 0m0.007s)
860. max-tries of 1 honored - Python2 (reconnect.at:1094): ok     (0m0.006s 0m0.025s)
861. max-tries of 1 honored - Python3 (reconnect.at:1094): ok     (0m0.014s 0m0.049s)
862. max-tries of 0 honored - C (reconnect.at:1154): ok     (0m0.008s 0m0.008s)
863. max-tries of 0 honored - Python2 (reconnect.at:1154): ok     (0m0.019s 0m0.009s)
864. max-tries of 0 honored - Python3 (reconnect.at:1154): ok     (0m0.043s 0m0.006s)
865. passive mode - C (reconnect.at:1170): ok     (0m0.009s 0m0.007s)
866. passive mode - Python2 (reconnect.at:1170): ok     (0m0.026s 0m0.000s)
867. passive mode - Python3 (reconnect.at:1170): ok     (0m0.023s 0m0.047s)
868. ovs-vswitchd detaches correctly with empty db (ovs-vswitchd.at:7): ok     (0m0.064s 0m0.016s)
869. ovs-vswitchd -- stats-update-interval (ovs-vswitchd.at:36): ok     (0m0.325s 0m0.121s)
870. ovs-vswitchd -- start additional ovs-vswitchd process (ovs-vswitchd.at:69): ok     (0m0.133s 0m0.051s)
871. ovs-vswitchd -- switch over to another ovs-vswitchd process (ovs-vswitchd.at:94): ok     (0m0.102s 0m0.046s)
872. ovs-vswitchd -- invalid database path (ovs-vswitchd.at:134): ok     (0m0.025s 0m0.013s)
873. ovs-vswitchd -- set service controller (ovs-vswitchd.at:159): ok     (0m0.118s 0m0.046s)
874. ovs-vswitchd -- Compatible with OVSDB server - w/o monitor_cond (ovs-vswitchd.at:176): ok     (0m0.133s 0m0.068s)
875. ovs-vswitchd - do not create sockets with unsafe names (ovs-vswitchd.at:197): ok     (0m0.111s 0m0.161s)
876. ovs-vswitchd - set datapath IDs (ovs-vswitchd.at:230): ok     (0m0.222s 0m0.119s)
877. ofproto - echo request (ofproto.at:3): ok     (0m0.105s 0m0.037s)
878. ofproto - handling messages with bad version (ofproto.at:9): ok     (0m0.150s 0m0.049s)
879. ofproto - feature request, config request (ofproto.at:33): ok     (0m0.102s 0m0.049s)
880. ofproto - set OpenFlow port number (ofproto.at:50): ok     (0m0.110s 0m0.040s)
881. ofproto - port stats - (OpenFlow 1.0) (ofproto.at:83): ok     (0m0.102s 0m0.042s)
882. ofproto - port stats - (OpenFlow 1.2) (ofproto.at:94): ok     (0m0.090s 0m0.056s)
883. ofproto - port stats - (OpenFlow 1.4) (ofproto.at:105): ok     (0m0.105s 0m0.039s)
884. ofproto - port-desc stats (OpenFlow 1.0) (ofproto.at:122): ok     (0m0.099s 0m0.052s)
885. ofproto - port-desc stats (OpenFlow 1.2) (ofproto.at:137): ok     (0m0.096s 0m0.050s)
886. ofproto - port-desc stats (OpenFlow 1.5) (ofproto.at:150): ok     (0m0.133s 0m0.047s)
887. ofproto - port-desc stats (OpenFlow 1.6) (ofproto.at:184): ok     (0m0.145s 0m0.043s)
888. ofproto - queue stats - (OpenFlow 1.0) (ofproto.at:260): ok     (0m0.191s 0m0.067s)
889. ofproto - queue stats - (OpenFlow 1.1) (ofproto.at:261): ok     (0m0.161s 0m0.093s)
890. ofproto - queue stats - (OpenFlow 1.2) (ofproto.at:262): ok     (0m0.185s 0m0.066s)
891. ofproto - queue stats - (OpenFlow 1.3) (ofproto.at:263): ok     (0m0.169s 0m0.084s)
892. ofproto - queue stats - (OpenFlow 1.4) (ofproto.at:264): ok     (0m0.187s 0m0.067s)
893. ofproto - queue configuration - (OpenFlow 1.0) (ofproto.at:268): ok     (0m0.143s 0m0.058s)
894. ofproto - queue configuration - (OpenFlow 1.1) (ofproto.at:290): ok     (0m0.125s 0m0.053s)
895. ofproto - queue configuration - (OpenFlow 1.2) (ofproto.at:305): ok     (0m0.154s 0m0.045s)
896. ofproto - queue configuration - (OpenFlow 1.4) (ofproto.at:327): ok     (0m0.144s 0m0.072s)
897. ofproto - del group (OpenFlow 1.0 extension) (ofproto.at:360): ok     (0m0.189s 0m0.093s)
898. ofproto - del group (OpenFlow 1.1) (ofproto.at:401): ok     (0m0.227s 0m0.087s)
899. ofproto - add indirect group (ofproto.at:442): ok     (0m0.128s 0m0.054s)
900. ofproto - group mod with mod and add_or_mod command (ofproto.at:455): ok     (0m0.215s 0m0.069s)
901. ofproto - del group (OpenFlow 1.5) (ofproto.at:484): ok     (0m0.256s 0m0.101s)
902. ofproto - del group deletes flows (ofproto.at:524): ok     (0m0.211s 0m0.099s)
903. ofproto - insert group buckets (ofproto.at:565): ok     (0m0.804s 0m0.260s)
904. ofproto - remove group buckets (ofproto.at:701): ok     (0m0.416s 0m0.160s)
905. ofproto - bundle del group (OpenFlow 1.3) (ofproto.at:755): ok     (0m0.274s 0m0.110s)
906. ofproto - bundle add indirect group (ofproto.at:793): ok     (0m0.189s 0m0.041s)
907. ofproto - bundle group mod with mod and add_or_mod command (ofproto.at:808): ok     (0m0.204s 0m0.069s)
908. ofproto - bundle del group (OpenFlow 1.5) (ofproto.at:834): ok     (0m0.281s 0m0.078s)
909. ofproto - bundle del group deletes flows (ofproto.at:869): ok     (0m0.284s 0m0.113s)
910. ofproto - bundle insert group buckets (ofproto.at:910): ok     (0m0.504s 0m0.185s)
911. ofproto - bundle remove group buckets (ofproto.at:1007): ok     (0m0.452s 0m0.137s)
912. ofproto - flow mod checks group availability (ofproto.at:1064): ok     (0m0.118s 0m0.066s)
913. ofproto - bundle flow mod checks group availability (ofproto.at:1081): ok     (0m0.098s 0m0.053s)
914. ofproto - group description (ofproto.at:1101): ok     (0m0.119s 0m0.049s)
915. ofproto - group features (OpenFlow 1.0 extension) (ofproto.at:1114): ok     (0m0.107s 0m0.042s)
916. ofproto - group features (OpenFlow 1.2) (ofproto.at:1140): ok     (0m0.106s 0m0.048s)
917. ofproto - group stats (OpenFlow 1.0 extension) (ofproto.at:1166): ok     (0m0.143s 0m0.074s)
918. ofproto - group stats (OpenFlow 1.1) (ofproto.at:1190): ok     (0m0.142s 0m0.071s)
919. ofproto - group stats (OpenFlow 1.3) (ofproto.at:1214): ok     (0m0.218s 0m0.071s)
920. ofproto - group stats (OpenFlow 1.5) (ofproto.at:1238): ok     (0m0.192s 0m0.092s)
921. ofproto - group stats after insert a new bucket (OpenFlow 1.5) (ofproto.at:1261): ok     (0m0.183s 0m0.067s)
922. ofproto - group add then bridge delete (OpenFlow 1.3) (ofproto.at:1278): ok     (0m0.122s 0m0.057s)
923. ofproto - mod-port (OpenFlow 1.0) (ofproto.at:1293): ok     (0m0.365s 0m0.118s)
924. ofproto - mod-port (OpenFlow 1.2) (ofproto.at:1327): ok     (0m0.279s 0m0.134s)
925. ofproto - mod-port (OpenFlow 1.4) (ofproto.at:1358): ok     (0m0.299s 0m0.127s)
926. ofproto - mod-port (OpenFlow 1.6) (ofproto.at:1390): ok     (0m0.307s 0m0.114s)
927. ofproto - basic flow_mod commands (NXM) (ofproto.at:1422): ok     (0m0.192s 0m0.080s)
928. ofproto - basic flow_mod commands (OpenFlow 1.0) (ofproto.at:1444): ok     (0m0.189s 0m0.083s)
929. ofproto - add-flow and flags (ofproto.at:1469): ok     (0m0.189s 0m0.071s)
930. ofproto - basic flow_mod commands (OpenFlow 1.1) (ofproto.at:1502): ok     (0m0.175s 0m0.093s)
931. ofproto - flow_mod negative test (OpenFlow 1.1) (ofproto.at:1525): ok     (0m0.112s 0m0.046s)
932. ofproto - set-field flow_mod commands (NXM) (ofproto.at:1539): ok     (0m0.128s 0m0.068s)
933. ofproto - basic flow_mod commands (OpenFlow 1.2) (ofproto.at:1552): ok     (0m0.177s 0m0.086s)
934. ofproto - set-field flow_mod commands (OF1.2) (ofproto.at:1571): ok     (0m0.124s 0m0.078s)
935. ofproto - dump flows with cookie (ofproto.at:1584): ok     (0m0.161s 0m0.109s)
936. ofproto - mod flow with cookie change (OpenFlow 1.0) (ofproto.at:1608): ok     (0m0.158s 0m0.051s)
937. ofproto - mod flow with cookie change (NXM) (ofproto.at:1624): ok     (0m0.130s 0m0.076s)
938. ofproto - no mod flow with cookie change (OpenFlow 1.1) (ofproto.at:1640): ok     (0m0.143s 0m0.062s)
939. ofproto - no mod flow with cookie change (OpenFlow 1.2) (ofproto.at:1656): ok     (0m0.148s 0m0.062s)
940. ofproto - mod flows based on cookie mask (OpenFlow 1.0) (ofproto.at:1672): ok     (0m0.186s 0m0.060s)
941. ofproto - mod flows based on cookie mask (OpenFlow 1.1) (ofproto.at:1694): ok     (0m0.159s 0m0.088s)
942. ofproto - mod flows based on cookie mask (OpenFlow 1.2) (ofproto.at:1716): ok     (0m0.176s 0m0.070s)
943. ofproto - mod flows based on cookie mask with cookie change (ofproto.at:1739): ok     (0m0.155s 0m0.083s)
944. ofproto - mod flow with cookie miss (mask==0) - NXM (ofproto.at:1761): ok     (0m0.109s 0m0.060s)
945. ofproto - mod flow with cookie miss (mask==0) - OF1.1 (ofproto.at:1771): ok     (0m0.113s 0m0.050s)
946. ofproto - mod flow with cookie miss (mask==0) - OF1.2 (ofproto.at:1781): ok     (0m0.122s 0m0.045s)
947. ofproto - mod flow with cookie miss (mask!=0) - NXM (ofproto.at:1790): ok     (0m0.118s 0m0.044s)
948. ofproto - mod flow with cookie miss (mask!=0) - OF1.1 (ofproto.at:1799): ok     (0m0.123s 0m0.046s)
949. ofproto - mod flow with cookie miss (mask!=0) - OF1.2 (ofproto.at:1808): ok     (0m0.104s 0m0.072s)
950. ofproto - del flows with cookies (ofproto.at:1817): ok     (0m0.157s 0m0.084s)
951. ofproto - del flows based on cookie (ofproto.at:1836): ok     (0m0.161s 0m0.084s)
952. ofproto - del flows based on cookie mask (ofproto.at:1857): ok     (0m0.179s 0m0.061s)
953. ofproto - del flows based on table id (NXM) (ofproto.at:1876): ok     (0m0.245s 0m0.112s)
954. ofproto - del flows based on table id (OpenFlow 1.1) (ofproto.at:1908): ok     (0m0.225s 0m0.122s)
955. ofproto - del flows based on table id (OpenFlow 1.2) (ofproto.at:1941): ok     (0m0.255s 0m0.124s)
956. ofproto - flow_mod with out_port matching (OpenFlow 1.0) (ofproto.at:1973): ok     (0m0.241s 0m0.075s)
957. ofproto - flow_mod with out_port matching (OpenFlow 1.1) (ofproto.at:2009): ok     (0m0.206s 0m0.110s)
958. ofproto - flow_mod with out_group matching (OpenFlow 1.1) (ofproto.at:2045): ok     (0m0.219s 0m0.118s)
959. ofproto - bundle flow_mod with out group matching (OpenFlow 1.4) (ofproto.at:2087): ok     (0m0.259s 0m0.132s)
960. ofproto - bundle packet-out (OpenFlow 1.4) (ofproto.at:2137): ok     (0m0.167s 0m0.083s)
961. ofproto - bundle packet-out, failing bundle commit (OpenFlow 1.4) (ofproto.at:2179): ok     (0m0.167s 0m0.083s)
962. ofproto - bundle packet-out makes bundle commit to fail(OpenFlow 1.4) (ofproto.at:2220): ok     (0m0.169s 0m0.082s)
963. ofproto - flow table configuration (OpenFlow 1.0) (ofproto.at:2262): ok     (0m0.741s 0m0.353s)
964. ofproto - hidden rules not in table stats (ofproto.at:2321): ok     (0m0.495s 0m0.222s)
965. ofproto - flow table configuration (OpenFlow 1.2) (ofproto.at:2372): ok     (0m0.779s 0m0.352s)
966. ofproto - table features (OpenFlow 1.3) (ofproto.at:2476): ok     (0m1.672s 0m0.949s)
967. ofproto - flow table names (ofproto.at:2726): ok     (0m0.160s 0m0.090s)
968. ofproto - table description (OpenFlow 1.4) (ofproto.at:2759): ok     (0m0.536s 0m0.233s)
969. ofproto - hard limits on flow table size (OpenFlow 1.0) (ofproto.at:2789): ok     (0m0.221s 0m0.108s)
970. ofproto - hard limits on flow table size (OpenFlow 1.2) (ofproto.at:2835): ok     (0m0.194s 0m0.138s)
971. ofproto - eviction upon table overflow (OpenFlow 1.0) (ofproto.at:2875): ok     (0m0.292s 0m0.113s)
972. ofproto - eviction upon table overflow (OpenFlow 1.2) (ofproto.at:2934): ok     (0m0.316s 0m0.138s)
973. ofproto - eviction using importance upon table overflow (OpenFlow 1.4) (ofproto.at:2994): ok     (0m0.445s 0m0.542s)
974. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.0) (ofproto.at:3060): ok     (0m0.243s 0m0.118s)
975. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.2) (ofproto.at:3142): ok     (0m0.229s 0m0.143s)
976. ofproto - eviction upon table overflow, with modified hard timeout (ofproto.at:3224): ok     (0m0.209s 0m0.113s)
977. ofproto - eviction upon table overflow, with modified idle timeout (ofproto.at:3268): ok     (0m0.199s 0m0.123s)
978. ofproto - asynchronous message control (OpenFlow 1.0) (ofproto.at:3312): ok     (0m0.761s 0m0.378s)
979. ofproto - asynchronous message control (OpenFlow 1.2) (ofproto.at:3414): ok     (0m0.762s 0m0.505s)
980. ofproto - asynchronous message control (OpenFlow 1.3) (ofproto.at:3517): ok     (0m1.652s 0m0.649s)
981. ofproto - asynchronous message control (OpenFlow 1.4) (ofproto.at:3632): ok     (0m1.971s 0m1.251s)
982. ofproto - asynchronous message control (OpenFlow 1.5) (ofproto.at:3841): ok     (0m0.236s 0m0.091s)
983. ofproto - controller role (OpenFlow 1.2) (ofproto.at:3915): ok     (0m0.250s 0m0.085s)
984. ofproto - controller role (OpenFlow 1.4) (ofproto.at:3980): ok     (0m0.236s 0m0.096s)
985. ofproto - controller role (OpenFlow 1.3) (ofproto.at:4046): ok     (0m0.236s 0m0.099s)
986. ofproto - requestforward (OpenFlow 1.4) (ofproto.at:4111): ok     (0m0.268s 0m0.089s)
987. ofproto - packet-out from controller (OpenFlow 1.0) (ofproto.at:4203): ok     (0m0.195s 0m0.069s)
988. ofproto - packet-out from controller (OpenFlow 1.2) (ofproto.at:4239): ok     (0m0.148s 0m0.104s)
989. ofproto - packet-out from controller (OpenFlow 1.1) (ofproto.at:4272): ok     (0m0.177s 0m0.065s)
990. ofproto - packet-out from controller (OpenFlow 1.5) (ofproto.at:4302): ok     (0m0.206s 0m0.068s)
991. ofproto - packet-out with metadata and userdata (NXT_PACKET_IN2) (ofproto.at:4332): ok     (0m0.156s 0m0.069s)
992. ofproto - packet-out with set_field metadata (OpenFlow 1.5) (ofproto.at:4360): ok     (0m0.171s 0m0.064s)
993. ofproto - packet-out with set_field metadata with packet_type PT_ETH (OpenFlow 1.5) (ofproto.at:4387): ok     (0m0.176s 0m0.064s)
994. ofproto - packet-out with set_field metadata with packet_type PT_IPV4 on PTAP bridge (OpenFlow 1.5) (ofproto.at:4414): ok     (0m0.160s 0m0.077s)
995. ofproto - packet-out with metadata (NXM) (ofproto.at:4442): ok     (0m0.154s 0m0.070s)
996. ofproto - packet-out with metadata (OpenFlow 1.2) (ofproto.at:4470): ok     (0m0.167s 0m0.056s)
997. ofproto - packet-out with metadata and dual set_field (OpenFlow 1.3) (ofproto.at:4498): ok     (0m0.176s 0m0.068s)
998. ofproto - packet-out with tunnel metadata (OpenFlow 1.2) (ofproto.at:4525): ok     (0m0.180s 0m0.054s)
999. ofproto - flow monitoring (ofproto.at:4576): ok     (0m0.419s 0m0.223s)
1000. ofproto - flow monitoring with !own (ofproto.at:4713): ok     (0m0.185s 0m0.098s)
1001. ofproto - flow monitoring with out_port (ofproto.at:4754): ok     (0m0.231s 0m0.109s)
1002. ofproto - flow monitoring pause and resume (ofproto.at:4806): ok     (0m0.346s 0m0.477s)
1003. ofproto - event filtering (OpenFlow 1.3) (ofproto.at:4911): ok     (0m0.116s 0m0.053s)
1004. ofproto - ofport_request (ofproto.at:4951): ok     (0m6.399s 0m2.880s)
1005. ofproto - bundle open (OpenFlow 1.4) (ofproto.at:5007): ok     (0m0.120s 0m0.064s)
1006. ofproto - bundle double open (OpenFlow 1.4) (ofproto.at:5031): ok     (0m0.139s 0m0.068s)
1007. ofproto - bundle close without open (OpenFlow 1.4) (ofproto.at:5063): ok     (0m0.127s 0m0.054s)
1008. ofproto - bundle double close (OpenFlow 1.4) (ofproto.at:5087): ok     (0m0.165s 0m0.066s)
1009. ofproto - bundle close, different flags (OpenFlow 1.4) (ofproto.at:5126): ok     (0m0.138s 0m0.072s)
1010. ofproto - bundle commit without open (OpenFlow 1.4) (ofproto.at:5158): ok     (0m0.138s 0m0.050s)
1011. ofproto - bundle commit, different flags (OpenFlow 1.4) (ofproto.at:5183): ok     (0m0.144s 0m0.066s)
1012. ofproto - bundle discard without open (OpenFlow 1.4) (ofproto.at:5215): ok     (0m0.115s 0m0.076s)
1013. ofproto - bundle with multiple flow mods (OpenFlow 1.4) (ofproto.at:5241): ok     (0m0.197s 0m0.110s)
1014. ofproto - failing bundle commit (OpenFlow 1.4) (ofproto.at:5444): ok     (0m0.179s 0m0.073s)
1015. ofproto - bundle timeout (OpenFlow 1.4) (ofproto.at:5491): ok     (0m0.190s 0m0.102s)
1016. ofproto - bundle custom timeout (OpenFlow 1.4) (ofproto.at:5553): ok     (0m0.200s 0m0.094s)
1017. ofproto - bundle reset timeout to default (OpenFlow 1.4) (ofproto.at:5618): ok     (0m0.202s 0m0.118s)
1018. ofproto - bundle open (OpenFlow 1.3) (ofproto.at:5683): ok     (0m0.136s 0m0.053s)
1019. ofproto - bundle double open (OpenFlow 1.3) (ofproto.at:5710): ok     (0m0.141s 0m0.078s)
1020. ofproto - bundle close without open (OpenFlow 1.3) (ofproto.at:5745): ok     (0m0.140s 0m0.048s)
1021. ofproto - bundle double close (OpenFlow 1.3) (ofproto.at:5769): ok     (0m0.170s 0m0.063s)
1022. ofproto - bundle close, different flags (OpenFlow 1.3) (ofproto.at:5808): ok     (0m0.143s 0m0.062s)
1023. ofproto - bundle commit without open (OpenFlow 1.3) (ofproto.at:5840): ok     (0m0.147s 0m0.034s)
1024. ofproto - bundle commit, different flags (OpenFlow 1.3) (ofproto.at:5865): ok     (0m0.135s 0m0.072s)
1025. ofproto - bundle discard without open (OpenFlow 1.3) (ofproto.at:5897): ok     (0m0.131s 0m0.053s)
1026. ofproto - bundle with multiple flow mods (OpenFlow 1.3) (ofproto.at:5923): ok     (0m0.197s 0m0.095s)
1027. ofproto - failing bundle add message (OpenFlow 1.3) (ofproto.at:6119): ok     (0m0.178s 0m0.060s)
1028. ofproto - failing bundle commit (OpenFlow 1.3) (ofproto.at:6166): ok     (0m0.157s 0m0.044s)
1029. ofproto - monitor flows with tun_md (ofproto.at:6192): ok     (0m0.184s 0m0.080s)
1030. ofproto - flow mod with tunnel metadata (ofproto.at:6237): ok     (0m0.615s 0m0.247s)
1031. ofproto - flush flows, groups, and meters for controller change (ofproto.at:6369): ok     (0m0.343s 0m0.132s)
1032. dpif-netdev - netdev-dummy/receive (dpif-netdev.at:50): ok     (0m0.173s 0m0.049s)
1033. dpif-netdev - dummy interface (dpif-netdev.at:107): ok     (0m0.178s 0m0.090s)
1034. dpif-netdev - dummy-pmd interface (dpif-netdev.at:108): ok     (0m0.182s 0m0.119s)
1035. dpif-netdev - miss upcall key matches flow_install - dummy (dpif-netdev.at:149): ok     (0m0.182s 0m0.092s)
1036. dpif-netdev - miss upcall key matches flow_install - dummy-pmd (dpif-netdev.at:150): ok     (0m0.183s 0m0.211s)
1037. dpif-netdev - miss upcall key matches flow_dump - dummy (dpif-netdev.at:194): ok     (0m0.205s 0m0.085s)
1038. dpif-netdev - miss upcall key matches flow_dump - dummy-pmd (dpif-netdev.at:195): ok     (0m0.206s 0m0.075s)
1039. dpif-netdev - meters (dpif-netdev.at:197): ok     (0m0.510s 0m0.184s)
1040. PMD - creating a thread/add-port (pmd.at:67): ok     (0m0.112s 0m0.065s)
1041. PMD - multiqueue support (pmd.at:89): ok     (0m0.139s 0m0.051s)
1042. PMD - pmd-cpu-mask/distribution of rx queues (pmd.at:121): ok     (0m0.197s 0m0.077s)
1043. PMD - stats (pmd.at:178): ok     (0m0.474s 0m0.233s)
1044. PMD - reconfigure n_rxq (pmd.at:248): ok     (0m0.236s 0m0.106s)
1045. PMD - same flow multiple threads (pmd.at:311): ok     (0m0.183s 0m0.114s)
1046. PMD - change numa node (pmd.at:354): ok     (0m0.331s 0m0.128s)
1047. PMD - non pmd device (pmd.at:432): ok     (0m0.225s 0m0.145s)
1048. PMD - add remove ports (pmd.at:482): ok     (0m0.225s 0m0.111s)
1049. PMD - rxq affinity (pmd.at:526): ok     (0m0.235s 0m0.227s)
1050. PMD - rxq affinity - NUMA (pmd.at:579): ok     (0m0.274s 0m0.131s)
1051. PMD - monitor threads (pmd.at:635): ok     (0m0.221s 0m0.096s)
1052. PMD - dpctl (pmd.at:672): ok     (0m0.204s 0m0.096s)
1053. dpctl - add-dp del-dp (dpctl.at:3): ok     (0m0.139s 0m0.053s)
1054. dpctl - add-if set-if del-if (dpctl.at:19): ok     (0m0.297s 0m0.113s)
1055. ofproto-dpif - revalidator/wait (ofproto-dpif.at:3): ok     (0m0.104s 0m0.038s)
1056. ofproto-dpif - active-backup bonding (ofproto-dpif.at:9): ok     (0m0.269s 0m0.138s)
1057. ofproto-dpif - balance-slb bonding (ofproto-dpif.at:56): ok     (0m1.660s 0m0.702s)
1058. ofproto-dpif - balance-tcp bonding (ofproto-dpif.at:99): ok     (0m3.829s 0m1.798s)
1059. ofproto-dpif - balance-tcp bonding, different recirc flow  (ofproto-dpif.at:152): ok     (0m0.180s 0m0.077s)
1060. ofproto-dpif - resubmit (ofproto-dpif.at:210): ok     (0m0.126s 0m0.047s)
1061. ofproto-dpif - goto table (ofproto-dpif.at:229): ok     (0m0.201s 0m0.093s)
1062. ofproto-dpif - write actions (ofproto-dpif.at:243): ok     (0m0.132s 0m0.043s)
1063. ofproto-dpif - modify IPv6 Neighbor Solitication (ND) (ofproto-dpif.at:260): ok     (0m0.125s 0m0.045s)
1064. ofproto-dpif - clear actions (ofproto-dpif.at:279): ok     (0m0.118s 0m0.055s)
1065. ofproto-dpif - group chaining (ofproto-dpif.at:295): ok     (0m0.147s 0m0.058s)
1066. ofproto-dpif - all group in action list (ofproto-dpif.at:308): ok     (0m0.126s 0m0.063s)
1067. ofproto-dpif - indirect group in action list (ofproto-dpif.at:323): ok     (0m0.125s 0m0.066s)
1068. ofproto-dpif - group actions have no effect afterwards (ofproto-dpif.at:335): ok     (0m0.164s 0m0.095s)
1069. ofproto-dpif - all group in action set (ofproto-dpif.at:355): ok     (0m0.125s 0m0.062s)
1070. ofproto-dpif - indirect group in action set (ofproto-dpif.at:370): ok     (0m0.124s 0m0.065s)
1071. ofproto-dpif - patch port with action set (ofproto-dpif.at:382): ok     (0m0.149s 0m0.067s)
1072. ofproto-dpif - select group (ofproto-dpif.at:407): ok     (0m0.314s 0m0.151s)
1073. ofproto-dpif - select group with watch port (ofproto-dpif.at:456): ok     (0m0.182s 0m0.066s)
1074. ofproto-dpif - select group with weights (ofproto-dpif.at:477): ok     (0m10.292s 0m4.881s)
1075. ofproto-dpif - select group with explicit dp_hash selection method (ofproto-dpif.at:564): ok     (0m0.211s 0m0.050s)
1076. ofproto-dpif - select group with legacy hash selection method (ofproto-dpif.at:603): ok     (0m0.340s 0m0.151s)
1077. ofproto-dpif - select group with custom hash selection method (ofproto-dpif.at:647): ok     (0m0.583s 0m0.239s)
1078. ofproto-dpif - fast failover group (ofproto-dpif.at:709): ok     (0m0.120s 0m0.077s)
1079. ofproto-dpif - group stats single bucket (ofproto-dpif.at:721): ok     (0m0.175s 0m0.101s)
1080. ofproto-dpif - group stats all buckets (ofproto-dpif.at:742): ok     (0m0.177s 0m0.101s)
1081. ofproto-dpif - registers (ofproto-dpif.at:763): ok     (0m0.129s 0m0.040s)
1082. ofproto-dpif - extended registers (ofproto-dpif.at:800): ok     (0m0.117s 0m0.051s)
1083. ofproto-dpif - extended-extended registers (ofproto-dpif.at:821): ok     (0m0.121s 0m0.053s)
1084. ofproto-dpif - load and move order (ofproto-dpif.at:840): ok     (0m0.136s 0m0.054s)
1085. ofproto-dpif - copy-field into extended registers (ofproto-dpif.at:854): ok     (0m0.139s 0m0.047s)
1086. ofproto-dpif - masked set-field into metadata (ofproto-dpif.at:874): ok     (0m0.155s 0m0.030s)
1087. ofproto-dpif - actset_output (ofproto-dpif.at:896): ok     (0m0.163s 0m0.059s)
1088. ofproto-dpif - push-pop (ofproto-dpif.at:941): ok     (0m0.127s 0m0.045s)
1089. ofproto-dpif - output (ofproto-dpif.at:960): ok     (0m0.120s 0m0.051s)
1090. ofproto-dpif - dec_ttl (ofproto-dpif.at:981): ok     (0m0.174s 0m0.077s)
1091. ofproto-dpif - dec_ttl without arguments at offset 32 in ofpacts (ofproto-dpif.at:1026): ok     (0m0.443s 0m0.181s)
1092. ofproto-dpif - dec_ttl with arguments at offset 32 in ofpacts (ofproto-dpif.at:1043): ok     (0m0.415s 0m0.198s)
1093. ofproto-dpif - note at offset 24 in ofpacts (ofproto-dpif.at:1060): ok     (0m0.420s 0m0.182s)
1094. ofproto-dpif - note action deep inside ofpacts (ofproto-dpif.at:1074): ok     (0m0.106s 0m0.033s)
1095. ofproto-dpif - output, OFPP_NONE ingress port (ofproto-dpif.at:1080): ok     (0m0.119s 0m0.053s)
1096. ofproto-dpif - DSCP (ofproto-dpif.at:1098): ok     (0m0.136s 0m0.047s)
1097. ofproto-dpif - output/flood flags (ofproto-dpif.at:1125): ok     (0m0.204s 0m0.087s)
1098. ofproto-dpif - Default Table Miss - OF1.0 (OFPTC_TABLE_MISS_CONTROLLER) (ofproto-dpif.at:1183): ok     (0m0.164s 0m0.069s)
1099. ofproto-dpif - Default Table Miss - OF1.3 (OFPTC_TABLE_MISS_DROP) (ofproto-dpif.at:1217): ok     (0m0.178s 0m0.066s)
1100. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:1245): ok     (0m0.185s 0m0.066s)
1101. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:1281): ok     (0m0.185s 0m0.058s)
1102. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1309): ok     (0m0.244s 0m0.090s)
1103. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1368): ok     (0m0.234s 0m0.106s)
1104. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1432): ok     (0m0.210s 0m0.126s)
1105. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1478): ok     (0m0.172s 0m0.072s)
1106. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1506): ok     (0m0.198s 0m0.081s)
1107. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1537): ok     (0m0.200s 0m0.077s)
1108. ofproto-dpif - controller (ofproto-dpif.at:1568): ok     (0m0.499s 0m0.210s)
1109. ofproto-dpif - controller with slow-path action (ofproto-dpif.at:1837): ok     (0m0.167s 0m0.058s)
1110. ofproto-dpif - controller action without megaflows (ofproto-dpif.at:1867): ok     (0m0.364s 0m0.131s)
1111. ofproto-dpif - MPLS handling (ofproto-dpif.at:1938): ok     (0m2.535s 0m0.984s)
1112. ofproto-dpif - MPLS handling with goto_table (ofproto-dpif.at:2988): ok     (0m0.193s 0m0.069s)
1113. ofproto-dpif - MPLS handling with write_actions (ofproto-dpif.at:3036): ok     (0m0.215s 0m0.066s)
1114. ofproto-dpif - table-miss flow (OpenFlow 1.0) (ofproto-dpif.at:3084): ok     (0m0.188s 0m0.067s)
1115. ofproto-dpif - table-miss flow (OpenFlow 1.3) (ofproto-dpif.at:3124): ok     (0m0.221s 0m0.108s)
1116. ofproto-dpif - table-miss flow with async config (OpenFlow 1.3) (ofproto-dpif.at:3165): ok     (0m0.228s 0m0.126s)
1117. ofproto-dpif - table-miss flow (OpenFlow 1.4) (ofproto-dpif.at:3239): ok     (0m0.192s 0m0.089s)
1118. ofproto-dpif - packet-in reasons (Openflow 1.3) (ofproto-dpif.at:3281): ok     (0m0.247s 0m0.087s)
1119. ofproto-dpif - packet-in reasons (Openflow 1.4) (ofproto-dpif.at:3353): ok     (0m0.248s 0m0.088s)
1120. ofproto-dpif - packet-in reasons (Openflow 1.3) (ofproto-dpif.at:3424): ok     (0m0.345s 0m0.113s)
1121. ofproto-dpif - ARP modification slow-path (ofproto-dpif.at:3463): ok     (0m0.156s 0m0.074s)
1122. ofproto-dpif - VLAN handling (ofproto-dpif.at:3492): ok     (0m2.945s 0m1.165s)
1123. ofproto-dpif - VLAN depth limit (ofproto-dpif.at:3644): ok     (0m0.164s 0m0.064s)
1124. ofproto-dpif - Multi-VLAN actions (ofproto-dpif.at:3673): ok     (0m0.252s 0m0.078s)
1125. ofproto-dpif - MPLS handling (ofproto-dpif.at:3730): ok     (0m0.265s 0m0.125s)
1126. ofproto-dpif - VLAN+MPLS handling (ofproto-dpif.at:3845): ok     (0m0.685s 0m0.286s)
1127. ofproto-dpif - fragment handling - trace (ofproto-dpif.at:4336): ok     (0m0.247s 0m0.097s)
1128. ofproto-dpif - fragment handling - upcall (ofproto-dpif.at:4385): ok     (0m0.292s 0m0.136s)
1129. ofproto-dpif - fragment handling - actions (ofproto-dpif.at:4460): ok     (0m0.457s 0m0.180s)
1130. ofproto-dpif - exit (ofproto-dpif.at:4565): ok     (0m0.141s 0m0.073s)
1131. ofproto-dpif - mirroring, select_all (ofproto-dpif.at:4590): ok     (0m0.146s 0m0.061s)
1132. ofproto-dpif - mirroring, select_src (ofproto-dpif.at:4621): ok     (0m0.152s 0m0.051s)
1133. ofproto-dpif - mirroring, OFPP_NONE ingress port (ofproto-dpif.at:4650): ok     (0m0.127s 0m0.055s)
1134. ofproto-dpif - mirroring, select_dst (ofproto-dpif.at:4672): ok     (0m0.141s 0m0.062s)
1135. ofproto-dpif - mirroring, select_vlan (ofproto-dpif.at:4703): ok     (0m0.158s 0m0.070s)
1136. ofproto-dpif - mirroring, output_port (ofproto-dpif.at:4739): ok     (0m0.148s 0m0.060s)
1137. ofproto-dpif - mirroring, output_vlan (ofproto-dpif.at:4769): ok     (0m0.171s 0m0.084s)
1138. ofproto-dpif - multiple VLAN output mirrors (ofproto-dpif.at:4806): ok     (0m0.111s 0m0.064s)
1139. ofproto-dpif - mirroring with recirculation (ofproto-dpif.at:4835): ok     (0m0.138s 0m0.066s)
1140. ofproto-dpif - mirroring, select_all with snaplen (ofproto-dpif.at:4861): ok     (0m0.133s 0m0.071s)
1141. ofproto-dpif - mirroring, select_all with snaplen and reset snaplen (ofproto-dpif.at:4891): ok     (0m0.180s 0m0.074s)
1142. ofproto-dpif - mirroring, select_src with snaplen (ofproto-dpif.at:4931): ok     (0m0.126s 0m0.083s)
1143. ofproto-dpif - mirroring, OFPP_NONE ingress port with snaplen (ofproto-dpif.at:4960): ok     (0m0.128s 0m0.056s)
1144. ofproto-dpif - mirroring, select_dst with snaplen (ofproto-dpif.at:4981): ok     (0m0.129s 0m0.077s)
1145. ofproto-dpif - mirroring, select_vlan with snaplen (ofproto-dpif.at:5011): ok     (0m0.161s 0m0.063s)
1146. ofproto-dpif - mirroring, output_port with snaplen (ofproto-dpif.at:5046): ok     (0m0.131s 0m0.074s)
1147. ofproto-dpif - mirroring, output_vlan with snaplen (ofproto-dpif.at:5076): ok     (0m0.146s 0m0.063s)
1148. ofproto-dpif - multiple VLAN output mirrors with snaplen (ofproto-dpif.at:5104): ok     (0m0.118s 0m0.052s)
1149. ofproto-dpif - resubmit with recirculation (ofproto-dpif.at:5127): ok     (0m0.137s 0m0.057s)
1150. ofproto-dpif - resubmit with tun_id (ofproto-dpif.at:5154): ok     (0m0.131s 0m0.063s)
1151. ofproto-dpif - recirculation after resubmit (ofproto-dpif.at:5181): ok     (0m0.146s 0m0.050s)
1152. ofproto-dpif - debug_slow action (ofproto-dpif.at:5203): ok     (0m0.128s 0m0.049s)
1153. ofproto-dpif - continuation - pause at end of pipeline (ofproto-dpif.at:5330): ok     (0m0.265s 0m0.134s)
1154. ofproto-dpif - continuation - actions (ofproto-dpif.at:5333): ok     (0m0.795s 0m0.325s)
1155. ofproto-dpif - continuation - resubmit (ofproto-dpif.at:5341): ok     (0m1.503s 0m0.605s)
1156. ofproto-dpif - continuation - action set (ofproto-dpif.at:5349): ok     (0m0.384s 0m0.147s)
1157. ofproto-dpif - continuation - data stack (ofproto-dpif.at:5355): ok     (0m0.751s 0m0.322s)
1158. ofproto-dpif - continuation - mirroring (ofproto-dpif.at:5373): ok     (0m0.575s 0m0.245s)
1159. ofproto-dpif - continuation - patch ports (ofproto-dpif.at:5384): ok     (0m0.978s 0m0.398s)
1160. ofproto-dpif - continuation flow stats (ofproto-dpif.at:5396): ok     (0m0.170s 0m0.083s)
1161. ofproto-dpif - continuation with conntrack (ofproto-dpif.at:5430): ok     (0m0.169s 0m0.093s)
1162. ofproto-dpif - continuation after clone (ofproto-dpif.at:5466): ok     (0m0.180s 0m0.096s)
1163. ofproto-dpif - ofproto/trace command 1 (ofproto-dpif.at:5509): ok     (0m0.364s 0m0.176s)
1164. ofproto-dpif - ofproto/trace command 2 (ofproto-dpif.at:5653): ok     (0m0.416s 0m0.144s)
1165. ofproto-dpif - ofproto/trace from dpctl output (ofproto-dpif.at:5762): ok     (0m0.179s 0m0.087s)
1166. ofproto-dpif - ofproto/trace-packet-out (ofproto-dpif.at:5809): ok     (0m0.128s 0m0.047s)
1167. ofproto-dpif - MAC learning (ofproto-dpif.at:5839): ok     (0m0.378s 0m0.142s)
1168. ofproto-dpif - MAC table overflow (ofproto-dpif.at:5928): ok     (0m0.585s 0m0.237s)
1169. ofproto-dpif - MAC table overflow fairness (ofproto-dpif.at:5988): ok     (0m0.606s 0m0.206s)
1170. ofproto-dpif - basic truncate action (ofproto-dpif.at:6461): ok     (0m0.336s 0m0.153s)
1171. ofproto-dpif - truncate and output to patch port (ofproto-dpif.at:6537): ok     (0m0.119s 0m0.075s)
1172. ofproto-dpif - truncate and output to gre tunnel (ofproto-dpif.at:6558): ok     (0m0.141s 0m0.059s)
1173. ofproto-dpif - sFlow packet sampling - IPv4 collector (ofproto-dpif.at:6585): ok     (0m0.190s 0m0.093s)
1174. ofproto-dpif - sFlow packet sampling - IPv6 collector (ofproto-dpif.at:6589): ok     (0m0.193s 0m0.101s)
1175. ofproto-dpif - sFlow packet sampling - LACP structures (ofproto-dpif.at:6595): ok     (0m0.169s 0m0.060s)
1176. ofproto-dpif - sFlow packet sampling - tunnel set (ofproto-dpif.at:6652): ok     (0m0.454s 0m0.216s)
1177. ofproto-dpif - sFlow packet sampling - tunnel push (ofproto-dpif.at:6721): ok     (0m0.583s 0m0.187s)
1178. ofproto-dpif - sFlow packet sampling - MPLS (ofproto-dpif.at:6823): ok     (0m0.473s 0m0.180s)
1179. ofproto-dpif - NetFlow flow expiration - IPv4 collector (ofproto-dpif.at:6959): ok     (0m0.255s 0m0.075s)
1180. ofproto-dpif - NetFlow flow expiration - IPv6 collector (ofproto-dpif.at:6963): ok     (0m0.233s 0m0.113s)
1181. ofproto-dpif - NetFlow active expiration - IPv4 collector (ofproto-dpif.at:7043): ok     (0m1.903s 0m0.695s)
1182. ofproto-dpif - NetFlow active expiration - IPv6 collector (ofproto-dpif.at:7047): ok     (0m1.802s 0m0.690s)
1183. ofproto-dpif - Bridge IPFIX sanity check (ofproto-dpif.at:7055): ok     (0m0.301s 0m0.146s)
1184. ofproto-dpif - Bridge IPFIX statistics check (ofproto-dpif.at:7104): ok     (0m0.409s 0m0.218s)
1185. ofproto-dpif - Flow IPFIX sanity check (ofproto-dpif.at:7148): ok     (0m0.254s 0m0.111s)
1186. ofproto-dpif - Flow IPFIX sanity check - tunnel set (ofproto-dpif.at:7198): ok     (0m0.248s 0m0.123s)
1187. ofproto-dpif - clone action (ofproto-dpif.at:7270): ok     (0m0.268s 0m0.116s)
1188. ofproto-dpif - Flow IPFIX statistics check (ofproto-dpif.at:7340): ok     (0m0.448s 0m0.231s)
1189. ofproto-dpif - flow stats (ofproto-dpif.at:7390): ok     (0m0.267s 0m0.098s)
1190. ofproto-dpif - flow stats reset_counts (ofproto-dpif.at:7411): ok     (0m3.009s 0m1.168s)
1191. ofproto-dpif - flow stats reset_counts OpenFlow1.5 (ofproto-dpif.at:7584): ok     (0m0.855s 0m0.298s)
1192. ofproto-dpif - flow stats, set-n-threads (ofproto-dpif.at:7670): ok     (0m0.272s 0m0.106s)
1193. ofproto-dpif - idle_age and hard_age increase over time (ofproto-dpif.at:7693): ok     (0m0.257s 0m0.088s)
1194. ofproto-dpif - fin_timeout (ofproto-dpif.at:7783): ok     (0m0.223s 0m0.092s)
1195. ofproto-dpif - ovs-appctl dpif/dump-dps (ofproto-dpif.at:7817): ok     (0m0.119s 0m0.050s)
1196. ofproto-dpif - ovs-appctl dpif/show (ofproto-dpif.at:7829): ok     (0m0.106s 0m0.094s)
1197. ofproto-dpif - ovs-appctl dpif/dump-flows (ofproto-dpif.at:7848): ok     (0m0.235s 0m0.254s)
1198. ofproto-dpif - ovs-appctl dpif/get-flow (ofproto-dpif.at:7906): ok     (0m0.141s 0m0.075s)
1199. ofproto-dpif - ovs-appctl dpif/get-flow - pmd (ofproto-dpif.at:7907): ok     (0m0.144s 0m0.055s)
1200. ofproto-dpif - MPLS actions that result in a userspace action (ofproto-dpif.at:7909): ok     (0m0.167s 0m0.063s)
1201. ofproto-dpif - MPLS actions that result in a drop (ofproto-dpif.at:7945): ok     (0m0.140s 0m0.078s)
1202. ofproto-dpif - patch ports (ofproto-dpif.at:7983): ok     (0m0.412s 0m0.169s)
1203. ofproto-dpif - patch ports - stack (ofproto-dpif.at:8058): ok     (0m0.212s 0m0.094s)
1204. ofproto-dpif - port duration (ofproto-dpif.at:8107): ok     (0m0.122s 0m0.057s)
1205. ofproto-dpif megaflow - port classification (ofproto-dpif.at:8127): ok     (0m0.149s 0m0.078s)
1206. ofproto-dpif megaflow - L2 classification (ofproto-dpif.at:8145): ok     (0m0.149s 0m0.078s)
1207. ofproto-dpif megaflow - L3 classification (ofproto-dpif.at:8163): ok     (0m0.166s 0m0.078s)
1208. ofproto-dpif megaflow - IPv6 classification (ofproto-dpif.at:8182): ok     (0m0.166s 0m0.078s)
1209. ofproto-dpif megaflow - L4 classification (ofproto-dpif.at:8201): ok     (0m0.153s 0m0.076s)
1210. ofproto-dpif megaflow - normal (ofproto-dpif.at:8236): ok     (0m0.165s 0m0.080s)
1211. ofproto-dpif megaflow - normal - pmd (ofproto-dpif.at:8237): ok     (0m0.155s 0m0.144s)
1212. ofproto-dpif megaflow - mpls (ofproto-dpif.at:8239): ok     (0m0.163s 0m0.068s)
1213. ofproto-dpif megaflow - netflow - IPv4 collector (ofproto-dpif.at:8285): ok     (0m0.191s 0m0.084s)
1214. ofproto-dpif megaflow - netflow - IPv6 collector (ofproto-dpif.at:8289): ok     (0m0.195s 0m0.080s)
1215. ofproto-dpif megaflow - normal, active-backup bonding - dummy (ofproto-dpif.at:8317): ok     (0m0.156s 0m0.079s)
1216. ofproto-dpif megaflow - normal, active-backup bonding - dummy-pmd (ofproto-dpif.at:8318): ok     (0m0.151s 0m0.112s)
1217. ofproto-dpif megaflow - normal, balance-slb bonding (ofproto-dpif.at:8320): ok     (0m0.152s 0m0.077s)
1218. ofproto-dpif megaflow - normal, balance-tcp bonding (ofproto-dpif.at:8341): ok     (0m0.168s 0m0.112s)
1219. ofproto-dpif megaflow - resubmit port action (ofproto-dpif.at:8379): ok     (0m0.169s 0m0.058s)
1220. ofproto-dpif megaflow - resubmit table action (ofproto-dpif.at:8398): ok     (0m0.163s 0m0.067s)
1221. ofproto-dpif megaflow - goto_table action (ofproto-dpif.at:8418): ok     (0m0.149s 0m0.079s)
1222. ofproto-dpif megaflow - mirroring, select_all (ofproto-dpif.at:8437): ok     (0m0.157s 0m0.086s)
1223. ofproto-dpif megaflow - mirroring, select_vlan (ofproto-dpif.at:8461): ok     (0m0.163s 0m0.082s)
1224. ofproto-dpif megaflow - move action (ofproto-dpif.at:8484): ok     (0m0.142s 0m0.086s)
1225. ofproto-dpif megaflow - push action (ofproto-dpif.at:8504): ok     (0m0.144s 0m0.083s)
1226. ofproto-dpif megaflow - learning (ofproto-dpif.at:8522): ok     (0m0.207s 0m0.088s)
1227. ofproto-dpif megaflow - tunnels (ofproto-dpif.at:8549): ok     (0m0.211s 0m0.087s)
1228. ofproto-dpif megaflow - dec_ttl (ofproto-dpif.at:8582): ok     (0m0.168s 0m0.072s)
1229. ofproto-dpif megaflow - set dl_dst (ofproto-dpif.at:8601): ok     (0m0.153s 0m0.073s)
1230. ofproto-dpif megaflow - disabled (ofproto-dpif.at:8657): ok     (0m0.262s 0m0.126s)
1231. ofproto-dpif megaflow - disabled - pmd (ofproto-dpif.at:8658): ok     (0m0.266s 0m0.101s)
1232. ofproto-dpif - datapath port number change (ofproto-dpif.at:8660): ok     (0m0.148s 0m0.049s)
1233. ofproto - bundle with variable bfd/cfm config (ofproto-dpif.at:8682): ok     (0m0.264s 0m0.125s)
1234. ofproto-dpif - ofproto-dpif-monitor 1 (ofproto-dpif.at:8760): ok     (0m0.245s 0m0.094s)
1235. ofproto-dpif - ofproto-dpif-monitor 2 (ofproto-dpif.at:8807): ok     (0m2.742s 0m1.473s)
1236. ofproto-dpif - forward resubmit (ofproto-dpif.at:8822): ok     (0m0.375s 0m0.158s)
1237. ofproto-dpif - backward resubmit (ofproto-dpif.at:8839): ok     (0m0.295s 0m0.112s)
1238. ofproto-dpif - infinite resubmit (ofproto-dpif.at:8859): ok     (0m0.125s 0m0.039s)
1239. ofproto-dpif - backward resubmit without trace (ofproto-dpif.at:8875): ok     (0m0.278s 0m0.129s)
1240. ofproto-dpif - exponential resubmit chain (ofproto-dpif.at:8898): ok     (0m0.335s 0m0.116s)
1241. ofproto-dpif - too many output actions (ofproto-dpif.at:8916): ok     (0m0.201s 0m0.077s)
1242. ofproto-dpif - stack too deep (ofproto-dpif.at:8934): ok     (0m0.218s 0m0.074s)
1243. ofproto-dpif packet-out controller (ofproto-dpif.at:8954): ok     (0m0.561s 0m0.228s)
1244. ofproto-dpif packet-out controller (patch port) (ofproto-dpif.at:8999): ok     (0m0.818s 0m0.357s)
1245. ofproto-dpif packet-out pipeline match field (OpenFlow 1.5) (ofproto-dpif.at:9054): ok     (0m0.329s 0m0.145s)
1246. ofproto-dpif packet-out goto_table (ofproto-dpif.at:9104): ok     (0m0.542s 0m0.253s)
1247. ofproto-dpif packet-out table-miss (continue) (ofproto-dpif.at:9158): ok     (0m0.519s 0m0.227s)
1248. ofproto-dpif - ICMPv6 (ofproto-dpif.at:9209): ok     (0m0.132s 0m0.061s)
1249. ofproto-dpif - ICMPv6 type match (ofproto-dpif.at:9229): ok     (0m0.211s 0m0.112s)
1250. ofproto-dpif - Neighbor Discovery set-field with checksum update (ofproto-dpif.at:9259): ok     (0m0.145s 0m0.062s)
1251. ofproto-dpif - vlan matching (ofproto-dpif.at:9281): ok     (0m0.138s 0m0.078s)
1252. ofproto-dpif - in place modification (ofproto-dpif.at:9299): ok     (0m0.232s 0m0.153s)
1253. ofproto-dpif - in place modification (vlan) (ofproto-dpif.at:9344): ok     (0m0.371s 0m0.171s)
1254. ofproto-dpif - trace (unchanged) (ofproto-dpif.at:9426): ok     (0m0.113s 0m0.060s)
1255. ofproto-dpif - conntrack - controller (ofproto-dpif.at:9438): ok     (0m0.251s 0m0.129s)
1256. ofproto-dpif - conntrack - force commit (ofproto-dpif.at:9564): ok     (0m0.255s 0m0.109s)
1257. ofproto-dpif - conntrack - ipv6 (ofproto-dpif.at:9646): ok     (0m0.171s 0m0.102s)
1258. ofproto-dpif - conntrack - output action (ofproto-dpif.at:9696): ok     (0m0.191s 0m0.080s)
1259. ofproto-dpif - conntrack - expiration (ofproto-dpif.at:9755): ok     (0m0.199s 0m0.092s)
1260. ofproto-dpif - conntrack - untrackable traffic (ofproto-dpif.at:9809): ok     (0m0.150s 0m0.093s)
1261. ofproto-dpif - conntrack - zones (ofproto-dpif.at:9841): ok     (0m0.240s 0m0.079s)
1262. ofproto-dpif - conntrack - recirc,commit (ofproto-dpif.at:9906): ok     (0m0.197s 0m0.073s)
1263. ofproto-dpif - conntrack - ICMP related (ofproto-dpif.at:9956): ok     (0m0.223s 0m0.072s)
1264. ofproto-dpif - conntrack - ct_mark (ofproto-dpif.at:10006): ok     (0m0.221s 0m0.088s)
1265. ofproto-dpif - conntrack - ct_label (ofproto-dpif.at:10067): ok     (0m0.205s 0m0.082s)
1266. ofproto-dpif - conntrack - ct_label datapath flow (ofproto-dpif.at:10115): ok     (0m0.163s 0m0.085s)
1267. ofproto-dpif - conntrack - no output (ofproto-dpif.at:10163): ok     (0m0.147s 0m0.063s)
1268. ofproto-dpif - conntrack - tcp port reuse (ofproto-dpif.at:10187): ok     (0m0.354s 0m0.178s)
1269. ofproto-dpif - conntrack - tcp pick up (ofproto-dpif.at:10251): ok     (0m0.304s 0m0.143s)
1270. ofproto-dpif - conntrack - ct_clear (ofproto-dpif.at:10339): ok     (0m0.176s 0m0.090s)
1271. ofproto-dpif - conntrack - ofproto/trace (ofproto-dpif.at:10396): ok     (0m0.171s 0m0.072s)
1272. ofproto - set mtu (ofproto-dpif.at:10454): ok     (0m0.279s 0m0.161s)
1273. ofproto - fragment prerequisites (ofproto-dpif.at:10504): ok     (0m0.202s 0m0.083s)
1274. bridge - ports that disappear get added back (bridge.at:7): ok     (0m0.156s 0m0.066s)
1275. bridge - multiple bridges share a controller (bridge.at:44): ok     (0m0.351s 0m0.173s)
1276. bridge - add port after stopping controller (bridge.at:83): ok     (0m0.143s 0m0.078s)
1277. bridge - set MAC address of internal port (netdev-type.at:4): ok     (0m0.132s 0m0.059s)
1278. create empty, reread (ovsdb-log.at:3): ok     (0m0.088s 0m0.012s)
1279. write one, reread (ovsdb-log.at:18): ok     (0m0.022s 0m0.009s)
1280. check that create fails if file exists (ovsdb-log.at:35): ok     (0m0.037s 0m0.022s)
1281. write one, reread (ovsdb-log.at:60): ok     (0m0.022s 0m0.009s)
1282. write one, replace, commit (ovsdb-log.at:81): ok     (0m0.046s 0m0.015s)
1283. write one, replace, abort (ovsdb-log.at:118): ok     (0m0.042s 0m0.018s)
1284. write one, reread - alternative magic (ovsdb-log.at:155): ok     (0m0.039s 0m0.006s)
1285. write one, reread, append (ovsdb-log.at:182): ok     (0m0.033s 0m0.014s)
1286. write, reread one, overwrite (ovsdb-log.at:212): ok     (0m0.038s 0m0.007s)
1287. write, add corrupted data, read (ovsdb-log.at:238): ok     (0m0.026s 0m0.005s)
1288. write, add corrupted data, read, overwrite (ovsdb-log.at:260): ok     (0m0.029s 0m0.017s)
1289. write, corrupt some data, read, overwrite (ovsdb-log.at:292): ok     (0m0.044s 0m0.008s)
1290. write, truncate file, read, overwrite (ovsdb-log.at:325): ok     (0m0.039s 0m0.014s)
1291. write bad JSON, read, overwrite (ovsdb-log.at:358): ok     (0m0.038s 0m0.008s)
1292. integer - C (ovsdb-types.at:3): ok     (0m0.012s 0m0.002s)
1293. integer - Python2 (ovsdb-types.at:3): ok     (0m0.074s 0m0.013s)
1294. integer - Python3 (ovsdb-types.at:3): ok     (0m0.101s 0m0.014s)
1295. real - C (ovsdb-types.at:5): ok     (0m0.008s 0m0.007s)
1296. real - Python2 (ovsdb-types.at:5): ok     (0m0.066s 0m0.017s)
1297. real - Python3 (ovsdb-types.at:5): ok     (0m0.088s 0m0.027s)
1298. boolean - C (ovsdb-types.at:7): ok     (0m0.012s 0m0.003s)
1299. boolean - Python2 (ovsdb-types.at:7): ok     (0m0.065s 0m0.019s)
1300. boolean - Python3 (ovsdb-types.at:7): ok     (0m0.070s 0m0.073s)
1301. string - C (ovsdb-types.at:9): ok     (0m0.014s 0m0.001s)
1302. string - Python2 (ovsdb-types.at:9): ok     (0m0.073s 0m0.012s)
1303. string - Python3 (ovsdb-types.at:9): ok     (0m0.097s 0m0.019s)
1304. uuid - C (ovsdb-types.at:11): ok     (0m0.010s 0m0.004s)
1305. uuid - Python2 (ovsdb-types.at:11): ok     (0m0.070s 0m0.015s)
1306. uuid - Python3 (ovsdb-types.at:11): ok     (0m0.100s 0m0.016s)
1307. void is not a valid atomic-type - C (ovsdb-types.at:13): ok     (0m0.017s 0m0.001s)
1308. void is not a valid atomic-type - Python2 (ovsdb-types.at:13): ok     (0m0.113s 0m0.007s)
1309. integer enum - C (ovsdb-types.at:18): ok     (0m0.008s 0m0.006s)
1310. integer enum - Python2 (ovsdb-types.at:18): ok     (0m0.063s 0m0.023s)
1311. integer enum - Python3 (ovsdb-types.at:18): ok     (0m0.089s 0m0.027s)
1312. integer >= 5 - C (ovsdb-types.at:21): ok     (0m0.011s 0m0.004s)
1313. integer >= 5 - Python2 (ovsdb-types.at:21): ok     (0m0.063s 0m0.022s)
1314. integer >= 5 - Python3 (ovsdb-types.at:21): ok     (0m0.102s 0m0.013s)
1315. integer <= 7 - C (ovsdb-types.at:24): ok     (0m0.012s 0m0.002s)
1316. integer <= 7 - Python2 (ovsdb-types.at:24): ok     (0m0.072s 0m0.013s)
1317. integer <= 7 - Python3 (ovsdb-types.at:24): ok     (0m0.104s 0m0.012s)
1318. integer between -5 and 10 - C (ovsdb-types.at:27): ok     (0m0.013s 0m0.002s)
1319. integer between -5 and 10 - Python2 (ovsdb-types.at:27): ok     (0m0.101s 0m0.017s)
1320. integer between -5 and 10 - Python3 (ovsdb-types.at:27): ok     (0m0.113s 0m0.016s)
1321. integer max may not be less than min - C (ovsdb-types.at:30): ok     (0m0.015s 0m0.004s)
1322. integer max may not be less than min - Python2 (ovsdb-types.at:30): ok     (0m0.067s 0m0.095s)
1323. real enum - C (ovsdb-types.at:34): ok     (0m0.007s 0m0.009s)
1324. real enum - Python2 (ovsdb-types.at:34): ok     (0m0.039s 0m0.064s)
1325. real enum - Python3 (ovsdb-types.at:34): ok     (0m0.117s 0m0.004s)
1326. real >= -1.5 - C (ovsdb-types.at:37): ok     (0m0.009s 0m0.005s)
1327. real >= -1.5 - Python2 (ovsdb-types.at:37): ok     (0m0.076s 0m0.008s)
1328. real >= -1.5 - Python3 (ovsdb-types.at:37): ok     (0m0.065s 0m0.086s)
1329. real <= 1e5 - C (ovsdb-types.at:40): ok     (0m0.009s 0m0.005s)
1330. real <= 1e5 - Python2 (ovsdb-types.at:40): ok     (0m0.062s 0m0.024s)
1331. real <= 1e5 - Python3 (ovsdb-types.at:40): ok     (0m0.104s 0m0.012s)
1332. real between -2.5 and 3.75 - C (ovsdb-types.at:43): ok     (0m0.013s 0m0.001s)
1333. real between -2.5 and 3.75 - Python2 (ovsdb-types.at:43): ok     (0m0.064s 0m0.022s)
1334. real between -2.5 and 3.75 - Python3 (ovsdb-types.at:43): ok     (0m0.097s 0m0.019s)
1335. real max may not be less than min - C (ovsdb-types.at:46): ok     (0m0.012s 0m0.006s)
1336. real max may not be less than min - Python2 (ovsdb-types.at:46): ok     (0m0.061s 0m0.083s)
1337. boolean - C (ovsdb-types.at:50): ok     (0m0.014s 0m0.001s)
1338. boolean - Python2 (ovsdb-types.at:50): ok     (0m0.073s 0m0.012s)
1339. boolean - Python3 (ovsdb-types.at:50): ok     (0m0.054s 0m0.089s)
1340. boolean enum - C (ovsdb-types.at:52): ok     (0m0.013s 0m0.002s)
1341. boolean enum - Python2 (ovsdb-types.at:52): ok     (0m0.058s 0m0.037s)
1342. boolean enum - Python3 (ovsdb-types.at:52): ok     (0m0.086s 0m0.052s)
1343. string enum - C (ovsdb-types.at:56): ok     (0m0.009s 0m0.006s)
1344. string enum - Python2 (ovsdb-types.at:56): ok     (0m0.047s 0m0.049s)
1345. string enum - Python3 (ovsdb-types.at:56): ok     (0m0.104s 0m0.009s)
1346. string minLength - C (ovsdb-types.at:59): ok     (0m0.008s 0m0.006s)
1347. string minLength - Python2 (ovsdb-types.at:59): ok     (0m0.061s 0m0.024s)
1348. string minLength - Python3 (ovsdb-types.at:59): ok     (0m0.102s 0m0.013s)
1349. string maxLength - C (ovsdb-types.at:62): ok     (0m0.013s 0m0.002s)
1350. string maxLength - Python2 (ovsdb-types.at:62): ok     (0m0.069s 0m0.015s)
1351. string maxLength - Python3 (ovsdb-types.at:62): ok     (0m0.109s 0m0.006s)
1352. string minLength and maxLength - C (ovsdb-types.at:65): ok     (0m0.009s 0m0.006s)
1353. string minLength and maxLength - Python2 (ovsdb-types.at:65): ok     (0m0.066s 0m0.019s)
1354. string minLength and maxLength - Python3 (ovsdb-types.at:65): ok     (0m0.053s 0m0.089s)
1355. maxLength must not be less than minLength - C (ovsdb-types.at:68): ok     (0m0.015s 0m0.002s)
1356. maxLength must not be less than minLength - Python2 (ovsdb-types.at:68): ok     (0m0.101s 0m0.019s)
1357. maxLength must not be negative - C (ovsdb-types.at:71): ok     (0m0.016s 0m0.002s)
1358. maxLength must not be negative - Python2 (ovsdb-types.at:71): ok     (0m0.060s 0m0.084s)
1359. uuid enum - C (ovsdb-types.at:75): ok     (0m0.009s 0m0.005s)
1360. uuid enum - Python2 (ovsdb-types.at:75): ok     (0m0.067s 0m0.017s)
1361. uuid enum - Python3 (ovsdb-types.at:75): ok     (0m0.060s 0m0.089s)
1362. uuid refTable - C (ovsdb-types.at:78): ok     (0m0.010s 0m0.004s)
1363. uuid refTable - Python2 (ovsdb-types.at:78): ok     (0m0.063s 0m0.025s)
1364. uuid refTable - Python3 (ovsdb-types.at:78): ok     (0m0.076s 0m0.063s)
1365. uuid refTable must be valid id - C (ovsdb-types.at:81): ok     (0m0.011s 0m0.006s)
1366. uuid refTable must be valid id - Python2 (ovsdb-types.at:81): ok     (0m0.077s 0m0.068s)
1367. void is not a valid base-type - C (ovsdb-types.at:85): ok     (0m0.010s 0m0.007s)
1368. void is not a valid base-type - Python2 (ovsdb-types.at:85): ok     (0m0.054s 0m0.091s)
1369. "type" member must be present - C (ovsdb-types.at:87): ok     (0m0.009s 0m0.008s)
1370. "type" member must be present - Python2 (ovsdb-types.at:87): ok     (0m0.074s 0m0.065s)
1371. simple integer - C (ovsdb-types.at:92): ok     (0m0.010s 0m0.004s)
1372. simple integer - Python2 (ovsdb-types.at:92): ok     (0m0.071s 0m0.014s)
1373. simple integer - Python3 (ovsdb-types.at:92): ok     (0m0.105s 0m0.010s)
1374. simple real - C (ovsdb-types.at:94): ok     (0m0.010s 0m0.005s)
1375. simple real - Python2 (ovsdb-types.at:94): ok     (0m0.076s 0m0.017s)
1376. simple real - Python3 (ovsdb-types.at:94): ok     (0m0.054s 0m0.086s)
1377. simple boolean - C (ovsdb-types.at:96): ok     (0m0.012s 0m0.002s)
1378. simple boolean - Python2 (ovsdb-types.at:96): ok     (0m0.041s 0m0.051s)
1379. simple boolean - Python3 (ovsdb-types.at:96): ok     (0m0.054s 0m0.086s)
1380. simple string - C (ovsdb-types.at:98): ok     (0m0.010s 0m0.004s)
1381. simple string - Python2 (ovsdb-types.at:98): ok     (0m0.045s 0m0.047s)
1382. simple string - Python3 (ovsdb-types.at:98): ok     (0m0.068s 0m0.073s)
1383. simple uuid - C (ovsdb-types.at:100): ok     (0m0.012s 0m0.002s)
1384. simple uuid - Python2 (ovsdb-types.at:100): ok     (0m0.042s 0m0.051s)
1385. simple uuid - Python3 (ovsdb-types.at:100): ok     (0m0.070s 0m0.071s)
1386. integer in object - C (ovsdb-types.at:102): ok     (0m0.013s 0m0.001s)
1387. integer in object - Python2 (ovsdb-types.at:102): ok     (0m0.074s 0m0.012s)
1388. integer in object - Python3 (ovsdb-types.at:102): ok     (0m0.106s 0m0.008s)
1389. real in object with explicit min and max - C (ovsdb-types.at:104): ok     (0m0.012s 0m0.003s)
1390. real in object with explicit min and max - Python2 (ovsdb-types.at:104): ok     (0m0.057s 0m0.034s)
1391. real in object with explicit min and max - Python3 (ovsdb-types.at:104): ok     (0m0.070s 0m0.071s)
1392. key type is required - C (ovsdb-types.at:107): ok     (0m0.009s 0m0.008s)
1393. key type is required - Python2 (ovsdb-types.at:107): ok     (0m0.056s 0m0.088s)
1394. void is not a valid type - C (ovsdb-types.at:109): ok     (0m0.011s 0m0.006s)
1395. void is not a valid type - Python2 (ovsdb-types.at:109): ok     (0m0.063s 0m0.080s)
1396. optional boolean - C (ovsdb-types.at:114): ok     (0m0.008s 0m0.006s)
1397. optional boolean - Python2 (ovsdb-types.at:114): ok     (0m0.062s 0m0.021s)
1398. optional boolean - Python3 (ovsdb-types.at:114): ok     (0m0.048s 0m0.094s)
1399. set of 1 to 3 uuids - C (ovsdb-types.at:118): ok     (0m0.013s 0m0.002s)
1400. set of 1 to 3 uuids - Python2 (ovsdb-types.at:118): ok     (0m0.050s 0m0.040s)
1401. set of 1 to 3 uuids - Python3 (ovsdb-types.at:118): ok     (0m0.058s 0m0.084s)
1402. set of 0 to 3 strings - C (ovsdb-types.at:121): ok     (0m0.009s 0m0.006s)
1403. set of 0 to 3 strings - Python2 (ovsdb-types.at:121): ok     (0m0.037s 0m0.054s)
1404. set of 0 to 3 strings - Python3 (ovsdb-types.at:121): ok     (0m0.067s 0m0.074s)
1405. set of 0 or more integers - C (ovsdb-types.at:124): ok     (0m0.010s 0m0.004s)
1406. set of 0 or more integers - Python2 (ovsdb-types.at:124): ok     (0m0.059s 0m0.033s)
1407. set of 0 or more integers - Python3 (ovsdb-types.at:124): ok     (0m0.059s 0m0.081s)
1408. set of 1 or more reals - C (ovsdb-types.at:127): ok     (0m0.012s 0m0.002s)
1409. set of 1 or more reals - Python2 (ovsdb-types.at:127): ok     (0m0.050s 0m0.044s)
1410. set of 1 or more reals - Python3 (ovsdb-types.at:127): ok     (0m0.061s 0m0.079s)
1411. set max cannot be less than min - C (ovsdb-types.at:131): ok     (0m0.014s 0m0.003s)
1412. set max cannot be less than min - Python2 (ovsdb-types.at:131): ok     (0m0.074s 0m0.070s)
1413. set max cannot be negative - C (ovsdb-types.at:134): ok     (0m0.014s 0m0.004s)
1414. set max cannot be negative - Python2 (ovsdb-types.at:134): ok     (0m0.067s 0m0.077s)
1415. set min cannot be negative - C (ovsdb-types.at:137): ok     (0m0.014s 0m0.003s)
1416. set min cannot be negative - Python2 (ovsdb-types.at:137): ok     (0m0.067s 0m0.076s)
1417. set min cannot be greater than one - C (ovsdb-types.at:140): ok     (0m0.011s 0m0.006s)
1418. set min cannot be greater than one - Python2 (ovsdb-types.at:140): ok     (0m0.055s 0m0.088s)
1419. map of 1 integer to boolean - C (ovsdb-types.at:146): ok     (0m0.008s 0m0.007s)
1420. map of 1 integer to boolean - Python2 (ovsdb-types.at:146): ok     (0m0.034s 0m0.057s)
1421. map of 1 integer to boolean - Python3 (ovsdb-types.at:146): ok     (0m0.070s 0m0.071s)
1422. map of 1 boolean to integer, explicit min and max - C (ovsdb-types.at:149): ok     (0m0.010s 0m0.005s)
1423. map of 1 boolean to integer, explicit min and max - Python2 (ovsdb-types.at:149): ok     (0m0.053s 0m0.040s)
1424. map of 1 boolean to integer, explicit min and max - Python3 (ovsdb-types.at:149): ok     (0m0.092s 0m0.049s)
1425. map of 1 to 5 uuid to real - C (ovsdb-types.at:152): ok     (0m0.009s 0m0.006s)
1426. map of 1 to 5 uuid to real - Python2 (ovsdb-types.at:152): ok     (0m0.067s 0m0.017s)
1427. map of 1 to 5 uuid to real - Python3 (ovsdb-types.at:152): ok     (0m0.083s 0m0.063s)
1428. map of 0 to 10 string to uuid - C (ovsdb-types.at:155): ok     (0m0.009s 0m0.006s)
1429. map of 0 to 10 string to uuid - Python2 (ovsdb-types.at:155): ok     (0m0.051s 0m0.048s)
1430. map of 0 to 10 string to uuid - Python3 (ovsdb-types.at:155): ok     (0m0.062s 0m0.080s)
1431. map of 1 to 20 real to string - C (ovsdb-types.at:158): ok     (0m0.014s 0m0.001s)
1432. map of 1 to 20 real to string - Python2 (ovsdb-types.at:158): ok     (0m0.059s 0m0.033s)
1433. map of 1 to 20 real to string - Python3 (ovsdb-types.at:158): ok     (0m0.069s 0m0.073s)
1434. map of 0 or more string to real - C (ovsdb-types.at:161): ok     (0m0.012s 0m0.002s)
1435. map of 0 or more string to real - Python2 (ovsdb-types.at:161): ok     (0m0.062s 0m0.030s)
1436. map of 0 or more string to real - Python3 (ovsdb-types.at:161): ok     (0m0.085s 0m0.055s)
1437. map key type is required - C (ovsdb-types.at:165): ok     (0m0.010s 0m0.007s)
1438. map key type is required - Python2 (ovsdb-types.at:165): ok     (0m0.079s 0m0.065s)
1439. default atoms - C (ovsdb-data.at:3): ok     (0m0.008s 0m0.006s)
1440. default atoms - Python2 (ovsdb-data.at:3): ok     (0m0.069s 0m0.021s)
1441. default atoms - Python3 (ovsdb-data.at:3): ok     (0m0.105s 0m0.009s)
1442. default data - C (ovsdb-data.at:11): ok     (0m0.011s 0m0.006s)
1443. default data - Python2 (ovsdb-data.at:11): ok     (0m0.053s 0m0.032s)
1444. default data - Python3 (ovsdb-data.at:11): ok     (0m0.108s 0m0.008s)
1445. integer atom from JSON - C (ovsdb-data.at:76): ok     (0m0.012s 0m0.002s)
1446. integer atom from JSON - Python2 (ovsdb-data.at:76): ok     (0m0.061s 0m0.031s)
1447. integer atom from JSON - Python3 (ovsdb-data.at:76): ok     (0m0.085s 0m0.056s)
1448. integer atom from string (ovsdb-data.at:89): ok     (0m0.009s 0m0.006s)
1449. real atom from JSON - C (ovsdb-data.at:116): ok     (0m0.013s 0m0.001s)
1450. real atom from JSON - Python2 (ovsdb-data.at:116): ok     (0m0.057s 0m0.035s)
1451. real atom from JSON - Python3 (ovsdb-data.at:116): ok     (0m0.080s 0m0.061s)
1452. real atom from string (ovsdb-data.at:133): ok     (0m0.009s 0m0.005s)
1453. boolean atom from JSON - C (ovsdb-data.at:150): ok     (0m0.008s 0m0.007s)
1454. boolean atom from JSON - Python2 (ovsdb-data.at:150): ok     (0m0.060s 0m0.032s)
1455. boolean atom from JSON - Python3 (ovsdb-data.at:150): ok     (0m0.056s 0m0.081s)
1456. boolean atom from string (ovsdb-data.at:155): ok     (0m0.013s 0m0.001s)
1457. string atom from JSON - C (ovsdb-data.at:160): ok     (0m0.014s 0m0.000s)
1458. string atom from JSON - Python2 (ovsdb-data.at:160): ok     (0m0.029s 0m0.063s)
1459. string atom from JSON - Python3 (ovsdb-data.at:160): ok     (0m0.052s 0m0.088s)
1460. string atom from string (ovsdb-data.at:166): ok     (0m0.014s 0m0.001s)
1461. uuid atom from JSON - C (ovsdb-data.at:181): ok     (0m0.011s 0m0.003s)
1462. uuid atom from JSON - Python2 (ovsdb-data.at:181): ok     (0m0.047s 0m0.045s)
1463. uuid atom from JSON - Python3 (ovsdb-data.at:181): ok     (0m0.102s 0m0.012s)
1464. uuid atom from string (ovsdb-data.at:185): ok     (0m0.011s 0m0.003s)
1465. integer atom sorting - C (ovsdb-data.at:189): ok     (0m0.012s 0m0.002s)
1466. integer atom sorting - Python2 (ovsdb-data.at:189): ok     (0m0.064s 0m0.021s)
1467. integer atom sorting - Python3 (ovsdb-data.at:189): ok     (0m0.082s 0m0.058s)
1468. real atom sorting - C (ovsdb-data.at:193): ok     (0m0.010s 0m0.005s)
1469. real atom sorting - Python2 (ovsdb-data.at:193): ok     (0m0.067s 0m0.018s)
1470. real atom sorting - Python3 (ovsdb-data.at:193): ok     (0m0.093s 0m0.051s)
1471. boolean atom sorting - C (ovsdb-data.at:197): ok     (0m0.009s 0m0.005s)
1472. boolean atom sorting - Python2 (ovsdb-data.at:197): ok     (0m0.069s 0m0.023s)
1473. boolean atom sorting - Python3 (ovsdb-data.at:197): ok     (0m0.048s 0m0.098s)
1474. string atom sorting - C (ovsdb-data.at:201): ok     (0m0.010s 0m0.005s)
1475. string atom sorting - Python2 (ovsdb-data.at:201): ok     (0m0.050s 0m0.045s)
1476. string atom sorting - Python3 (ovsdb-data.at:201): ok     (0m0.095s 0m0.021s)
1477. uuid atom sorting - C (ovsdb-data.at:205): ok     (0m0.011s 0m0.004s)
1478. uuid atom sorting - Python2 (ovsdb-data.at:205): ok     (0m0.053s 0m0.033s)
1479. uuid atom sorting - Python3 (ovsdb-data.at:205): ok     (0m0.108s 0m0.008s)
1480. real not acceptable integer JSON atom - C (ovsdb-data.at:242): ok     (0m0.010s 0m0.004s)
1481. real not acceptable integer JSON atom - Python2 (ovsdb-data.at:242): ok     (0m0.051s 0m0.037s)
1482. real not acceptable integer JSON atom - Python3 (ovsdb-data.at:242): ok     (0m0.065s 0m0.076s)
1483. no invalid UTF-8 sequences in strings (ovsdb-data.at:248): ok     (0m0.011s 0m0.003s)
1484. no invalid UTF-8 sequences in strings - Python (ovsdb-data.at:263): ok     (0m0.079s 0m0.008s)
1485. real not acceptable integer string atom (ovsdb-data.at:271): ok     (0m0.012s 0m0.005s)
1486. inverted range is not acceptable integer string atom positive and negative (ovsdb-data.at:275): ok     (0m0.015s 0m0.003s)
1487. inverted range is not acceptable integer string atom negative (ovsdb-data.at:279): ok     (0m0.010s 0m0.008s)
1488. inverted range is not acceptable integer string atom positive (ovsdb-data.at:283): ok     (0m0.015s 0m0.002s)
1489. too big range is not acceptable integer string atom positive and negative (ovsdb-data.at:287): ok     (0m0.011s 0m0.006s)
1490. too big range is not acceptable integer string atom negative (ovsdb-data.at:291): ok     (0m0.015s 0m0.006s)
1491. too big range is not acceptable integer string atom positive (ovsdb-data.at:295): ok     (0m0.016s 0m0.002s)
1492. string "true" not acceptable boolean JSON atom - C (ovsdb-data.at:299): ok     (0m0.014s 0m0.001s)
1493. string "true" not acceptable boolean JSON atom - Python2 (ovsdb-data.at:299): ok     (0m0.076s 0m0.008s)
1494. string "true" not acceptable boolean JSON atom - Python3 (ovsdb-data.at:299): ok     (0m0.061s 0m0.079s)
1495. string "true" not acceptable boolean string atom (ovsdb-data.at:303): ok     (0m0.012s 0m0.006s)
1496. integer not acceptable string JSON atom - C (ovsdb-data.at:307): ok     (0m0.009s 0m0.007s)
1497. integer not acceptable string JSON atom - Python2 (ovsdb-data.at:307): ok     (0m0.060s 0m0.032s)
1498. integer not acceptable string JSON atom - Python3 (ovsdb-data.at:307): ok     (0m0.075s 0m0.066s)
1499. uuid atom must be expressed as JSON array - C (ovsdb-data.at:311): ok     (0m0.010s 0m0.004s)
1500. uuid atom must be expressed as JSON array - Python2 (ovsdb-data.at:311): ok     (0m0.038s 0m0.051s)
1501. uuid atom must be expressed as JSON array - Python3 (ovsdb-data.at:311): ok     (0m0.051s 0m0.089s)
1502. named-uuid requires symbol table - C (ovsdb-data.at:315): ok     (0m0.011s 0m0.003s)
1503. named-uuid requires symbol table - Python2 (ovsdb-data.at:315): ok     (0m0.049s 0m0.043s)
1504. named-uuid requires symbol table - Python3 (ovsdb-data.at:315): ok     (0m0.045s 0m0.095s)
1505. empty string atom must be quoted (ovsdb-data.at:319): ok     (0m0.014s 0m0.004s)
1506. quotes must be balanced (ovsdb-data.at:323): ok     (0m0.011s 0m0.006s)
1507. quoted string must not contain unescaped quote (ovsdb-data.at:327): ok     (0m0.012s 0m0.005s)
1508. quoted string must not end with backslash (ovsdb-data.at:331): ok     (0m0.009s 0m0.008s)
1509. uuids must be valid (ovsdb-data.at:335): ok     (0m0.011s 0m0.006s)
1510. integer atom enum - C (ovsdb-data.at:341): ok     (0m0.010s 0m0.006s)
1511. integer atom enum - Python2 (ovsdb-data.at:341): ok     (0m0.066s 0m0.019s)
1512. integer atom enum - Python3 (ovsdb-data.at:341): ok     (0m0.095s 0m0.038s)
1513. integer atom enum from string (ovsdb-data.at:364): ok     (0m0.012s 0m0.002s)
1514. integer not in enum set from string (ovsdb-data.at:377): ok     (0m0.017s 0m0.000s)
1515. integer range not in enum set from string (ovsdb-data.at:381): ok     (0m0.016s 0m0.002s)
1516. real atom enum - C (ovsdb-data.at:385): ok     (0m0.013s 0m0.002s)
1517. real atom enum - Python2 (ovsdb-data.at:385): ok     (0m0.041s 0m0.052s)
1518. real atom enum - Python3 (ovsdb-data.at:385): ok     (0m0.061s 0m0.080s)
1519. boolean atom enum - C (ovsdb-data.at:402): ok     (0m0.010s 0m0.004s)
1520. boolean atom enum - Python2 (ovsdb-data.at:402): ok     (0m0.056s 0m0.036s)
1521. boolean atom enum - Python3 (ovsdb-data.at:402): ok     (0m0.074s 0m0.069s)
1522. string atom enum - C (ovsdb-data.at:409): ok     (0m0.013s 0m0.002s)
1523. string atom enum - Python2 (ovsdb-data.at:409): ok     (0m0.052s 0m0.047s)
1524. string atom enum - Python3 (ovsdb-data.at:409): ok     (0m0.065s 0m0.071s)
1525. uuid atom enum - C (ovsdb-data.at:424): ok     (0m0.009s 0m0.006s)
1526. uuid atom enum - Python2 (ovsdb-data.at:424): ok     (0m0.042s 0m0.051s)
1527. uuid atom enum - Python3 (ovsdb-data.at:424): ok     (0m0.041s 0m0.099s)
1528. integers >= 5 - C (ovsdb-data.at:435): ok     (0m0.013s 0m0.001s)
1529. integers >= 5 - Python2 (ovsdb-data.at:435): ok     (0m0.060s 0m0.023s)
1530. integers >= 5 - Python3 (ovsdb-data.at:435): ok     (0m0.098s 0m0.016s)
1531. integers <= -1 - C (ovsdb-data.at:448): ok     (0m0.014s 0m0.001s)
1532. integers <= -1 - Python2 (ovsdb-data.at:448): ok     (0m0.043s 0m0.050s)
1533. integers <= -1 - Python3 (ovsdb-data.at:448): ok     (0m0.071s 0m0.072s)
1534. integers in range -10 to 10 - C (ovsdb-data.at:459): ok     (0m0.009s 0m0.006s)
1535. integers in range -10 to 10 - Python2 (ovsdb-data.at:459): ok     (0m0.058s 0m0.035s)
1536. integers in range -10 to 10 - Python3 (ovsdb-data.at:459): ok     (0m0.059s 0m0.092s)
1537. reals >= 5 - C (ovsdb-data.at:480): ok     (0m0.013s 0m0.002s)
1538. reals >= 5 - Python2 (ovsdb-data.at:480): ok     (0m0.054s 0m0.037s)
1539. reals >= 5 - Python3 (ovsdb-data.at:480): ok     (0m0.058s 0m0.077s)
1540. reals <= -1 - C (ovsdb-data.at:493): ok     (0m0.011s 0m0.003s)
1541. reals <= -1 - Python2 (ovsdb-data.at:493): ok     (0m0.046s 0m0.046s)
1542. reals <= -1 - Python3 (ovsdb-data.at:493): ok     (0m0.058s 0m0.082s)
1543. reals in range -10 to 10 - C (ovsdb-data.at:504): ok     (0m0.013s 0m0.001s)
1544. reals in range -10 to 10 - Python2 (ovsdb-data.at:504): ok     (0m0.038s 0m0.055s)
1545. reals in range -10 to 10 - Python3 (ovsdb-data.at:504): ok     (0m0.052s 0m0.088s)
1546. strings at least 2 characters long - C (ovsdb-data.at:525): ok     (0m0.012s 0m0.003s)
1547. strings at least 2 characters long - Python2 (ovsdb-data.at:525): ok     (0m0.043s 0m0.058s)
1548. strings at least 2 characters long - Python3 (ovsdb-data.at:525): ok     (0m0.102s 0m0.013s)
1549. strings no more than 2 characters long - C (ovsdb-data.at:543): ok     (0m0.010s 0m0.005s)
1550. strings no more than 2 characters long - Python2 (ovsdb-data.at:543): ok     (0m0.065s 0m0.019s)
1551. strings no more than 2 characters long - Python3 (ovsdb-data.at:543): ok     (0m0.102s 0m0.012s)
1552. integer JSON datum - C (ovsdb-data.at:558): ok     (0m0.014s 0m0.000s)
1553. integer JSON datum - Python2 (ovsdb-data.at:558): ok     (0m0.045s 0m0.046s)
1554. integer JSON datum - Python3 (ovsdb-data.at:558): ok     (0m0.040s 0m0.101s)
1555. integer string datum (ovsdb-data.at:564): ok     (0m0.010s 0m0.004s)
1556. real JSON datum - C (ovsdb-data.at:571): ok     (0m0.010s 0m0.005s)
1557. real JSON datum - Python2 (ovsdb-data.at:571): ok     (0m0.045s 0m0.048s)
1558. real JSON datum - Python3 (ovsdb-data.at:571): ok     (0m0.074s 0m0.066s)
1559. real string datum (ovsdb-data.at:577): ok     (0m0.013s 0m0.002s)
1560. boolean JSON datum - C (ovsdb-data.at:583): ok     (0m0.008s 0m0.006s)
1561. boolean JSON datum - Python2 (ovsdb-data.at:583): ok     (0m0.080s 0m0.004s)
1562. boolean JSON datum - Python3 (ovsdb-data.at:583): ok     (0m0.106s 0m0.009s)
1563. boolean string datum (ovsdb-data.at:588): ok     (0m0.013s 0m0.001s)
1564. string JSON datum - C (ovsdb-data.at:593): ok     (0m0.010s 0m0.004s)
1565. string JSON datum - Python2 (ovsdb-data.at:593): ok     (0m0.068s 0m0.016s)
1566. string JSON datum - Python3 (ovsdb-data.at:593): ok     (0m0.098s 0m0.016s)
1567. string string datum (ovsdb-data.at:599): ok     (0m0.019s 0m0.001s)
1568. JSON optional boolean - C (ovsdb-data.at:608): ok     (0m0.012s 0m0.002s)
1569. JSON optional boolean - Python2 (ovsdb-data.at:608): ok     (0m0.075s 0m0.008s)
1570. JSON optional boolean - Python3 (ovsdb-data.at:608): ok     (0m0.048s 0m0.092s)
1571. string optional boolean (ovsdb-data.at:618): ok     (0m0.012s 0m0.003s)
1572. JSON set of 0 or more integers - C (ovsdb-data.at:628): ok     (0m0.011s 0m0.004s)
1573. JSON set of 0 or more integers - Python2 (ovsdb-data.at:628): ok     (0m0.077s 0m0.010s)
1574. JSON set of 0 or more integers - Python3 (ovsdb-data.at:628): ok     (0m0.090s 0m0.054s)
1575. string set of 0 or more integers (ovsdb-data.at:645): ok     (0m0.014s 0m0.001s)
1576. JSON set of 1 to 3 uuids - C (ovsdb-data.at:664): ok     (0m0.009s 0m0.005s)
1577. JSON set of 1 to 3 uuids - Python2 (ovsdb-data.at:664): ok     (0m0.041s 0m0.051s)
1578. JSON set of 1 to 3 uuids - Python3 (ovsdb-data.at:664): ok     (0m0.061s 0m0.079s)
1579. string set of 1 to 3 uuids (ovsdb-data.at:675): ok     (0m0.010s 0m0.005s)
1580. JSON set of 0 to 3 strings - C (ovsdb-data.at:684): ok     (0m0.008s 0m0.007s)
1581. JSON set of 0 to 3 strings - Python2 (ovsdb-data.at:684): ok     (0m0.030s 0m0.062s)
1582. JSON set of 0 to 3 strings - Python3 (ovsdb-data.at:684): ok     (0m0.098s 0m0.047s)
1583. string set of 0 to 3 strings (ovsdb-data.at:697): ok     (0m0.011s 0m0.004s)
1584. duplicate boolean not allowed in JSON set - C (ovsdb-data.at:708): ok     (0m0.012s 0m0.005s)
1585. duplicate boolean not allowed in JSON set - Python2 (ovsdb-data.at:708): ok     (0m0.057s 0m0.087s)
1586. duplicate boolean not allowed in string set (ovsdb-data.at:712): ok     (0m0.015s 0m0.003s)
1587. duplicate integer not allowed in JSON set - C (ovsdb-data.at:716): ok     (0m0.013s 0m0.004s)
1588. duplicate integer not allowed in JSON set - Python2 (ovsdb-data.at:716): ok     (0m0.111s 0m0.008s)
1589. duplicate integer not allowed in string set (ovsdb-data.at:720): ok     (0m0.016s 0m0.001s)
1590. duplicate real not allowed in JSON set - C (ovsdb-data.at:724): ok     (0m0.014s 0m0.003s)
1591. duplicate real not allowed in JSON set - Python2 (ovsdb-data.at:724): ok     (0m0.076s 0m0.066s)
1592. duplicate real not allowed in string set (ovsdb-data.at:728): ok     (0m0.009s 0m0.008s)
1593. duplicate string not allowed in JSON set - C (ovsdb-data.at:732): ok     (0m0.015s 0m0.002s)
1594. duplicate string not allowed in JSON set - Python2 (ovsdb-data.at:732): ok     (0m0.078s 0m0.065s)
1595. duplicate string not allowed in string set (ovsdb-data.at:736): ok     (0m0.014s 0m0.004s)
1596. duplicate uuid not allowed in JSON set - C (ovsdb-data.at:740): ok     (0m0.010s 0m0.007s)
1597. duplicate uuid not allowed in JSON set - Python2 (ovsdb-data.at:740): ok     (0m0.081s 0m0.061s)
1598. duplicate uuid not allowed in string set (ovsdb-data.at:747): ok     (0m0.010s 0m0.007s)
1599. JSON map of 1 integer to boolean - C (ovsdb-data.at:756): ok     (0m0.014s 0m0.000s)
1600. JSON map of 1 integer to boolean - Python2 (ovsdb-data.at:756): ok     (0m0.050s 0m0.041s)
1601. JSON map of 1 integer to boolean - Python3 (ovsdb-data.at:756): ok     (0m0.061s 0m0.078s)
1602. string map of 1 integer to boolean (ovsdb-data.at:761): ok     (0m0.010s 0m0.004s)
1603. JSON map of at least 1 integer to boolean - C (ovsdb-data.at:766): ok     (0m0.013s 0m0.002s)
1604. JSON map of at least 1 integer to boolean - Python2 (ovsdb-data.at:766): ok     (0m0.036s 0m0.056s)
1605. JSON map of at least 1 integer to boolean - Python3 (ovsdb-data.at:766): ok     (0m0.106s 0m0.008s)
1606. string map of at least 1 integer to boolean (ovsdb-data.at:775): ok     (0m0.013s 0m0.002s)
1607. JSON map of 1 boolean to integer - C (ovsdb-data.at:784): ok     (0m0.007s 0m0.007s)
1608. JSON map of 1 boolean to integer - Python2 (ovsdb-data.at:784): ok     (0m0.044s 0m0.048s)
1609. JSON map of 1 boolean to integer - Python3 (ovsdb-data.at:784): ok     (0m0.054s 0m0.086s)
1610. string map of 1 boolean to integer (ovsdb-data.at:789): ok     (0m0.010s 0m0.004s)
1611. JSON map of 1 uuid to real - C (ovsdb-data.at:794): ok     (0m0.009s 0m0.006s)
1612. JSON map of 1 uuid to real - Python2 (ovsdb-data.at:794): ok     (0m0.077s 0m0.009s)
1613. JSON map of 1 uuid to real - Python3 (ovsdb-data.at:794): ok     (0m0.103s 0m0.012s)
1614. string map of 1 uuid to real (ovsdb-data.at:803): ok     (0m0.013s 0m0.002s)
1615. JSON map of 10 string to string - C (ovsdb-data.at:812): ok     (0m0.011s 0m0.004s)
1616. JSON map of 10 string to string - Python2 (ovsdb-data.at:812): ok     (0m0.072s 0m0.018s)
1617. JSON map of 10 string to string - Python3 (ovsdb-data.at:812): ok     (0m0.064s 0m0.079s)
1618. string map of 10 string to string (ovsdb-data.at:826): ok     (0m0.009s 0m0.005s)
1619. duplicate integer key not allowed in JSON map - C (ovsdb-data.at:840): ok     (0m0.017s 0m0.000s)
1620. duplicate integer key not allowed in JSON map - Python2 (ovsdb-data.at:840): ok     (0m0.056s 0m0.087s)
1621. duplicate integer key not allowed in string map (ovsdb-data.at:845): ok     (0m0.013s 0m0.004s)
1622. generate and apply diff -- integer (ovsdb-data.at:850): ok     (0m0.009s 0m0.006s)
1623. generate and apply diff -- boolean (ovsdb-data.at:856): ok     (0m0.006s 0m0.007s)
1624. generate and apply diff -- string (ovsdb-data.at:862): ok     (0m0.014s 0m0.000s)
1625. generate and apply diff -- set (ovsdb-data.at:869): ok     (0m0.008s 0m0.006s)
1626. generate and apply diff -- set -- size error (ovsdb-data.at:890): ok     (0m0.015s 0m0.002s)
1627. generate and apply diff -- map (ovsdb-data.at:896): ok     (0m0.008s 0m0.007s)
1628. generate and apply diff with map -- size error (ovsdb-data.at:920): ok     (0m0.016s 0m0.001s)
1629. ordinary column - C (ovsdb-column.at:3): ok     (0m0.012s 0m0.002s)
1630. ordinary column - Python2 (ovsdb-column.at:3): ok     (0m0.047s 0m0.045s)
1631. ordinary column - Python3 (ovsdb-column.at:3): ok     (0m0.058s 0m0.081s)
1632. immutable column - C (ovsdb-column.at:7): ok     (0m0.012s 0m0.002s)
1633. immutable column - Python2 (ovsdb-column.at:7): ok     (0m0.034s 0m0.059s)
1634. immutable column - Python3 (ovsdb-column.at:7): ok     (0m0.053s 0m0.090s)
1635. ephemeral column - C (ovsdb-column.at:11): ok     (0m0.011s 0m0.003s)
1636. ephemeral column - Python2 (ovsdb-column.at:11): ok     (0m0.033s 0m0.059s)
1637. ephemeral column - Python3 (ovsdb-column.at:11): ok     (0m0.075s 0m0.066s)
1638. non-root table with one column - C (ovsdb-table.at:3): ok     (0m0.008s 0m0.006s)
1639. non-root table with one column - Python2 (ovsdb-table.at:3): ok     (0m0.040s 0m0.053s)
1640. non-root table with one column - Python3 (ovsdb-table.at:3): ok     (0m0.055s 0m0.080s)
1641. immutable table with one column - C (ovsdb-table.at:7): ok     (0m0.011s 0m0.003s)
1642. immutable table with one column - Python2 (ovsdb-table.at:7): ok     (0m0.031s 0m0.061s)
1643. immutable table with one column - Python3 (ovsdb-table.at:7): ok     (0m0.043s 0m0.097s)
1644. root table with one column - C (ovsdb-table.at:13): ok     (0m0.013s 0m0.001s)
1645. root table with one column - Python2 (ovsdb-table.at:13): ok     (0m0.065s 0m0.018s)
1646. root table with one column - Python3 (ovsdb-table.at:13): ok     (0m0.053s 0m0.090s)
1647. non-root table with default_is_root=true - C (ovsdb-table.at:19): ok     (0m0.009s 0m0.005s)
1648. non-root table with default_is_root=true - Python2 (ovsdb-table.at:19): ok     (0m0.043s 0m0.048s)
1649. non-root table with default_is_root=true - Python3 (ovsdb-table.at:19): ok     (0m0.068s 0m0.071s)
1650. root table with default_is_root=true - C (ovsdb-table.at:23): ok     (0m0.008s 0m0.006s)
1651. root table with default_is_root=true - Python2 (ovsdb-table.at:23): ok     (0m0.034s 0m0.058s)
1652. root table with default_is_root=true - Python3 (ovsdb-table.at:23): ok     (0m0.063s 0m0.077s)
1653. table with maxRows of 2 - C (ovsdb-table.at:29): ok     (0m0.012s 0m0.003s)
1654. table with maxRows of 2 - Python2 (ovsdb-table.at:29): ok     (0m0.031s 0m0.060s)
1655. table with maxRows of 2 - Python3 (ovsdb-table.at:29): ok     (0m0.048s 0m0.094s)
1656. table with index - C (ovsdb-table.at:34): ok     (0m0.012s 0m0.002s)
1657. table with index - Python2 (ovsdb-table.at:34): ok     (0m0.041s 0m0.051s)
1658. table with index - Python3 (ovsdb-table.at:34): ok     (0m0.051s 0m0.089s)
1659. table with syntax error in index - C (ovsdb-table.at:40): ok     (0m0.016s 0m0.001s)
1660. table with syntax error in index - Python2 (ovsdb-table.at:40): ok     (0m0.058s 0m0.092s)
1661. table with empty index - C (ovsdb-table.at:46): ok     (0m0.014s 0m0.002s)
1662. table with empty index - Python2 (ovsdb-table.at:46): ok     (0m0.056s 0m0.088s)
1663. table with index of ephemeral column - C (ovsdb-table.at:52): ok     (0m0.015s 0m0.002s)
1664. table with index of ephemeral column - Python2 (ovsdb-table.at:52): ok     (0m0.095s 0m0.023s)
1665. column names may not begin with _ - C (ovsdb-table.at:59): ok     (0m0.011s 0m0.006s)
1666. column names may not begin with _ - Python2 (ovsdb-table.at:59): ok     (0m0.077s 0m0.069s)
1667. table must have at least one column (1) - C (ovsdb-table.at:65): ok     (0m0.014s 0m0.004s)
1668. table must have at least one column (1) - Python2 (ovsdb-table.at:65): ok     (0m0.102s 0m0.014s)
1669. table must have at least one column (2) - C (ovsdb-table.at:69): ok     (0m0.011s 0m0.006s)
1670. table must have at least one column (2) - Python2 (ovsdb-table.at:69): ok     (0m0.056s 0m0.089s)
1671. table maxRows must be positive - C (ovsdb-table.at:73): ok     (0m0.015s 0m0.004s)
1672. table maxRows must be positive - Python2 (ovsdb-table.at:73): ok     (0m0.047s 0m0.096s)
1673. row with one string column (ovsdb-row.at:3): ok     (0m0.009s 0m0.005s)
1674. row with one integer column (ovsdb-row.at:19): ok     (0m0.009s 0m0.006s)
1675. row with one real column (ovsdb-row.at:35): ok     (0m0.010s 0m0.004s)
1676. row with one boolean column (ovsdb-row.at:51): ok     (0m0.009s 0m0.006s)
1677. row with one uuid column (ovsdb-row.at:64): ok     (0m0.014s 0m0.000s)
1678. row with set of 1 to 2 elements (ovsdb-row.at:77): ok     (0m0.013s 0m0.001s)
1679. row with map of 1 to 2 elements (ovsdb-row.at:84): ok     (0m0.009s 0m0.005s)
1680. row with several columns (ovsdb-row.at:91): ok     (0m0.012s 0m0.003s)
1681. row hashing (scalars) (ovsdb-row.at:113): ok     (0m0.013s 0m0.002s)
1682. row hashing (sets) (ovsdb-row.at:182): ok     (0m0.009s 0m0.006s)
1683. row hashing (maps) (ovsdb-row.at:235): ok     (0m0.009s 0m0.006s)
1684. schema with valid refTables - C (ovsdb-schema.at:3): ok     (0m0.011s 0m0.003s)
1685. schema with valid refTables - Python2 (ovsdb-schema.at:3): ok     (0m0.056s 0m0.036s)
1686. schema with valid refTables - Python3 (ovsdb-schema.at:3): ok     (0m0.097s 0m0.017s)
1687. schema with ephemeral strong references - C (ovsdb-schema.at:30): ok     (0m0.013s 0m0.002s)
1688. schema with ephemeral strong references - Python2 (ovsdb-schema.at:30): ok     (0m0.049s 0m0.043s)
1689. schema with ephemeral strong references - Python3 (ovsdb-schema.at:30): ok     (0m0.041s 0m0.099s)
1690. schema with immutable weak references - C (ovsdb-schema.at:60): ok     (0m0.010s 0m0.005s)
1691. schema with immutable weak references - Python2 (ovsdb-schema.at:60): ok     (0m0.069s 0m0.023s)
1692. schema with immutable weak references - Python3 (ovsdb-schema.at:60): ok     (0m0.053s 0m0.087s)
1693. schema without version number - C (ovsdb-schema.at:78): ok     (0m0.009s 0m0.006s)
1694. schema without version number - Python2 (ovsdb-schema.at:78): ok     (0m0.024s 0m0.068s)
1695. schema without version number - Python3 (ovsdb-schema.at:78): ok     (0m0.106s 0m0.009s)
1696. schema with invalid refTables - C (ovsdb-schema.at:88): ok     (0m0.011s 0m0.006s)
1697. schema with invalid refTables - Python2 (ovsdb-schema.at:88): ok     (0m0.064s 0m0.079s)
1698. schema with invalid version number - C (ovsdb-schema.at:111): ok     (0m0.011s 0m0.006s)
1699. schema with invalid version number - Python2 (ovsdb-schema.at:111): ok     (0m0.066s 0m0.077s)
1700. null condition (ovsdb-condition.at:3): ok     (0m0.009s 0m0.005s)
1701. conditions on scalars (ovsdb-condition.at:9): ok     (0m0.013s 0m0.002s)
1702. disallowed conditions on scalars (ovsdb-condition.at:75): ok     (0m0.007s 0m0.009s)
1703. conditions on optional scalars (ovsdb-condition.at:213): ok     (0m0.013s 0m0.003s)
1704. disallowed conditions on optional scalars (ovsdb-condition.at:279): ok     (0m0.011s 0m0.005s)
1705. conditions on sets (ovsdb-condition.at:366): ok     (0m0.009s 0m0.006s)
1706. condition sorting (ovsdb-condition.at:427): ok     (0m0.010s 0m0.004s)
1707. boolean condition (ovsdb-condition.at:441): ok     (0m0.010s 0m0.004s)
1708. boolean condition (ovsdb-condition.at:447): ok     (0m0.010s 0m0.004s)
1709. evaluating null condition (ovsdb-condition.at:453): ok     (0m0.006s 0m0.008s)
1710. evaluating conditions on integers (ovsdb-condition.at:462): ok     (0m0.012s 0m0.002s)
1711. evaluating conditions on reals (ovsdb-condition.at:487): ok     (0m0.008s 0m0.006s)
1712. evaluating conditions on booleans (ovsdb-condition.at:512): ok     (0m0.011s 0m0.003s)
1713. evaluating conditions on strings (ovsdb-condition.at:536): ok     (0m0.009s 0m0.005s)
1714. evaluating conditions on UUIDs (ovsdb-condition.at:561): ok     (0m0.010s 0m0.004s)
1715. evaluating conditions on sets (ovsdb-condition.at:587): ok     (0m0.010s 0m0.005s)
1716. evaluating conditions on maps (1) (ovsdb-condition.at:669): ok     (0m0.011s 0m0.004s)
1717. evaluating conditions on maps (2) (ovsdb-condition.at:754): ok     (0m0.012s 0m0.003s)
1718. evaluating conditions on optional integers (ovsdb-condition.at:846): ok     (0m0.009s 0m0.007s)
1719. evaluating conditions on optional strings (ovsdb-condition.at:881): ok     (0m0.013s 0m0.001s)
1720. evaluating conditions on optional reals (ovsdb-condition.at:908): ok     (0m0.013s 0m0.002s)
1721. evaluating false boolean condition (ovsdb-condition.at:943): ok     (0m0.014s 0m0.001s)
1722. evaluating true boolean condition (ovsdb-condition.at:952): ok     (0m0.009s 0m0.005s)
1723. compare condition (ovsdb-condition.at:961): ok     (0m0.009s 0m0.005s)
1724. null mutation (ovsdb-mutation.at:3): ok     (0m0.010s 0m0.004s)
1725. mutations on scalars (ovsdb-mutation.at:9): ok     (0m0.010s 0m0.005s)
1726. disallowed mutations on scalars (ovsdb-mutation.at:37): ok     (0m0.010s 0m0.005s)
1727. disallowed mutations on immutable columns (ovsdb-mutation.at:102): ok     (0m0.008s 0m0.006s)
1728. mutations on sets (ovsdb-mutation.at:114): ok     (0m0.015s 0m0.001s)
1729. executing null mutation (ovsdb-mutation.at:166): ok     (0m0.013s 0m0.001s)
1730. executing mutations on integers (ovsdb-mutation.at:179): ok     (0m0.012s 0m0.003s)
1731. integer overflow detection (ovsdb-mutation.at:216): ok     (0m0.012s 0m0.003s)
1732. executing mutations on integers with constraints (ovsdb-mutation.at:297): ok     (0m0.014s 0m0.001s)
1733. executing mutations on reals (ovsdb-mutation.at:336): ok     (0m0.013s 0m0.001s)
1734. real overflow detection (ovsdb-mutation.at:367): ok     (0m0.015s 0m0.000s)
1735. executing mutations on reals with constraints (ovsdb-mutation.at:410): ok     (0m0.011s 0m0.003s)
1736. executing mutations on integer sets (ovsdb-mutation.at:443): ok     (0m0.012s 0m0.003s)
1737. executing mutations on integer sets with constraints (ovsdb-mutation.at:517): ok     (0m0.014s 0m0.000s)
1738. executing mutations on real sets (ovsdb-mutation.at:556): ok     (0m0.014s 0m0.001s)
1739. executing mutations on boolean sets (ovsdb-mutation.at:629): ok     (0m0.012s 0m0.002s)
1740. executing mutations on string sets (ovsdb-mutation.at:679): ok     (0m0.009s 0m0.005s)
1741. executing mutations on uuid sets (ovsdb-mutation.at:729): ok     (0m0.013s 0m0.001s)
1742. executing mutations on integer maps (ovsdb-mutation.at:779): ok     (0m0.008s 0m0.006s)
1743. queries on scalars (ovsdb-query.at:3): ok     (0m0.012s 0m0.003s)
1744. queries on sets (ovsdb-query.at:95): ok     (0m0.009s 0m0.006s)
1745. queries on maps (1) (ovsdb-query.at:176): ok     (0m0.010s 0m0.005s)
1746. queries on maps (2) (ovsdb-query.at:260): ok     (0m0.008s 0m0.009s)
1747. UUID-distinct queries on scalars (ovsdb-query.at:351): ok     (0m0.010s 0m0.005s)
1748. Boolean-distinct queries on scalars (ovsdb-query.at:444): ok     (0m0.009s 0m0.006s)
1749. parse colunn set containing bad name (ovsdb-query.at:537): ok     (0m0.017s 0m0.000s)
1750. empty table, empty transaction (ovsdb-transaction.at:3): ok     (0m0.011s 0m0.003s)
1751. nonempty table, empty transaction (ovsdb-transaction.at:17): ok     (0m0.009s 0m0.008s)
1752. insert, commit (ovsdb-transaction.at:41): ok     (0m0.016s 0m0.001s)
1753. insert, abort (ovsdb-transaction.at:70): ok     (0m0.009s 0m0.006s)
1754. modify, commit (ovsdb-transaction.at:98): ok     (0m0.013s 0m0.002s)
1755. modify, abort (ovsdb-transaction.at:127): ok     (0m0.010s 0m0.005s)
1756. delete, commit (ovsdb-transaction.at:156): ok     (0m0.014s 0m0.001s)
1757. delete, abort (ovsdb-transaction.at:181): ok     (0m0.008s 0m0.008s)
1758. modify, delete, commit (ovsdb-transaction.at:207): ok     (0m0.009s 0m0.008s)
1759. modify, delete, abort (ovsdb-transaction.at:234): ok     (0m0.008s 0m0.007s)
1760. insert, delete, commit (ovsdb-transaction.at:262): ok     (0m0.009s 0m0.006s)
1761. insert, delete, abort (ovsdb-transaction.at:291): ok     (0m0.013s 0m0.002s)
1762. insert, modify, delete, commit (ovsdb-transaction.at:322): ok     (0m0.014s 0m0.001s)
1763. insert, modify, delete, abort (ovsdb-transaction.at:353): ok     (0m0.008s 0m0.007s)
1764. deletes are aborted cleanly (ovsdb-transaction.at:385): ok     (0m0.016s 0m0.001s)
1765. block insert on read only DB (ovsdb-execution.at:147): ok     (0m0.030s 0m0.008s)
1766. allow select on read only DB (ovsdb-execution.at:156): ok     (0m0.014s 0m0.023s)
1767. uuid-name must be <id> (ovsdb-execution.at:185): ok     (0m0.011s 0m0.026s)
1768. named-uuid must be <id> (ovsdb-execution.at:195): ok     (0m0.010s 0m0.026s)
1769. duplicate uuid-name not allowed (ovsdb-execution.at:204): ok     (0m0.015s 0m0.021s)
1770. insert default row, query table (ovsdb-execution.at:1140): ok     (0m0.029s 0m0.005s)
1771. insert row, query table (ovsdb-execution.at:1140): ok     (0m0.023s 0m0.011s)
1772. insert rows, query by value (ovsdb-execution.at:1140): ok     (0m0.027s 0m0.011s)
1773. insert rows, query by named-uuid (ovsdb-execution.at:1140): ok     (0m0.025s 0m0.008s)
1774. insert rows, update rows by value (ovsdb-execution.at:1140): ok     (0m0.014s 0m0.020s)
1775. insert rows, mutate rows (ovsdb-execution.at:1140): ok     (0m0.019s 0m0.015s)
1776. insert rows, delete by named-uuid (ovsdb-execution.at:1140): ok     (0m0.027s 0m0.010s)
1777. insert rows, delete rows by value (ovsdb-execution.at:1140): ok     (0m0.018s 0m0.017s)
1778. insert rows, delete by (non-matching) value (ovsdb-execution.at:1140): ok     (0m0.021s 0m0.012s)
1779. insert rows, delete all (ovsdb-execution.at:1140): ok     (0m0.015s 0m0.022s)
1780. insert row, query table, commit (ovsdb-execution.at:1140): ok     (0m0.032s 0m0.006s)
1781. insert row, query table, commit durably (ovsdb-execution.at:1140): ok     (0m0.026s 0m0.007s)
1782. equality wait with correct rows (ovsdb-execution.at:1140): ok     (0m0.025s 0m0.009s)
1783. equality wait with extra row (ovsdb-execution.at:1140): ok     (0m0.025s 0m0.011s)
1784. equality wait with missing row (ovsdb-execution.at:1140): ok     (0m0.020s 0m0.017s)
1785. inequality wait with correct rows (ovsdb-execution.at:1140): ok     (0m0.022s 0m0.012s)
1786. inequality wait with extra row (ovsdb-execution.at:1140): ok     (0m0.021s 0m0.015s)
1787. inequality wait with missing row (ovsdb-execution.at:1140): ok     (0m0.018s 0m0.019s)
1788. insert and update constraints (ovsdb-execution.at:1140): ok     (0m0.019s 0m0.022s)
1789. index uniqueness checking (ovsdb-execution.at:1140): ok     (0m0.033s 0m0.009s)
1790. referential integrity -- simple (ovsdb-execution.at:1140): ok     (0m0.017s 0m0.021s)
1791. referential integrity -- mutual references (ovsdb-execution.at:1140): ok     (0m0.025s 0m0.013s)
1792. weak references (ovsdb-execution.at:1140): ok     (0m0.027s 0m0.018s)
1793. immutable columns (ovsdb-execution.at:1140): ok     (0m0.011s 0m0.026s)
1794. garbage collection (ovsdb-execution.at:1140): ok     (0m0.027s 0m0.011s)
1795. trigger fires immediately (ovsdb-trigger.at:15): ok     (0m0.029s 0m0.008s)
1796. trigger times out (ovsdb-trigger.at:38): ok     (0m0.023s 0m0.020s)
1797. trigger fires after delay (ovsdb-trigger.at:61): ok     (0m0.026s 0m0.010s)
1798. delayed trigger modifies database (ovsdb-trigger.at:92): ok     (0m0.028s 0m0.007s)
1799. one delayed trigger wakes up another (ovsdb-trigger.at:132): ok     (0m0.028s 0m0.007s)
1800. insert default row, query table (ovsdb-tool.at:29): ok     (0m0.039s 0m0.029s)
1801. insert row, query table (ovsdb-tool.at:29): ok     (0m0.043s 0m0.021s)
1802. insert rows, query by value (ovsdb-tool.at:29): ok     (0m0.061s 0m0.029s)
1803. insert rows, query by named-uuid (ovsdb-tool.at:29): ok     (0m0.036s 0m0.010s)
1804. insert rows, update rows by value (ovsdb-tool.at:29): ok     (0m0.067s 0m0.026s)
1805. insert rows, mutate rows (ovsdb-tool.at:29): ok     (0m0.064s 0m0.032s)
1806. insert rows, delete by named-uuid (ovsdb-tool.at:29): ok     (0m0.031s 0m0.017s)
1807. insert rows, delete rows by value (ovsdb-tool.at:29): ok     (0m0.069s 0m0.024s)
1808. insert rows, delete by (non-matching) value (ovsdb-tool.at:29): ok     (0m0.060s 0m0.033s)
1809. insert rows, delete all (ovsdb-tool.at:29): ok     (0m0.040s 0m0.009s)
1810. insert row, query table, commit (ovsdb-tool.at:29): ok     (0m0.038s 0m0.010s)
1811. insert row, query table, commit durably (ovsdb-tool.at:29): ok     (0m0.042s 0m0.010s)
1812. equality wait with correct rows (ovsdb-tool.at:29): ok     (0m0.030s 0m0.025s)
1813. equality wait with extra row (ovsdb-tool.at:29): ok     (0m0.035s 0m0.022s)
1814. equality wait with missing row (ovsdb-tool.at:29): ok     (0m0.036s 0m0.014s)
1815. inequality wait with correct rows (ovsdb-tool.at:29): ok     (0m0.033s 0m0.018s)
1816. inequality wait with extra row (ovsdb-tool.at:29): ok     (0m0.029s 0m0.026s)
1817. inequality wait with missing row (ovsdb-tool.at:29): ok     (0m0.027s 0m0.026s)
1818. insert and update constraints (ovsdb-tool.at:29): ok     (0m0.090s 0m0.030s)
1819. index uniqueness checking (ovsdb-tool.at:29): ok     (0m0.113s 0m0.044s)
1820. referential integrity -- simple (ovsdb-tool.at:29): ok     (0m0.141s 0m0.022s)
1821. referential integrity -- mutual references (ovsdb-tool.at:29): ok     (0m0.094s 0m0.041s)
1822. weak references (ovsdb-tool.at:29): ok     (0m0.200s 0m0.065s)
1823. immutable columns (ovsdb-tool.at:29): ok     (0m0.090s 0m0.016s)
1824. garbage collection (ovsdb-tool.at:29): ok     (0m0.198s 0m0.083s)
1825. transaction comments (ovsdb-tool.at:31): ok     (0m0.029s 0m0.019s)
1826. ovsdb-tool compact (ovsdb-tool.at:49): ok     (0m0.279s 0m0.145s)
1827. ovsdb-tool convert -- removing a column (ovsdb-tool.at:172): ok     (0m0.162s 0m0.079s)
1828. ovsdb-tool convert -- adding a column (ovsdb-tool.at:239): ok     (0m0.181s 0m0.059s)
1829. ovsdb-tool unsupported cluster operations (ovsdb-tool.at:305): ok     (0m0.064s 0m0.018s)
1830. ovsdb-tool schema-version, schema-cksum, schema-name (ovsdb-tool.at:321): ok     (0m0.028s 0m0.014s)
1831. ovsdb-tool database inspection commands - standalone (ovsdb-tool.at:332): ok     (0m0.062s 0m0.035s)
1832. ovsdb-tool database inspection commands - clustered (ovsdb-tool.at:351): ok     (0m0.071s 0m0.039s)
1833. ovsdb-tool database inspection commands - joining a cluster (ovsdb-tool.at:369): ok     (0m0.151s 0m0.076s)
1834. ovsdb-tool needs-conversion (no conversion needed) (ovsdb-tool.at:400): ok     (0m0.024s 0m0.005s)
1835. ovsdb-tool needs-conversion (conversion needed) (ovsdb-tool.at:409): ok     (0m0.024s 0m0.008s)
1836. ovsdb-tool create-cluster with initial data (ovsdb-tool.at:420): ok     (0m0.153s 0m0.075s)
1837. insert default row, query table (ovsdb-server.at:41): ok     (0m0.077s 0m0.022s)
1838. insert row, query table (ovsdb-server.at:41): ok     (0m0.070s 0m0.029s)
1839. insert rows, query by value (ovsdb-server.at:41): ok     (0m0.069s 0m0.071s)
1840. insert rows, query by named-uuid (ovsdb-server.at:41): ok     (0m0.052s 0m0.029s)
1841. insert rows, update rows by value (ovsdb-server.at:41): ok     (0m0.091s 0m0.047s)
1842. insert rows, mutate rows (ovsdb-server.at:41): ok     (0m0.089s 0m0.046s)
1843. insert rows, delete by named-uuid (ovsdb-server.at:41): ok     (0m0.062s 0m0.018s)
1844. insert rows, delete rows by value (ovsdb-server.at:41): ok     (0m0.081s 0m0.057s)
1845. insert rows, delete by (non-matching) value (ovsdb-server.at:41): ok     (0m0.104s 0m0.031s)
1846. insert rows, delete all (ovsdb-server.at:41): ok     (0m0.060s 0m0.022s)
1847. insert row, query table, commit (ovsdb-server.at:41): ok     (0m0.058s 0m0.022s)
1848. insert row, query table, commit durably (ovsdb-server.at:41): ok     (0m0.050s 0m0.032s)
1849. equality wait with correct rows (ovsdb-server.at:41): ok     (0m0.054s 0m0.026s)
1850. equality wait with extra row (ovsdb-server.at:41): ok     (0m0.062s 0m0.019s)
1851. equality wait with missing row (ovsdb-server.at:41): ok     (0m0.046s 0m0.037s)
1852. inequality wait with correct rows (ovsdb-server.at:41): ok     (0m0.049s 0m0.035s)
1853. inequality wait with extra row (ovsdb-server.at:41): ok     (0m0.055s 0m0.029s)
1854. inequality wait with missing row (ovsdb-server.at:41): ok     (0m0.061s 0m0.021s)
1855. insert and update constraints (ovsdb-server.at:41): ok     (0m0.097s 0m0.057s)
1856. index uniqueness checking (ovsdb-server.at:41): ok     (0m0.145s 0m0.061s)
1857. referential integrity -- simple (ovsdb-server.at:41): ok     (0m0.160s 0m0.072s)
1858. referential integrity -- mutual references (ovsdb-server.at:41): ok     (0m0.116s 0m0.085s)
1859. weak references (ovsdb-server.at:41): ok     (0m0.224s 0m0.111s)
1860. immutable columns (ovsdb-server.at:41): ok     (0m0.104s 0m0.045s)
1861. garbage collection (ovsdb-server.at:41): ok     (0m0.225s 0m0.121s)
1862. truncating corrupted database log (ovsdb-server.at:45): ok     (0m0.083s 0m0.038s)
1863. truncating database log with bad transaction (ovsdb-server.at:92): ok     (0m0.076s 0m0.050s)
1864. database multiplexing implementation (ovsdb-server.at:153): ok     (0m0.074s 0m0.039s)
1865. ovsdb-server/add-db and remove-db (ovsdb-server.at:170): ok     (0m0.455s 0m0.220s)
1866. ovsdb-server/add-db with --monitor (ovsdb-server.at:285): ok     (0m0.121s 0m0.057s)
1867. ovsdb-server/add-db and remove-db with --monitor (ovsdb-server.at:316): ok     (0m0.124s 0m0.054s)
1868. --remote=db: implementation (ovsdb-server.at:345): ok     (0m0.067s 0m0.044s)
1869. ovsdb-server/add-remote and remove-remote (ovsdb-server.at:409): ok     (0m0.134s 0m0.067s)
1870. ovsdb-server/add-remote with --monitor (ovsdb-server.at:462): ok     (0m0.074s 0m0.030s)
1871. ovsdb-server/add-remote and remove-remote with --monitor (ovsdb-server.at:493): ok     (0m0.102s 0m0.033s)
1872. SSL db: implementation (ovsdb-server.at:528): ok     (0m0.095s 0m0.051s)
1873. compacting online - standalone (ovsdb-server.at:819): ok     (0m0.315s 0m0.154s)
1874. compacting online - cluster (ovsdb-server.at:824): ok     (0m0.308s 0m0.151s)
1875. schema conversion online - standalone (ovsdb-server.at:1105): ok     (0m0.375s 0m0.204s)
1876. schema conversion online - clustered (ovsdb-server.at:1110): ok     (0m0.377s 0m0.188s)
1877. ovsdb-server combines updates on backlogged connections (ovsdb-server.at:1115): ok     (0m0.691s 0m0.437s)
1878. insert default row, query table (ovsdb-server.at:1248): ok     (0m0.076s 0m0.033s)
1879. insert row, query table (ovsdb-server.at:1248): ok     (0m0.068s 0m0.042s)
1880. insert rows, query by value (ovsdb-server.at:1248): ok     (0m0.115s 0m0.035s)
1881. insert rows, query by named-uuid (ovsdb-server.at:1248): ok     (0m0.049s 0m0.039s)
1882. insert rows, update rows by value (ovsdb-server.at:1248): ok     (0m0.117s 0m0.035s)
1883. insert rows, mutate rows (ovsdb-server.at:1248): ok     (0m0.123s 0m0.028s)
1884. insert rows, delete by named-uuid (ovsdb-server.at:1248): ok     (0m0.057s 0m0.038s)
1885. insert rows, delete rows by value (ovsdb-server.at:1248): ok     (0m0.095s 0m0.056s)
1886. insert rows, delete by (non-matching) value (ovsdb-server.at:1248): ok     (0m0.095s 0m0.061s)
1887. insert rows, delete all (ovsdb-server.at:1248): ok     (0m0.060s 0m0.026s)
1888. insert row, query table, commit (ovsdb-server.at:1248): ok     (0m0.064s 0m0.024s)
1889. insert row, query table, commit durably (ovsdb-server.at:1248): ok     (0m0.066s 0m0.020s)
1890. equality wait with correct rows (ovsdb-server.at:1248): ok     (0m0.064s 0m0.021s)
1891. equality wait with extra row (ovsdb-server.at:1248): ok     (0m0.064s 0m0.023s)
1892. equality wait with missing row (ovsdb-server.at:1248): ok     (0m0.070s 0m0.015s)
1893. inequality wait with correct rows (ovsdb-server.at:1248): ok     (0m0.064s 0m0.021s)
1894. inequality wait with extra row (ovsdb-server.at:1248): ok     (0m0.052s 0m0.037s)
1895. inequality wait with missing row (ovsdb-server.at:1248): ok     (0m0.063s 0m0.024s)
1896. insert and update constraints (ovsdb-server.at:1248): ok     (0m0.123s 0m0.048s)
1897. index uniqueness checking (ovsdb-server.at:1248): ok     (0m0.166s 0m0.074s)
1898. referential integrity -- simple (ovsdb-server.at:1248): ok     (0m0.189s 0m0.075s)
1899. referential integrity -- mutual references (ovsdb-server.at:1248): ok     (0m0.161s 0m0.056s)
1900. weak references (ovsdb-server.at:1248): ok     (0m0.261s 0m0.141s)
1901. immutable columns (ovsdb-server.at:1248): ok     (0m0.117s 0m0.058s)
1902. garbage collection (ovsdb-server.at:1248): ok     (0m0.260s 0m0.145s)
1903. insert default row, query table (ovsdb-server.at:1286): ok     (0m0.082s 0m0.028s)
1904. insert default row, query table (ovsdb-server.at:1322): ok     (0m0.067s 0m0.033s)
1905. insert row, query table (ovsdb-server.at:1322): ok     (0m0.056s 0m0.047s)
1906. insert rows, query by value (ovsdb-server.at:1322): ok     (0m0.091s 0m0.049s)
1907. insert rows, query by named-uuid (ovsdb-server.at:1322): ok     (0m0.057s 0m0.026s)
1908. insert rows, update rows by value (ovsdb-server.at:1322): ok     (0m0.082s 0m0.065s)
1909. insert rows, mutate rows (ovsdb-server.at:1322): ok     (0m0.080s 0m0.061s)
1910. insert rows, delete by named-uuid (ovsdb-server.at:1322): ok     (0m0.050s 0m0.036s)
1911. insert rows, delete rows by value (ovsdb-server.at:1322): ok     (0m0.090s 0m0.051s)
1912. insert rows, delete by (non-matching) value (ovsdb-server.at:1322): ok     (0m0.081s 0m0.058s)
1913. insert rows, delete all (ovsdb-server.at:1322): ok     (0m0.058s 0m0.025s)
1914. insert row, query table, commit (ovsdb-server.at:1322): ok     (0m0.057s 0m0.028s)
1915. insert row, query table, commit durably (ovsdb-server.at:1322): ok     (0m0.057s 0m0.025s)
1916. equality wait with correct rows (ovsdb-server.at:1322): ok     (0m0.064s 0m0.018s)
1917. equality wait with extra row (ovsdb-server.at:1322): ok     (0m0.065s 0m0.018s)
1918. equality wait with missing row (ovsdb-server.at:1322): ok     (0m0.055s 0m0.032s)
1919. inequality wait with correct rows (ovsdb-server.at:1322): ok     (0m0.056s 0m0.032s)
1920. inequality wait with extra row (ovsdb-server.at:1322): ok     (0m0.064s 0m0.022s)
1921. inequality wait with missing row (ovsdb-server.at:1322): ok     (0m0.066s 0m0.016s)
1922. insert and update constraints (ovsdb-server.at:1322): ok     (0m0.101s 0m0.058s)
1923. index uniqueness checking (ovsdb-server.at:1322): ok     (0m0.150s 0m0.066s)
1924. referential integrity -- simple (ovsdb-server.at:1322): ok     (0m0.146s 0m0.084s)
1925. referential integrity -- mutual references (ovsdb-server.at:1322): ok     (0m0.119s 0m0.077s)
1926. weak references (ovsdb-server.at:1322): ok     (0m0.241s 0m0.101s)
1927. immutable columns (ovsdb-server.at:1322): ok     (0m0.094s 0m0.062s)
1928. garbage collection (ovsdb-server.at:1322): ok     (0m0.251s 0m0.102s)
1929. insert default row, query table (ovsdb-server.at:1359): ok     (0m0.065s 0m0.037s)
1930. insert default row, query table (ovsdb-server.at:1395): ok     (0m0.056s 0m0.035s)
1931. insert row, query table (ovsdb-server.at:1395): ok     (0m0.072s 0m0.019s)
1932. insert rows, query by value (ovsdb-server.at:1395): ok     (0m0.110s 0m0.042s)
1933. insert rows, query by named-uuid (ovsdb-server.at:1395): ok     (0m0.042s 0m0.021s)
1934. insert rows, update rows by value (ovsdb-server.at:1395): ok     (0m0.125s 0m0.038s)
1935. insert rows, mutate rows (ovsdb-server.at:1395): ok     (0m0.116s 0m0.039s)
1936. insert rows, delete by named-uuid (ovsdb-server.at:1395): ok     (0m0.048s 0m0.014s)
1937. insert rows, delete rows by value (ovsdb-server.at:1395): ok     (0m0.117s 0m0.034s)
1938. insert rows, delete by (non-matching) value (ovsdb-server.at:1395): ok     (0m0.092s 0m0.064s)
1939. insert rows, delete all (ovsdb-server.at:1395): ok     (0m0.036s 0m0.025s)
1940. insert row, query table, commit (ovsdb-server.at:1395): ok     (0m0.052s 0m0.010s)
1941. insert row, query table, commit durably (ovsdb-server.at:1395): ok     (0m0.047s 0m0.016s)
1942. equality wait with correct rows (ovsdb-server.at:1395): ok     (0m0.039s 0m0.026s)
1943. equality wait with extra row (ovsdb-server.at:1395): ok     (0m0.048s 0m0.014s)
1944. equality wait with missing row (ovsdb-server.at:1395): ok     (0m0.033s 0m0.028s)
1945. inequality wait with correct rows (ovsdb-server.at:1395): ok     (0m0.039s 0m0.022s)
1946. inequality wait with extra row (ovsdb-server.at:1395): ok     (0m0.032s 0m0.032s)
1947. inequality wait with missing row (ovsdb-server.at:1395): ok     (0m0.045s 0m0.018s)
1948. insert and update constraints (ovsdb-server.at:1395): ok     (0m0.122s 0m0.064s)
1949. index uniqueness checking (ovsdb-server.at:1395): ok     (0m0.199s 0m0.081s)
1950. referential integrity -- simple (ovsdb-server.at:1395): ok     (0m0.213s 0m0.098s)
1951. referential integrity -- mutual references (ovsdb-server.at:1395): ok     (0m0.165s 0m0.084s)
1952. weak references (ovsdb-server.at:1395): ok     (0m0.366s 0m0.141s)
1953. immutable columns (ovsdb-server.at:1395): ok     (0m0.115s 0m0.072s)
1954. garbage collection (ovsdb-server.at:1395): ok     (0m0.357s 0m0.173s)
1955. insert default row, query table (ovsdb-server.at:1435): ok     (0m0.115s 0m0.050s)
1956. insert row, query table (ovsdb-server.at:1435): ok     (0m0.123s 0m0.041s)
1957. insert rows, query by value (ovsdb-server.at:1435): ok     (0m0.139s 0m0.062s)
1958. insert rows, query by named-uuid (ovsdb-server.at:1435): ok     (0m0.102s 0m0.051s)
1959. insert rows, update rows by value (ovsdb-server.at:1435): ok     (0m0.141s 0m0.060s)
1960. insert rows, mutate rows (ovsdb-server.at:1435): ok     (0m0.153s 0m0.046s)
1961. insert rows, delete by named-uuid (ovsdb-server.at:1435): ok     (0m0.101s 0m0.049s)
1962. insert rows, delete rows by value (ovsdb-server.at:1435): ok     (0m0.136s 0m0.064s)
1963. insert rows, delete by (non-matching) value (ovsdb-server.at:1435): ok     (0m0.146s 0m0.054s)
1964. insert rows, delete all (ovsdb-server.at:1435): ok     (0m0.092s 0m0.062s)
1965. insert row, query table, commit (ovsdb-server.at:1435): ok     (0m0.104s 0m0.045s)
1966. insert row, query table, commit durably (ovsdb-server.at:1435): ok     (0m0.103s 0m0.045s)
1967. equality wait with correct rows (ovsdb-server.at:1435): ok     (0m0.100s 0m0.048s)
1968. equality wait with extra row (ovsdb-server.at:1435): ok     (0m0.102s 0m0.047s)
1969. equality wait with missing row (ovsdb-server.at:1435): ok     (0m0.111s 0m0.039s)
1970. inequality wait with correct rows (ovsdb-server.at:1435): ok     (0m0.109s 0m0.041s)
1971. inequality wait with extra row (ovsdb-server.at:1435): ok     (0m0.107s 0m0.043s)
1972. inequality wait with missing row (ovsdb-server.at:1435): ok     (0m0.096s 0m0.057s)
1973. insert and update constraints (ovsdb-server.at:1435): ok     (0m0.152s 0m0.066s)
1974. index uniqueness checking (ovsdb-server.at:1435): ok     (0m0.190s 0m0.084s)
1975. referential integrity -- simple (ovsdb-server.at:1435): ok     (0m0.201s 0m0.087s)
1976. referential integrity -- mutual references (ovsdb-server.at:1435): ok     (0m0.171s 0m0.083s)
1977. weak references (ovsdb-server.at:1435): ok     (0m0.257s 0m0.138s)
1978. immutable columns (ovsdb-server.at:1435): ok     (0m0.150s 0m0.070s)
1979. garbage collection (ovsdb-server.at:1435): ok     (0m0.265s 0m0.146s)
1980. insert monitored table, insert excluded table (ovsdb-server.at:1489): ok     (0m0.147s 0m0.079s)
1981. insert monitored table, update excluded table (ovsdb-server.at:1489): ok     (0m0.170s 0m0.073s)
1982. update monitored table, insert excluded table (ovsdb-server.at:1489): ok     (0m0.163s 0m0.068s)
1983. update monitored table, update excluded table (ovsdb-server.at:1489): ok     (0m0.178s 0m0.065s)
1984. delete monitored table, insert excluded table (ovsdb-server.at:1489): ok     (0m0.189s 0m0.053s)
1985. delete monitored table, update excluded table (ovsdb-server.at:1489): ok     (0m0.178s 0m0.082s)
1986. ovsdb-server/get-active-ovsdb-server (ovsdb-server.at:1494): ok     (0m0.032s 0m0.016s)
1987. ovsdb-server/set-active-ovsdb-server (ovsdb-server.at:1507): ok     (0m0.039s 0m0.025s)
1988. ovsdb-server/get-sync-exclude-tables (ovsdb-server.at:1521): ok     (0m0.027s 0m0.021s)
1989. ovsdb-server/set-sync-exclude-tables (ovsdb-server.at:1534): ok     (0m0.147s 0m0.064s)
1990. ovsdb-server/connect-active-server (ovsdb-server.at:1584): ok     (0m0.174s 0m0.061s)
1991. ovsdb-server/disconnect-active-server (ovsdb-server.at:1623): ok     (0m0.197s 0m0.102s)
1992. ovsdb-server/active-backup-role-switching (ovsdb-server.at:1709): ok     (0m0.313s 0m0.117s)
1993. ovsdb-server prevent self replicating (ovsdb-server.at:1793): ok     (0m0.083s 0m0.033s)
1994. ovsdb-server/read-only db:ptcp connection (ovsdb-server.at:1824): ok     (0m0.091s 0m0.050s)
1995. ovsdb-client get-schema-version and get-schema-cksum (ovsdb-client.at:3): ok     (0m0.052s 0m0.036s)
1996. ovsdb-client backup and restore (ovsdb-client.at:15): ok     (0m0.230s 0m0.526s)
1997. ovsdb-client query (ovsdb-client.at:122): ok     (0m0.120s 0m0.059s)
1998. monitor insert into empty table (ovsdb-monitor.at:111): ok     (0m0.080s 0m0.049s)
1999. monitor insert into populated table (ovsdb-monitor.at:123): ok     (0m0.100s 0m0.028s)
2000. monitor delete (ovsdb-monitor.at:141): ok     (0m0.094s 0m0.035s)
2001. monitor row update (ovsdb-monitor.at:159): ok     (0m0.090s 0m0.037s)
2002. monitor no-op row updates (ovsdb-monitor.at:179): ok     (0m0.102s 0m0.050s)
2003. monitor insert-and-update transaction (ovsdb-monitor.at:202): ok     (0m0.100s 0m0.030s)
2004. monitor insert-update-and-delete transaction (ovsdb-monitor.at:225): ok     (0m0.082s 0m0.047s)
2005. monitor weak reference change (ovsdb-monitor.at:254): ok     (0m0.100s 0m0.032s)
2006. monitor insert-update-and-delete transaction (ovsdb-monitor.at:289): ok     (0m0.081s 0m0.048s)
2007. monitor all operations (ovsdb-monitor.at:340): ok     (0m0.121s 0m0.055s)
2008. monitor initial only (ovsdb-monitor.at:360): ok     (0m0.108s 0m0.051s)
2009. monitor insert only (ovsdb-monitor.at:367): ok     (0m0.103s 0m0.053s)
2010. monitor delete only (ovsdb-monitor.at:374): ok     (0m0.119s 0m0.037s)
2011. monitor modify only (ovsdb-monitor.at:382): ok     (0m0.125s 0m0.031s)
2012. monitor-cond empty condition (ovsdb-monitor.at:392): ok     (0m0.087s 0m0.056s)
2013. monitor-cond multiple conditions (ovsdb-monitor.at:423): ok     (0m0.104s 0m0.042s)
2014. monitor-cond delete from populated table (ovsdb-monitor.at:451): ok     (0m0.098s 0m0.049s)
2015. monitor-cond insert due to modify (ovsdb-monitor.at:476): ok     (0m0.109s 0m0.035s)
2016. monitor-cond delete due to modify (ovsdb-monitor.at:500): ok     (0m0.089s 0m0.058s)
2017. monitor-cond condition non-monitored columns (ovsdb-monitor.at:524): ok     (0m0.093s 0m0.053s)
2018. monitor-cond-change (ovsdb-monitor.at:553): ok     (0m0.132s 0m0.062s)
2019. monitor-cond-change with many sessions pending (ovsdb-monitor.at:594): ok     (0m13.884s 0m29.334s)
2020. simple passive idl, initially empty, select empty - Python2 ptcp (ovsdb-idl.at:265): ok     (0m0.155s 0m0.058s)
2021. simple passive idl, initially empty, select empty - Python3 ptcp (ovsdb-idl.at:265): ok     (0m0.140s 0m0.137s)
2022. simple idl, initially empty, no ops - C (ovsdb-idl.at:273): ok     (0m0.070s 0m0.033s)
2023. simple idl, initially empty, no ops - Python2 (ovsdb-idl.at:273): ok     (0m0.130s 0m0.054s)
2024. simple idl, initially empty, no ops - Python3 (ovsdb-idl.at:273): ok     (0m0.129s 0m0.108s)
2025. simple idl, initially empty, no ops - Python2 - register_columns (ovsdb-idl.at:273): ok     (0m0.132s 0m0.046s)
2026. simple idl, initially empty, no ops - Python3 - register_columns (ovsdb-idl.at:273): ok     (0m0.144s 0m0.046s)
2027. simple idl, initially empty, no ops - Python2 - tcp (ovsdb-idl.at:273): ok     (0m0.118s 0m0.040s)
2028. simple idl, initially empty, no ops - Python3 - tcp (ovsdb-idl.at:273): ok     (0m0.162s 0m0.029s)
2029. simple idl, initially empty, no ops - Python2 (multiple remotes) - tcp (ovsdb-idl.at:273): ok     (0m0.121s 0m0.040s)
2030. simple idl, initially empty, no ops - Python3 (multiple remotes) - tcp (ovsdb-idl.at:273): ok     (0m0.101s 0m0.119s)
2031. simple idl, initially empty, no ops - Python2 - tcp6 (ovsdb-idl.at:273): ok     (0m0.079s 0m0.090s)
2032. simple idl, initially empty, no ops - Python3 - tcp6 (ovsdb-idl.at:273): ok     (0m0.111s 0m0.109s)
2033. simple idl, initially empty, no ops - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:273): ok     (0m0.085s 0m0.083s)
2034. simple idl, initially empty, no ops - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:273): ok     (0m0.137s 0m0.054s)
2035. simple idl, initially empty, no ops - Python2 - SSL (ovsdb-idl.at:273): ok     (0m0.099s 0m0.098s)
2036. simple idl, initially empty, no ops - Python3 - SSL (ovsdb-idl.at:273): skipped (ovsdb-idl.at:273)
2037. simple idl, initially empty, various ops - C (ovsdb-idl.at:280): ok     (0m0.051s 0m0.036s)
2038. simple idl, initially empty, various ops - Python2 (ovsdb-idl.at:280): ok     (0m0.146s 0m0.038s)
2039. simple idl, initially empty, various ops - Python3 (ovsdb-idl.at:280): ok     (0m0.179s 0m0.038s)
2040. simple idl, initially empty, various ops - Python2 - register_columns (ovsdb-idl.at:280): ok     (0m0.140s 0m0.033s)
2041. simple idl, initially empty, various ops - Python3 - register_columns (ovsdb-idl.at:280): ok     (0m0.162s 0m0.047s)
2042. simple idl, initially empty, various ops - Python2 - tcp (ovsdb-idl.at:280): ok     (0m0.132s 0m0.040s)
2043. simple idl, initially empty, various ops - Python3 - tcp (ovsdb-idl.at:280): ok     (0m0.144s 0m0.098s)
2044. simple idl, initially empty, various ops - Python2 (multiple remotes) - tcp (ovsdb-idl.at:280): ok     (0m0.122s 0m0.062s)
2045. simple idl, initially empty, various ops - Python3 (multiple remotes) - tcp (ovsdb-idl.at:280): ok     (0m0.120s 0m0.113s)
2046. simple idl, initially empty, various ops - Python2 - tcp6 (ovsdb-idl.at:280): ok     (0m0.148s 0m0.040s)
2047. simple idl, initially empty, various ops - Python3 - tcp6 (ovsdb-idl.at:280): ok     (0m0.109s 0m0.127s)
2048. simple idl, initially empty, various ops - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:280): ok     (0m0.098s 0m0.084s)
2049. simple idl, initially empty, various ops - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:280): ok     (0m0.176s 0m0.030s)
2050. simple idl, initially empty, various ops - Python2 - SSL (ovsdb-idl.at:280): ok     (0m0.122s 0m0.098s)
2051. simple idl, initially empty, various ops - Python3 - SSL (ovsdb-idl.at:280): skipped (ovsdb-idl.at:280)
2052. simple idl, initially populated - C (ovsdb-idl.at:358): ok     (0m0.057s 0m0.045s)
2053. simple idl, initially populated - Python2 (ovsdb-idl.at:358): ok     (0m0.161s 0m0.026s)
2054. simple idl, initially populated - Python3 (ovsdb-idl.at:358): ok     (0m0.156s 0m0.054s)
2055. simple idl, initially populated - Python2 - register_columns (ovsdb-idl.at:358): ok     (0m0.111s 0m0.075s)
2056. simple idl, initially populated - Python3 - register_columns (ovsdb-idl.at:358): ok     (0m0.098s 0m0.138s)
2057. simple idl, initially populated - Python2 - tcp (ovsdb-idl.at:358): ok     (0m0.129s 0m0.052s)
2058. simple idl, initially populated - Python3 - tcp (ovsdb-idl.at:358): ok     (0m0.157s 0m0.056s)
2059. simple idl, initially populated - Python2 (multiple remotes) - tcp (ovsdb-idl.at:358): ok     (0m0.143s 0m0.035s)
2060. simple idl, initially populated - Python3 (multiple remotes) - tcp (ovsdb-idl.at:358): ok     (0m0.162s 0m0.066s)
2061. simple idl, initially populated - Python2 - tcp6 (ovsdb-idl.at:358): ok     (0m0.113s 0m0.079s)
2062. simple idl, initially populated - Python3 - tcp6 (ovsdb-idl.at:358): ok     (0m0.120s 0m0.122s)
2063. simple idl, initially populated - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:358): ok     (0m0.104s 0m0.088s)
2064. simple idl, initially populated - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:358): ok     (0m0.152s 0m0.088s)
2065. simple idl, initially populated - Python2 - SSL (ovsdb-idl.at:358): ok     (0m0.168s 0m0.048s)
2066. simple idl, initially populated - Python3 - SSL (ovsdb-idl.at:358): skipped (ovsdb-idl.at:358)
2067. simple idl, writing via IDL - C (ovsdb-idl.at:389): ok     (0m0.073s 0m0.029s)
2068. simple idl, writing via IDL - Python2 (ovsdb-idl.at:389): ok     (0m0.101s 0m0.085s)
2069. simple idl, writing via IDL - Python3 (ovsdb-idl.at:389): ok     (0m0.148s 0m0.067s)
2070. simple idl, writing via IDL - Python2 - register_columns (ovsdb-idl.at:389): ok     (0m0.118s 0m0.062s)
2071. simple idl, writing via IDL - Python3 - register_columns (ovsdb-idl.at:389): ok     (0m0.157s 0m0.053s)
2072. simple idl, writing via IDL - Python2 - tcp (ovsdb-idl.at:389): ok     (0m0.127s 0m0.054s)
2073. simple idl, writing via IDL - Python3 - tcp (ovsdb-idl.at:389): ok     (0m0.166s 0m0.047s)
2074. simple idl, writing via IDL - Python2 (multiple remotes) - tcp (ovsdb-idl.at:389): ok     (0m0.088s 0m0.111s)
2075. simple idl, writing via IDL - Python3 (multiple remotes) - tcp (ovsdb-idl.at:389): ok     (0m0.121s 0m0.123s)
2076. simple idl, writing via IDL - Python2 - tcp6 (ovsdb-idl.at:389): ok     (0m0.128s 0m0.064s)
2077. simple idl, writing via IDL - Python3 - tcp6 (ovsdb-idl.at:389): ok     (0m0.115s 0m0.127s)
2078. simple idl, writing via IDL - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:389): ok     (0m0.138s 0m0.045s)
2079. simple idl, writing via IDL - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:389): ok     (0m0.162s 0m0.055s)
2080. simple idl, writing via IDL - Python2 - SSL (ovsdb-idl.at:389): ok     (0m0.126s 0m0.102s)
2081. simple idl, writing via IDL - Python3 - SSL (ovsdb-idl.at:389): skipped (ovsdb-idl.at:389)
2082. simple idl, writing via IDL with unicode - C (ovsdb-idl.at:420): ok     (0m0.057s 0m0.041s)
2083. simple idl, writing via IDL with unicode - Python2 (ovsdb-idl.at:420): ok     (0m0.091s 0m0.093s)
2084. simple idl, writing via IDL with unicode - Python3 (ovsdb-idl.at:420): ok     (0m0.167s 0m0.042s)
2085. simple idl, writing via IDL with unicode - Python2 - register_columns (ovsdb-idl.at:420): ok     (0m0.144s 0m0.030s)
2086. simple idl, writing via IDL with unicode - Python3 - register_columns (ovsdb-idl.at:420): ok     (0m0.171s 0m0.035s)
2087. simple idl, writing via IDL with unicode - Python2 - tcp (ovsdb-idl.at:420): ok     (0m0.138s 0m0.045s)
2088. simple idl, writing via IDL with unicode - Python3 - tcp (ovsdb-idl.at:420): ok     (0m0.139s 0m0.104s)
2089. simple idl, writing via IDL with unicode - Python2 (multiple remotes) - tcp (ovsdb-idl.at:420): ok     (0m0.113s 0m0.075s)
2090. simple idl, writing via IDL with unicode - Python3 (multiple remotes) - tcp (ovsdb-idl.at:420): ok     (0m0.162s 0m0.049s)
2091. simple idl, writing via IDL with unicode - Python2 - tcp6 (ovsdb-idl.at:420): ok     (0m0.129s 0m0.050s)
2092. simple idl, writing via IDL with unicode - Python3 - tcp6 (ovsdb-idl.at:420): ok     (0m0.118s 0m0.127s)
2093. simple idl, writing via IDL with unicode - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:420): ok     (0m0.128s 0m0.052s)
2094. simple idl, writing via IDL with unicode - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:420): ok     (0m0.158s 0m0.061s)
2095. simple idl, writing via IDL with unicode - Python2 - SSL (ovsdb-idl.at:420): ok     (0m0.144s 0m0.062s)
2096. simple idl, writing via IDL with unicode - Python3 - SSL (ovsdb-idl.at:420): skipped (ovsdb-idl.at:420)
2097. simple idl, writing large data via IDL with unicode - Python2 (ovsdb-idl.at:454): ok     (0m0.151s 0m0.036s)
2098. simple idl, writing large data via IDL with unicode - Python3 (ovsdb-idl.at:454): ok     (0m0.170s 0m0.050s)
2099. simple idl, handling verification failure - C (ovsdb-idl.at:466): ok     (0m0.066s 0m0.033s)
2100. simple idl, handling verification failure - Python2 (ovsdb-idl.at:466): ok     (0m0.145s 0m0.034s)
2101. simple idl, handling verification failure - Python3 (ovsdb-idl.at:466): ok     (0m0.184s 0m0.036s)
2102. simple idl, handling verification failure - Python2 - register_columns (ovsdb-idl.at:466): ok     (0m0.113s 0m0.073s)
2103. simple idl, handling verification failure - Python3 - register_columns (ovsdb-idl.at:466): ok     (0m0.168s 0m0.044s)
2104. simple idl, handling verification failure - Python2 - tcp (ovsdb-idl.at:466): ok     (0m0.121s 0m0.066s)
2105. simple idl, handling verification failure - Python3 - tcp (ovsdb-idl.at:466): ok     (0m0.172s 0m0.040s)
2106. simple idl, handling verification failure - Python2 (multiple remotes) - tcp (ovsdb-idl.at:466): ok     (0m0.101s 0m0.089s)
2107. simple idl, handling verification failure - Python3 (multiple remotes) - tcp (ovsdb-idl.at:466): ok     (0m0.148s 0m0.067s)
2108. simple idl, handling verification failure - Python2 - tcp6 (ovsdb-idl.at:466): ok     (0m0.128s 0m0.055s)
2109. simple idl, handling verification failure - Python3 - tcp6 (ovsdb-idl.at:466): ok     (0m0.162s 0m0.053s)
2110. simple idl, handling verification failure - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:466): ok     (0m0.127s 0m0.055s)
2111. simple idl, handling verification failure - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:466): ok     (0m0.153s 0m0.061s)
2112. simple idl, handling verification failure - Python2 - SSL (ovsdb-idl.at:466): ok     (0m0.156s 0m0.052s)
2113. simple idl, handling verification failure - Python3 - SSL (ovsdb-idl.at:466): skipped (ovsdb-idl.at:466)
2114. simple idl, increment operation - C (ovsdb-idl.at:497): ok     (0m0.067s 0m0.035s)
2115. simple idl, increment operation - Python2 (ovsdb-idl.at:497): ok     (0m0.144s 0m0.034s)
2116. simple idl, increment operation - Python3 (ovsdb-idl.at:497): ok     (0m0.160s 0m0.079s)
2117. simple idl, increment operation - Python2 - register_columns (ovsdb-idl.at:497): ok     (0m0.105s 0m0.078s)
2118. simple idl, increment operation - Python3 - register_columns (ovsdb-idl.at:497): ok     (0m0.153s 0m0.056s)
2119. simple idl, increment operation - Python2 - tcp (ovsdb-idl.at:497): ok     (0m0.109s 0m0.074s)
2120. simple idl, increment operation - Python3 - tcp (ovsdb-idl.at:497): ok     (0m0.138s 0m0.100s)
2121. simple idl, increment operation - Python2 (multiple remotes) - tcp (ovsdb-idl.at:497): ok     (0m0.099s 0m0.082s)
2122. simple idl, increment operation - Python3 (multiple remotes) - tcp (ovsdb-idl.at:497): ok     (0m0.159s 0m0.057s)
2123. simple idl, increment operation - Python2 - tcp6 (ovsdb-idl.at:497): ok     (0m0.142s 0m0.039s)
2124. simple idl, increment operation - Python3 - tcp6 (ovsdb-idl.at:497): ok     (0m0.153s 0m0.058s)
2125. simple idl, increment operation - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:497): ok     (0m0.126s 0m0.057s)
2126. simple idl, increment operation - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:497): ok     (0m0.169s 0m0.045s)
2127. simple idl, increment operation - Python2 - SSL (ovsdb-idl.at:497): ok     (0m0.124s 0m0.098s)
2128. simple idl, increment operation - Python3 - SSL (ovsdb-idl.at:497): skipped (ovsdb-idl.at:497)
2129. simple idl, aborting - C (ovsdb-idl.at:509): ok     (0m0.078s 0m0.030s)
2130. simple idl, aborting - Python2 (ovsdb-idl.at:509): ok     (0m0.118s 0m0.064s)
2131. simple idl, aborting - Python3 (ovsdb-idl.at:509): ok     (0m0.113s 0m0.128s)
2132. simple idl, aborting - Python2 - register_columns (ovsdb-idl.at:509): ok     (0m0.131s 0m0.045s)
2133. simple idl, aborting - Python3 - register_columns (ovsdb-idl.at:509): ok     (0m0.174s 0m0.038s)
2134. simple idl, aborting - Python2 - tcp (ovsdb-idl.at:509): ok     (0m0.113s 0m0.074s)
2135. simple idl, aborting - Python3 - tcp (ovsdb-idl.at:509): ok     (0m0.161s 0m0.054s)
2136. simple idl, aborting - Python2 (multiple remotes) - tcp (ovsdb-idl.at:509): ok     (0m0.129s 0m0.068s)
2137. simple idl, aborting - Python3 (multiple remotes) - tcp (ovsdb-idl.at:509): ok     (0m0.159s 0m0.054s)
2138. simple idl, aborting - Python2 - tcp6 (ovsdb-idl.at:509): ok     (0m0.110s 0m0.078s)
2139. simple idl, aborting - Python3 - tcp6 (ovsdb-idl.at:509): ok     (0m0.099s 0m0.140s)
2140. simple idl, aborting - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:509): ok     (0m0.100s 0m0.087s)
2141. simple idl, aborting - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:509): ok     (0m0.117s 0m0.123s)
2142. simple idl, aborting - Python2 - SSL (ovsdb-idl.at:509): ok     (0m0.144s 0m0.080s)
2143. simple idl, aborting - Python3 - SSL (ovsdb-idl.at:509): skipped (ovsdb-idl.at:509)
2144. simple idl, destroy without commit or abort - C (ovsdb-idl.at:523): ok     (0m0.067s 0m0.035s)
2145. simple idl, destroy without commit or abort - Python2 (ovsdb-idl.at:523): ok     (0m0.104s 0m0.082s)
2146. simple idl, destroy without commit or abort - Python3 (ovsdb-idl.at:523): ok     (0m0.119s 0m0.118s)
2147. simple idl, destroy without commit or abort - Python2 - register_columns (ovsdb-idl.at:523): ok     (0m0.119s 0m0.089s)
2148. simple idl, destroy without commit or abort - Python3 - register_columns (ovsdb-idl.at:523): ok     (0m0.162s 0m0.044s)
2149. simple idl, destroy without commit or abort - Python2 - tcp (ovsdb-idl.at:523): ok     (0m0.112s 0m0.091s)
2150. simple idl, destroy without commit or abort - Python3 - tcp (ovsdb-idl.at:523): ok     (0m0.167s 0m0.047s)
2151. simple idl, destroy without commit or abort - Python2 (multiple remotes) - tcp (ovsdb-idl.at:523): ok     (0m0.134s 0m0.044s)
2152. simple idl, destroy without commit or abort - Python3 (multiple remotes) - tcp (ovsdb-idl.at:523): ok     (0m0.156s 0m0.052s)
2153. simple idl, destroy without commit or abort - Python2 - tcp6 (ovsdb-idl.at:523): ok     (0m0.110s 0m0.066s)
2154. simple idl, destroy without commit or abort - Python3 - tcp6 (ovsdb-idl.at:523): ok     (0m0.158s 0m0.052s)
2155. simple idl, destroy without commit or abort - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:523): ok     (0m0.133s 0m0.045s)
2156. simple idl, destroy without commit or abort - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:523): ok     (0m0.168s 0m0.044s)
2157. simple idl, destroy without commit or abort - Python2 - SSL (ovsdb-idl.at:523): ok     (0m0.120s 0m0.103s)
2158. simple idl, destroy without commit or abort - Python3 - SSL (ovsdb-idl.at:523): skipped (ovsdb-idl.at:523)
2159. simple idl, conditional, false condition - C (ovsdb-idl.at:537): ok     (0m0.060s 0m0.045s)
2160. simple idl, conditional, false condition - Python2 (ovsdb-idl.at:537): ok     (0m0.104s 0m0.081s)
2161. simple idl, conditional, false condition - Python3 (ovsdb-idl.at:537): ok     (0m0.170s 0m0.038s)
2162. simple idl, conditional, false condition - Python2 - register_columns (ovsdb-idl.at:537): ok     (0m0.132s 0m0.044s)
2163. simple idl, conditional, false condition - Python3 - register_columns (ovsdb-idl.at:537): ok     (0m0.162s 0m0.049s)
2164. simple idl, conditional, false condition - Python2 - tcp (ovsdb-idl.at:537): ok     (0m0.147s 0m0.031s)
2165. simple idl, conditional, false condition - Python3 - tcp (ovsdb-idl.at:537): ok     (0m0.105s 0m0.136s)
2166. simple idl, conditional, false condition - Python2 (multiple remotes) - tcp (ovsdb-idl.at:537): ok     (0m0.102s 0m0.086s)
2167. simple idl, conditional, false condition - Python3 (multiple remotes) - tcp (ovsdb-idl.at:537): ok     (0m0.104s 0m0.137s)
2168. simple idl, conditional, false condition - Python2 - tcp6 (ovsdb-idl.at:537): ok     (0m0.090s 0m0.101s)
2169. simple idl, conditional, false condition - Python3 - tcp6 (ovsdb-idl.at:537): ok     (0m0.145s 0m0.066s)
2170. simple idl, conditional, false condition - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:537): ok     (0m0.122s 0m0.058s)
2171. simple idl, conditional, false condition - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:537): ok     (0m0.109s 0m0.133s)
2172. simple idl, conditional, false condition - Python2 - SSL (ovsdb-idl.at:537): ok     (0m0.157s 0m0.056s)
2173. simple idl, conditional, false condition - Python3 - SSL (ovsdb-idl.at:537): skipped (ovsdb-idl.at:537)
2174. simple idl, conditional, true condition - C (ovsdb-idl.at:553): ok     (0m0.074s 0m0.024s)
2175. simple idl, conditional, true condition - Python2 (ovsdb-idl.at:553): ok     (0m0.140s 0m0.035s)
2176. simple idl, conditional, true condition - Python3 (ovsdb-idl.at:553): ok     (0m0.148s 0m0.062s)
2177. simple idl, conditional, true condition - Python2 - register_columns (ovsdb-idl.at:553): ok     (0m0.082s 0m0.100s)
2178. simple idl, conditional, true condition - Python3 - register_columns (ovsdb-idl.at:553): ok     (0m0.124s 0m0.115s)
2179. simple idl, conditional, true condition - Python2 - tcp (ovsdb-idl.at:553): ok     (0m0.126s 0m0.055s)
2180. simple idl, conditional, true condition - Python3 - tcp (ovsdb-idl.at:553): ok     (0m0.121s 0m0.119s)
2181. simple idl, conditional, true condition - Python2 (multiple remotes) - tcp (ovsdb-idl.at:553): ok     (0m0.131s 0m0.049s)
2182. simple idl, conditional, true condition - Python3 (multiple remotes) - tcp (ovsdb-idl.at:553): ok     (0m0.114s 0m0.125s)
2183. simple idl, conditional, true condition - Python2 - tcp6 (ovsdb-idl.at:553): ok     (0m0.138s 0m0.050s)
2184. simple idl, conditional, true condition - Python3 - tcp6 (ovsdb-idl.at:553): ok     (0m0.190s 0m0.021s)
2185. simple idl, conditional, true condition - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:553): ok     (0m0.132s 0m0.058s)
2186. simple idl, conditional, true condition - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:553): ok     (0m0.165s 0m0.047s)
2187. simple idl, conditional, true condition - Python2 - SSL (ovsdb-idl.at:553): ok     (0m0.158s 0m0.055s)
2188. simple idl, conditional, true condition - Python3 - SSL (ovsdb-idl.at:553): skipped (ovsdb-idl.at:553)
2189. simple idl, conditional, multiple clauses in condition - C (ovsdb-idl.at:569): ok     (0m0.065s 0m0.037s)
2190. simple idl, conditional, multiple clauses in condition - Python2 (ovsdb-idl.at:569): ok     (0m0.143s 0m0.041s)
2191. simple idl, conditional, multiple clauses in condition - Python3 (ovsdb-idl.at:569): ok     (0m0.148s 0m0.126s)
2192. simple idl, conditional, multiple clauses in condition - Python2 - register_columns (ovsdb-idl.at:569): ok     (0m0.146s 0m0.045s)
2193. simple idl, conditional, multiple clauses in condition - Python3 - register_columns (ovsdb-idl.at:569): ok     (0m0.181s 0m0.051s)
2194. simple idl, conditional, multiple clauses in condition - Python2 - tcp (ovsdb-idl.at:569): ok     (0m0.102s 0m0.088s)
2195. simple idl, conditional, multiple clauses in condition - Python3 - tcp (ovsdb-idl.at:569): ok     (0m0.168s 0m0.043s)
2196. simple idl, conditional, multiple clauses in condition - Python2 (multiple remotes) - tcp (ovsdb-idl.at:569): ok     (0m0.135s 0m0.042s)
2197. simple idl, conditional, multiple clauses in condition - Python3 (multiple remotes) - tcp (ovsdb-idl.at:569): ok     (0m0.119s 0m0.122s)
2198. simple idl, conditional, multiple clauses in condition - Python2 - tcp6 (ovsdb-idl.at:569): ok     (0m0.098s 0m0.090s)
2199. simple idl, conditional, multiple clauses in condition - Python3 - tcp6 (ovsdb-idl.at:569): ok     (0m0.161s 0m0.048s)
2200. simple idl, conditional, multiple clauses in condition - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:569): ok     (0m0.135s 0m0.053s)
2201. simple idl, conditional, multiple clauses in condition - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:569): ok     (0m0.112s 0m0.129s)
2202. simple idl, conditional, multiple clauses in condition - Python2 - SSL (ovsdb-idl.at:569): ok     (0m0.156s 0m0.055s)
2203. simple idl, conditional, multiple clauses in condition - Python3 - SSL (ovsdb-idl.at:569): skipped (ovsdb-idl.at:569)
2204. simple idl, conditional, modify as insert due to condition - C (ovsdb-idl.at:591): ok     (0m0.063s 0m0.035s)
2205. simple idl, conditional, modify as insert due to condition - Python2 (ovsdb-idl.at:591): ok     (0m0.115s 0m0.069s)
2206. simple idl, conditional, modify as insert due to condition - Python3 (ovsdb-idl.at:591): ok     (0m0.114s 0m0.123s)
2207. simple idl, conditional, modify as insert due to condition - Python2 - register_columns (ovsdb-idl.at:591): ok     (0m0.107s 0m0.078s)
2208. simple idl, conditional, modify as insert due to condition - Python3 - register_columns (ovsdb-idl.at:591): ok     (0m0.179s 0m0.035s)
2209. simple idl, conditional, modify as insert due to condition - Python2 - tcp (ovsdb-idl.at:591): ok     (0m0.108s 0m0.080s)
2210. simple idl, conditional, modify as insert due to condition - Python3 - tcp (ovsdb-idl.at:591): ok     (0m0.108s 0m0.135s)
2211. simple idl, conditional, modify as insert due to condition - Python2 (multiple remotes) - tcp (ovsdb-idl.at:591): ok     (0m0.111s 0m0.077s)
2212. simple idl, conditional, modify as insert due to condition - Python3 (multiple remotes) - tcp (ovsdb-idl.at:591): ok     (0m0.169s 0m0.043s)
2213. simple idl, conditional, modify as insert due to condition - Python2 - tcp6 (ovsdb-idl.at:591): ok     (0m0.110s 0m0.074s)
2214. simple idl, conditional, modify as insert due to condition - Python3 - tcp6 (ovsdb-idl.at:591): ok     (0m0.124s 0m0.115s)
2215. simple idl, conditional, modify as insert due to condition - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:591): ok     (0m0.118s 0m0.073s)
2216. simple idl, conditional, modify as insert due to condition - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:591): ok     (0m0.128s 0m0.113s)
2217. simple idl, conditional, modify as insert due to condition - Python2 - SSL (ovsdb-idl.at:591): ok     (0m0.137s 0m0.069s)
2218. simple idl, conditional, modify as insert due to condition - Python3 - SSL (ovsdb-idl.at:591): skipped (ovsdb-idl.at:591)
2219. simple idl, conditional, modify as delete due to condition - C (ovsdb-idl.at:607): ok     (0m0.066s 0m0.035s)
2220. simple idl, conditional, modify as delete due to condition - Python2 (ovsdb-idl.at:607): ok     (0m0.148s 0m0.032s)
2221. simple idl, conditional, modify as delete due to condition - Python3 (ovsdb-idl.at:607): ok     (0m0.160s 0m0.053s)
2222. simple idl, conditional, modify as delete due to condition - Python2 - register_columns (ovsdb-idl.at:607): ok     (0m0.099s 0m0.085s)
2223. simple idl, conditional, modify as delete due to condition - Python3 - register_columns (ovsdb-idl.at:607): ok     (0m0.125s 0m0.112s)
2224. simple idl, conditional, modify as delete due to condition - Python2 - tcp (ovsdb-idl.at:607): ok     (0m0.096s 0m0.094s)
2225. simple idl, conditional, modify as delete due to condition - Python3 - tcp (ovsdb-idl.at:607): ok     (0m0.179s 0m0.036s)
2226. simple idl, conditional, modify as delete due to condition - Python2 (multiple remotes) - tcp (ovsdb-idl.at:607): ok     (0m0.125s 0m0.057s)
2227. simple idl, conditional, modify as delete due to condition - Python3 (multiple remotes) - tcp (ovsdb-idl.at:607): ok     (0m0.155s 0m0.060s)
2228. simple idl, conditional, modify as delete due to condition - Python2 - tcp6 (ovsdb-idl.at:607): ok     (0m0.134s 0m0.065s)
2229. simple idl, conditional, modify as delete due to condition - Python3 - tcp6 (ovsdb-idl.at:607): ok     (0m0.195s 0m0.039s)
2230. simple idl, conditional, modify as delete due to condition - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:607): ok     (0m0.122s 0m0.071s)
2231. simple idl, conditional, modify as delete due to condition - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:607): ok     (0m0.172s 0m0.046s)
2232. simple idl, conditional, modify as delete due to condition - Python2 - SSL (ovsdb-idl.at:607): ok     (0m0.186s 0m0.041s)
2233. simple idl, conditional, modify as delete due to condition - Python3 - SSL (ovsdb-idl.at:607): skipped (ovsdb-idl.at:607)
2234. simple idl, conditional, multiple tables - C (ovsdb-idl.at:634): ok     (0m0.067s 0m0.036s)
2235. simple idl, conditional, multiple tables - Python2 (ovsdb-idl.at:634): ok     (0m0.145s 0m0.059s)
2236. simple idl, conditional, multiple tables - Python3 (ovsdb-idl.at:634): ok     (0m0.159s 0m0.060s)
2237. simple idl, conditional, multiple tables - Python2 - register_columns (ovsdb-idl.at:634): ok     (0m0.141s 0m0.039s)
2238. simple idl, conditional, multiple tables - Python3 - register_columns (ovsdb-idl.at:634): ok     (0m0.099s 0m0.143s)
2239. simple idl, conditional, multiple tables - Python2 - tcp (ovsdb-idl.at:634): ok     (0m0.127s 0m0.053s)
2240. simple idl, conditional, multiple tables - Python3 - tcp (ovsdb-idl.at:634): ok     (0m0.152s 0m0.109s)
2241. simple idl, conditional, multiple tables - Python2 (multiple remotes) - tcp (ovsdb-idl.at:634): ok     (0m0.111s 0m0.077s)
2242. simple idl, conditional, multiple tables - Python3 (multiple remotes) - tcp (ovsdb-idl.at:634): ok     (0m0.183s 0m0.031s)
2243. simple idl, conditional, multiple tables - Python2 - tcp6 (ovsdb-idl.at:634): ok     (0m0.134s 0m0.077s)
2244. simple idl, conditional, multiple tables - Python3 - tcp6 (ovsdb-idl.at:634): ok     (0m0.186s 0m0.039s)
2245. simple idl, conditional, multiple tables - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:634): ok     (0m0.129s 0m0.055s)
2246. simple idl, conditional, multiple tables - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:634): ok     (0m0.113s 0m0.131s)
2247. simple idl, conditional, multiple tables - Python2 - SSL (ovsdb-idl.at:634): ok     (0m0.131s 0m0.094s)
2248. simple idl, conditional, multiple tables - Python3 - SSL (ovsdb-idl.at:634): skipped (ovsdb-idl.at:634)
2249. self-linking idl, consistent ops - C (ovsdb-idl.at:673): ok     (0m0.058s 0m0.028s)
2250. self-linking idl, consistent ops - Python2 (ovsdb-idl.at:673): ok     (0m0.104s 0m0.068s)
2251. self-linking idl, consistent ops - Python3 (ovsdb-idl.at:673): ok     (0m0.110s 0m0.115s)
2252. self-linking idl, consistent ops - Python2 - register_columns (ovsdb-idl.at:673): ok     (0m0.139s 0m0.030s)
2253. self-linking idl, consistent ops - Python3 - register_columns (ovsdb-idl.at:673): ok     (0m0.150s 0m0.046s)
2254. self-linking idl, consistent ops - Python2 - tcp (ovsdb-idl.at:673): ok     (0m0.128s 0m0.042s)
2255. self-linking idl, consistent ops - Python3 - tcp (ovsdb-idl.at:673): ok     (0m0.126s 0m0.097s)
2256. self-linking idl, consistent ops - Python2 (multiple remotes) - tcp (ovsdb-idl.at:673): ok     (0m0.101s 0m0.077s)
2257. self-linking idl, consistent ops - Python3 (multiple remotes) - tcp (ovsdb-idl.at:673): ok     (0m0.105s 0m0.117s)
2258. self-linking idl, consistent ops - Python2 - tcp6 (ovsdb-idl.at:673): ok     (0m0.107s 0m0.065s)
2259. self-linking idl, consistent ops - Python3 - tcp6 (ovsdb-idl.at:673): ok     (0m0.165s 0m0.032s)
2260. self-linking idl, consistent ops - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:673): ok     (0m0.078s 0m0.096s)
2261. self-linking idl, consistent ops - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:673): ok     (0m0.124s 0m0.101s)
2262. self-linking idl, consistent ops - Python2 - SSL (ovsdb-idl.at:673): ok     (0m0.110s 0m0.092s)
2263. self-linking idl, consistent ops - Python3 - SSL (ovsdb-idl.at:673): skipped (ovsdb-idl.at:673)
2264. self-linking idl, inconsistent ops - C (ovsdb-idl.at:717): ok     (0m0.057s 0m0.026s)
2265. self-linking idl, inconsistent ops - Python2 (ovsdb-idl.at:717): ok     (0m0.092s 0m0.082s)
2266. self-linking idl, inconsistent ops - Python3 (ovsdb-idl.at:717): ok     (0m0.155s 0m0.041s)
2267. self-linking idl, inconsistent ops - Python2 - register_columns (ovsdb-idl.at:717): ok     (0m0.131s 0m0.030s)
2268. self-linking idl, inconsistent ops - Python3 - register_columns (ovsdb-idl.at:717): ok     (0m0.122s 0m0.100s)
2269. self-linking idl, inconsistent ops - Python2 - tcp (ovsdb-idl.at:717): ok     (0m0.092s 0m0.081s)
2270. self-linking idl, inconsistent ops - Python3 - tcp (ovsdb-idl.at:717): ok     (0m0.151s 0m0.044s)
2271. self-linking idl, inconsistent ops - Python2 (multiple remotes) - tcp (ovsdb-idl.at:717): ok     (0m0.108s 0m0.078s)
2272. self-linking idl, inconsistent ops - Python3 (multiple remotes) - tcp (ovsdb-idl.at:717): ok     (0m0.110s 0m0.113s)
2273. self-linking idl, inconsistent ops - Python2 - tcp6 (ovsdb-idl.at:717): ok     (0m0.120s 0m0.056s)
2274. self-linking idl, inconsistent ops - Python3 - tcp6 (ovsdb-idl.at:717): ok     (0m0.134s 0m0.092s)
2275. self-linking idl, inconsistent ops - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:717): ok     (0m0.112s 0m0.063s)
2276. self-linking idl, inconsistent ops - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:717): ok     (0m0.124s 0m0.103s)
2277. self-linking idl, inconsistent ops - Python2 - SSL (ovsdb-idl.at:717): ok     (0m0.144s 0m0.051s)
2278. self-linking idl, inconsistent ops - Python3 - SSL (ovsdb-idl.at:717): skipped (ovsdb-idl.at:717)
2279. self-linking idl, sets - C (ovsdb-idl.at:765): ok     (0m0.043s 0m0.041s)
2280. self-linking idl, sets - Python2 (ovsdb-idl.at:765): ok     (0m0.071s 0m0.101s)
2281. self-linking idl, sets - Python3 (ovsdb-idl.at:765): ok     (0m0.093s 0m0.131s)
2282. self-linking idl, sets - Python2 - register_columns (ovsdb-idl.at:765): ok     (0m0.113s 0m0.050s)
2283. self-linking idl, sets - Python3 - register_columns (ovsdb-idl.at:765): ok     (0m0.165s 0m0.031s)
2284. self-linking idl, sets - Python2 - tcp (ovsdb-idl.at:765): ok     (0m0.079s 0m0.097s)
2285. self-linking idl, sets - Python3 - tcp (ovsdb-idl.at:765): ok     (0m0.126s 0m0.103s)
2286. self-linking idl, sets - Python2 (multiple remotes) - tcp (ovsdb-idl.at:765): ok     (0m0.093s 0m0.082s)
2287. self-linking idl, sets - Python3 (multiple remotes) - tcp (ovsdb-idl.at:765): ok     (0m0.122s 0m0.103s)
2288. self-linking idl, sets - Python2 - tcp6 (ovsdb-idl.at:765): ok     (0m0.089s 0m0.088s)
2289. self-linking idl, sets - Python3 - tcp6 (ovsdb-idl.at:765): ok     (0m0.121s 0m0.107s)
2290. self-linking idl, sets - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:765): ok     (0m0.118s 0m0.127s)
2291. self-linking idl, sets - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:765): ok     (0m0.125s 0m0.108s)
2292. self-linking idl, sets - Python2 - SSL (ovsdb-idl.at:765): ok     (0m0.144s 0m0.049s)
2293. self-linking idl, sets - Python3 - SSL (ovsdb-idl.at:765): skipped (ovsdb-idl.at:765)
2294. external-linking idl, consistent ops - C (ovsdb-idl.at:815): ok     (0m0.055s 0m0.028s)
2295. external-linking idl, consistent ops - Python2 (ovsdb-idl.at:815): ok     (0m0.106s 0m0.060s)
2296. external-linking idl, consistent ops - Python3 (ovsdb-idl.at:815): ok     (0m0.145s 0m0.046s)
2297. external-linking idl, consistent ops - Python2 - register_columns (ovsdb-idl.at:815): ok     (0m0.090s 0m0.076s)
2298. external-linking idl, consistent ops - Python3 - register_columns (ovsdb-idl.at:815): ok     (0m0.128s 0m0.088s)
2299. external-linking idl, consistent ops - Python2 - tcp (ovsdb-idl.at:815): ok     (0m0.096s 0m0.073s)
2300. external-linking idl, consistent ops - Python3 - tcp (ovsdb-idl.at:815): ok     (0m0.108s 0m0.112s)
2301. external-linking idl, consistent ops - Python2 (multiple remotes) - tcp (ovsdb-idl.at:815): ok     (0m0.106s 0m0.064s)
2302. external-linking idl, consistent ops - Python3 (multiple remotes) - tcp (ovsdb-idl.at:815): ok     (0m0.127s 0m0.095s)
2303. external-linking idl, consistent ops - Python2 - tcp6 (ovsdb-idl.at:815): ok     (0m0.081s 0m0.089s)
2304. external-linking idl, consistent ops - Python3 - tcp6 (ovsdb-idl.at:815): ok     (0m0.144s 0m0.049s)
2305. external-linking idl, consistent ops - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:815): ok     (0m0.117s 0m0.043s)
2306. external-linking idl, consistent ops - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:815): ok     (0m0.106s 0m0.114s)
2307. external-linking idl, consistent ops - Python2 - SSL (ovsdb-idl.at:815): ok     (0m0.108s 0m0.092s)
2308. external-linking idl, consistent ops - Python3 - SSL (ovsdb-idl.at:815): skipped (ovsdb-idl.at:815)
2309. singleton idl, constraints - C (ovsdb-idl.at:833): ok     (0m0.049s 0m0.036s)
2310. singleton idl, constraints - Python2 (ovsdb-idl.at:833): ok     (0m0.101s 0m0.061s)
2311. singleton idl, constraints - Python3 (ovsdb-idl.at:833): ok     (0m0.111s 0m0.108s)
2312. singleton idl, constraints - Python2 - register_columns (ovsdb-idl.at:833): ok     (0m0.096s 0m0.072s)
2313. singleton idl, constraints - Python3 - register_columns (ovsdb-idl.at:833): ok     (0m0.155s 0m0.036s)
2314. singleton idl, constraints - Python2 - tcp (ovsdb-idl.at:833): ok     (0m0.111s 0m0.048s)
2315. singleton idl, constraints - Python3 - tcp (ovsdb-idl.at:833): ok     (0m0.111s 0m0.112s)
2316. singleton idl, constraints - Python2 (multiple remotes) - tcp (ovsdb-idl.at:833): ok     (0m0.089s 0m0.079s)
2317. singleton idl, constraints - Python3 (multiple remotes) - tcp (ovsdb-idl.at:833): ok     (0m0.113s 0m0.108s)
2318. singleton idl, constraints - Python2 - tcp6 (ovsdb-idl.at:833): ok     (0m0.134s 0m0.028s)
2319. singleton idl, constraints - Python3 - tcp6 (ovsdb-idl.at:833): ok     (0m0.103s 0m0.119s)
2320. singleton idl, constraints - Python2 (multiple remotes) - tcp6 (ovsdb-idl.at:833): ok     (0m0.131s 0m0.031s)
2321. singleton idl, constraints - Python3 (multiple remotes) - tcp6 (ovsdb-idl.at:833): ok     (0m0.113s 0m0.107s)
2322. singleton idl, constraints - Python2 - SSL (ovsdb-idl.at:833): ok     (0m0.121s 0m0.078s)
2323. singleton idl, constraints - Python3 - SSL (ovsdb-idl.at:833): skipped (ovsdb-idl.at:833)
2324. external-linking idl, insert ops - Python2 (ovsdb-idl.at:859): ok     (0m0.137s 0m0.022s)
2325. external-linking idl, insert ops - Python3 (ovsdb-idl.at:859): ok     (0m0.145s 0m0.045s)
2326. getattr idl, insert ops - Python2 (ovsdb-idl.at:869): ok     (0m0.125s 0m0.044s)
2327. getattr idl, insert ops - Python3 (ovsdb-idl.at:869): ok     (0m0.160s 0m0.029s)
2328. row-from-json idl, whats this - Python2 (ovsdb-idl.at:878): ok     (0m0.122s 0m0.053s)
2329. row-from-json idl, whats this - Python3 (ovsdb-idl.at:878): ok     (0m0.162s 0m0.052s)
2330. idl handling of missing tables and columns - C (ovsdb-idl.at:895): ok     (0m0.068s 0m0.043s)
2331. simple idl, initially populated - Python2 fetch (ovsdb-idl.at:991): ok     (0m0.138s 0m0.035s)
2332. simple idl, initially populated - Python3 fetch (ovsdb-idl.at:991): ok     (0m0.109s 0m0.122s)
2333. simple idl disable monitor-cond - Python2 (ovsdb-idl.at:1043): ok     (0m0.132s 0m0.057s)
2334. simple idl disable monitor-cond - Python3 (ovsdb-idl.at:1043): ok     (0m0.145s 0m0.107s)
2335. track, simple idl, initially populated - C (ovsdb-idl.at:1136): ok     (0m0.067s 0m0.032s)
2336. track, simple idl, initially empty, various ops - C (ovsdb-idl.at:1168): ok     (0m0.056s 0m0.032s)
2337. map, simple2 idl-partial-update-map-column, initially populated - C (ovsdb-idl.at:1262): ok     (0m0.067s 0m0.031s)
2338. partial-map idl - Python2 (ovsdb-idl.at:1280): ok     (0m0.143s 0m0.033s)
2339. partial-map idl - Python3 (ovsdb-idl.at:1280): ok     (0m0.141s 0m0.097s)
2340. set, simple3 idl-partial-update-set-column, initially populated - C (ovsdb-idl.at:1311): ok     (0m0.071s 0m0.032s)
2341. partial-set idl - Python2 (ovsdb-idl.at:1331): ok     (0m0.130s 0m0.058s)
2342. partial-set idl - Python3 (ovsdb-idl.at:1331): ok     (0m0.120s 0m0.121s)
2343. simple idl verify notify - Python2 (ovsdb-idl.at:1381): ok     (0m0.102s 0m0.082s)
2344. simple idl verify notify - Python3 (ovsdb-idl.at:1381): ok     (0m0.161s 0m0.054s)
2345. simple idl verify notify - Python2 - SSL (ovsdb-idl.at:1381): ok     (0m0.137s 0m0.079s)
2346. simple idl verify notify - Python3 - SSL (ovsdb-idl.at:1381): skipped (ovsdb-idl.at:1381)
2347. Compound_index, single column test  - C (ovsdb-idl.at:1504): ok     (0m0.089s 0m0.024s)
2348. Compound_index, double column test  - C (ovsdb-idl.at:1651): ok     (0m0.081s 0m0.032s)
2349. set, simple3 idl-compound-index-with-ref, initially populated - C (ovsdb-idl.at:1775): ok     (0m0.059s 0m0.021s)
2350. Check Stream open block - C - tcp (ovsdb-idl.at:1802): ok     (0m0.102s 0m0.056s)
2351. Check Stream open block - C - tcp6 (ovsdb-idl.at:1803): ok     (0m0.070s 0m0.024s)
2352. Check PY2 Stream open block (ovsdb-idl.at:1818): ok     (0m0.102s 0m0.069s)
2353. Check PY3 Stream open block (ovsdb-idl.at:1819): ok     (0m0.148s 0m0.092s)
2354. ovsdb lock -- lock (ovsdb-lock.at:21): ok     (0m0.054s 0m0.033s)
2355. ovsdb lock -- unlock (ovsdb-lock.at:37): ok     (0m0.074s 0m0.028s)
2356. ovsdb lock -- steal (ovsdb-lock.at:57): ok     (0m0.061s 0m0.040s)
2357. ovsdb-server/rbac 2 (ovsdb-rbac.at:3): ok     (0m0.759s 0m0.274s)
2358. insert default row, query table - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.096s 0m0.057s)
2359. insert row, query table - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.106s 0m0.046s)
2360. insert rows, query by value - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.135s 0m0.049s)
2361. insert rows, query by named-uuid - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.092s 0m0.045s)
2362. insert rows, update rows by value - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.130s 0m0.054s)
2363. insert rows, mutate rows - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.142s 0m0.050s)
2364. insert rows, delete by named-uuid - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.092s 0m0.062s)
2365. insert rows, delete rows by value - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.144s 0m0.047s)
2366. insert rows, delete by (non-matching) value - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.135s 0m0.058s)
2367. insert rows, delete all - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.100s 0m0.034s)
2368. insert row, query table, commit - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.102s 0m0.032s)
2369. insert row, query table, commit durably - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.110s 0m0.027s)
2370. equality wait with correct rows - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.102s 0m0.031s)
2371. equality wait with extra row - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.096s 0m0.038s)
2372. equality wait with missing row - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.099s 0m0.035s)
2373. inequality wait with correct rows - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.103s 0m0.029s)
2374. inequality wait with extra row - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.102s 0m0.032s)
2375. inequality wait with missing row - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.082s 0m0.056s)
2376. insert and update constraints - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.137s 0m0.062s)
2377. index uniqueness checking - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.174s 0m0.074s)
2378. referential integrity -- simple - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.193s 0m0.070s)
2379. referential integrity -- mutual references - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.144s 0m0.087s)
2380. weak references - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.243s 0m0.121s)
2381. immutable columns - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.145s 0m0.051s)
2382. garbage collection - cluster of 1 (ovsdb-cluster.at:45): ok     (0m0.272s 0m0.096s)
2383. insert default row, query table - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.206s 0m0.066s)
2384. insert row, query table - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.203s 0m0.084s)
2385. insert rows, query by value - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.223s 0m0.088s)
2386. insert rows, query by named-uuid - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.234s 0m0.047s)
2387. insert rows, update rows by value - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.214s 0m0.109s)
2388. insert rows, mutate rows - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.231s 0m0.097s)
2389. insert rows, delete by named-uuid - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.188s 0m0.068s)
2390. insert rows, delete rows by value - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.242s 0m0.101s)
2391. insert rows, delete by (non-matching) value - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.231s 0m0.089s)
2392. insert rows, delete all - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.190s 0m0.077s)
2393. insert row, query table, commit - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.196s 0m0.068s)
2394. insert row, query table, commit durably - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.198s 0m0.062s)
2395. equality wait with correct rows - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.198s 0m0.060s)
2396. equality wait with extra row - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.192s 0m0.081s)
2397. equality wait with missing row - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.185s 0m0.081s)
2398. inequality wait with correct rows - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.185s 0m0.077s)
2399. inequality wait with extra row - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.182s 0m0.084s)
2400. inequality wait with missing row - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.194s 0m0.075s)
2401. insert and update constraints - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.229s 0m0.084s)
2402. index uniqueness checking - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.266s 0m0.107s)
2403. referential integrity -- simple - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.267s 0m0.115s)
2404. referential integrity -- mutual references - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.253s 0m0.108s)
2405. weak references - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.342s 0m0.149s)
2406. immutable columns - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.251s 0m0.076s)
2407. garbage collection - cluster of 3 (ovsdb-cluster.at:54): ok     (0m0.358s 0m0.135s)
2408. insert default row, query table - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.299s 0m0.110s)
2409. insert row, query table - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.296s 0m0.117s)
2410. insert rows, query by value - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.287s 0m0.149s)
2411. insert rows, query by named-uuid - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.286s 0m0.136s)
2412. insert rows, update rows by value - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.322s 0m0.130s)
2413. insert rows, mutate rows - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.304s 0m0.154s)
2414. insert rows, delete by named-uuid - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.274s 0m0.115s)
2415. insert rows, delete rows by value - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.310s 0m0.136s)
2416. insert rows, delete by (non-matching) value - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.326s 0m0.113s)
2417. insert rows, delete all - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.274s 0m0.113s)
2418. insert row, query table, commit - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.277s 0m0.116s)
2419. insert row, query table, commit durably - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.277s 0m0.106s)
2420. equality wait with correct rows - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.269s 0m0.121s)
2421. equality wait with extra row - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.284s 0m0.096s)
2422. equality wait with missing row - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.285s 0m0.104s)
2423. inequality wait with correct rows - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.293s 0m0.106s)
2424. inequality wait with extra row - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.282s 0m0.134s)
2425. inequality wait with missing row - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.297s 0m0.108s)
2426. insert and update constraints - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.331s 0m0.161s)
2427. index uniqueness checking - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.356s 0m0.163s)
2428. referential integrity -- simple - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.379s 0m0.156s)
2429. referential integrity -- mutual references - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.353s 0m0.127s)
2430. weak references - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.430s 0m0.188s)
2431. immutable columns - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.323s 0m0.119s)
2432. garbage collection - cluster of 5 (ovsdb-cluster.at:63): ok     (0m0.451s 0m0.191s)
2433. OVSDB 3-server torture test - kill/restart leader (ovsdb-cluster.at:217): ok     (0m2.254s 0m1.085s)
2434. OVSDB 3-server torture test - kill/restart follower 1 (ovsdb-cluster.at:221): ok     (0m1.452s 0m0.834s)
2435. OVSDB 3-server torture test - kill/restart follower 2 (ovsdb-cluster.at:225): ok     (0m1.335s 0m0.736s)
2436. OVSDB 5-server torture test - kill/restart leader (ovsdb-cluster.at:229): ok     (0m1.674s 0m0.903s)
2437. OVSDB 5-server torture test - kill/restart follower 1 (ovsdb-cluster.at:233): ok     (0m1.597s 0m0.840s)
2438. OVSDB 5-server torture test - kill/restart follower 2 (ovsdb-cluster.at:237): ok     (0m1.714s 0m0.855s)
2439. OVSDB 5-server torture test - kill/restart follower 3 (ovsdb-cluster.at:241): ok     (0m1.610s 0m0.884s)
2440. OVSDB 5-server torture test - kill/restart follower 4 (ovsdb-cluster.at:245): ok     (0m1.659s 0m0.855s)
2441. OVSDB 3-server torture test - remove/re-add leader (ovsdb-cluster.at:250): ok     (0m1.374s 0m0.756s)
2442. OVSDB 3-server torture test - remove/re-add follower 1 (ovsdb-cluster.at:254): ok     (0m1.386s 0m0.770s)
2443. OVSDB 3-server torture test - remove/re-add follower 2 (ovsdb-cluster.at:258): ok     (0m1.361s 0m0.750s)
2444. OVSDB 5-server torture test - remove/re-add leader (ovsdb-cluster.at:262): ok     (0m1.662s 0m0.987s)
2445. OVSDB 5-server torture test - remove/re-add follower 1 (ovsdb-cluster.at:266): ok     (0m1.643s 0m0.880s)
2446. OVSDB 5-server torture test - remove/re-add follower 2 (ovsdb-cluster.at:270): ok     (0m1.630s 0m0.925s)
2447. OVSDB 5-server torture test - remove/re-add follower 3 (ovsdb-cluster.at:274): ok     (0m1.593s 0m0.960s)
2448. OVSDB 5-server torture test - remove/re-add follower 4 (ovsdb-cluster.at:278): ok     (0m1.592s 0m0.874s)
2449. ovs-vsctl connection retry (ovs-vsctl.at:131): ok     (0m0.050s 0m0.023s)
2450. add-br a (ovs-vsctl.at:175): ok     (0m0.203s 0m0.116s)
2451. add-br a, add-br a (ovs-vsctl.at:185): ok     (0m0.081s 0m0.042s)
2452. add-br a, add-br b (ovs-vsctl.at:198): ok     (0m0.356s 0m0.183s)
2453. add-br a, add-br b, del-br a (ovs-vsctl.at:213): ok     (0m0.224s 0m0.134s)
2454. add-br a, del-br a, add-br a (ovs-vsctl.at:223): ok     (0m0.218s 0m0.105s)
2455. add-br a, add-port a a1, add-port a a2 (ovs-vsctl.at:243): ok     (0m0.300s 0m0.137s)
2456. add-br a, add-port a a1, add-port a a1 (ovs-vsctl.at:257): ok     (0m0.089s 0m0.047s)
2457. add-br a b, add-port a a1, add-port b b1, del-br a (ovs-vsctl.at:272): ok     (0m0.232s 0m0.129s)
2458. add-br a, add-bond a bond0 a1 a2 a3 (ovs-vsctl.at:294): ok     (0m0.306s 0m0.176s)
2459. add-bond-iface and del-bond-iface (ovs-vsctl.at:316): ok     (0m1.118s 0m0.691s)
2460. add-br a b, add-port a a1, add-port b b1, del-port a a1 (ovs-vsctl.at:376): ok     (0m0.488s 0m0.190s)
2461. add-br a, add-bond a bond0 a1 a2 a3, del-port bond0 (ovs-vsctl.at:403): ok     (0m0.172s 0m0.119s)
2462. external IDs (ovs-vsctl.at:420): ok     (0m0.446s 0m0.250s)
2463. controllers (ovs-vsctl.at:476): ok     (0m0.072s 0m0.011s)
2464. simple fake bridge (VLAN 9) (ovs-vsctl.at:627): ok     (0m0.467s 0m0.276s)
2465. list bridges -- real and fake (VLAN 9) (ovs-vsctl.at:627): ok     (0m0.129s 0m0.095s)
2466. simple fake bridge + del-br fake bridge (VLAN 9) (ovs-vsctl.at:627): ok     (0m0.325s 0m0.160s)
2467. simple fake bridge + del-br real bridge (VLAN 9) (ovs-vsctl.at:627): ok     (0m0.157s 0m0.086s)
2468. simple fake bridge + external IDs (VLAN 9) (ovs-vsctl.at:627): ok     (0m0.427s 0m0.249s)
2469. simple fake bridge + del-port from parent (VLAN 9) (ovs-vsctl.at:627): ok     (0m0.374s 0m0.209s)
2470. simple fake bridge (VLAN 0) (ovs-vsctl.at:628): ok     (0m0.469s 0m0.265s)
2471. list bridges -- real and fake (VLAN 0) (ovs-vsctl.at:628): ok     (0m0.142s 0m0.081s)
2472. simple fake bridge + del-br fake bridge (VLAN 0) (ovs-vsctl.at:628): ok     (0m0.304s 0m0.152s)
2473. simple fake bridge + del-br real bridge (VLAN 0) (ovs-vsctl.at:628): ok     (0m0.164s 0m0.077s)
2474. simple fake bridge + external IDs (VLAN 0) (ovs-vsctl.at:628): ok     (0m0.437s 0m0.266s)
2475. simple fake bridge + del-port from parent (VLAN 0) (ovs-vsctl.at:628): ok     (0m0.386s 0m0.214s)
2476. fake bridge on bond (ovs-vsctl.at:639): ok     (0m0.434s 0m0.210s)
2477. fake bridge on bond + del-br fake bridge (ovs-vsctl.at:651): ok     (0m0.296s 0m0.157s)
2478. fake bridge on bond + del-br real bridge (ovs-vsctl.at:663): ok     (0m0.135s 0m0.060s)
2479. managers (ovs-vsctl.at:675): ok     (0m0.046s 0m0.040s)
2480. database commands -- positive checks (ovs-vsctl.at:705): ok     (0m0.286s 0m0.167s)
2481. database commands -- negative checks (ovs-vsctl.at:811): ok     (0m0.503s 0m0.266s)
2482. database commands -- conditions (ovs-vsctl.at:935): ok     (0m1.175s 0m0.748s)
2483. database commands -- wait-until immediately true (ovs-vsctl.at:1069): ok     (0m0.124s 0m0.056s)
2484. database commands -- wait-until must wait (ovs-vsctl.at:1083): ok     (0m0.122s 0m0.066s)
2485. --id option on create, get commands (ovs-vsctl.at:1116): ok     (0m0.137s 0m0.089s)
2486. unreferenced record warnings (ovs-vsctl.at:1163): ok     (0m0.112s 0m0.082s)
2487. created row UUID is wrong in same execution (ovs-vsctl.at:1197): ok     (0m0.067s 0m0.034s)
2488. --all option on destroy command (ovs-vsctl.at:1234): ok     (0m0.407s 0m0.201s)
2489. add-port -- reserved names 1 (ovs-vsctl.at:1283): ok     (0m0.308s 0m0.110s)
2490. add-port -- reserved names 2 (ovs-vsctl.at:1315): ok     (0m0.211s 0m0.120s)
2491. naming in db commands (ovs-vsctl.at:1353): ok     (0m0.094s 0m0.060s)
2492. bootstrap ca cert (ovs-vsctl.at:1372): ok     (0m0.294s 0m0.082s)
2493. peer ca cert (ovs-vsctl.at:1399): ok     (0m0.412s 0m0.063s)
2494. ovs-xapi-sync (ovs-xapi-sync.at:3): ok     (0m0.181s 0m0.115s)
2495. non-VLAN, non-bond (interface-reconfigure.at:696): ok     (0m0.161s 0m0.067s)
2496. VLAN, non-bond (interface-reconfigure.at:773): ok     (0m0.129s 0m0.045s)
2497. Bond, non-VLAN (interface-reconfigure.at:848): ok     (0m0.110s 0m0.080s)
2498. VLAN on bond (interface-reconfigure.at:938): ok     (0m0.128s 0m0.071s)
2499. Re-create port with different types (interface-reconfigure.at:1039): ok     (0m0.117s 0m0.061s)
2500. STP example from IEEE 802.1D-1998 (stp.at:3): ok     (0m0.016s 0m0.000s)
2501. STP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (stp.at:27): ok     (0m0.011s 0m0.008s)
2502. STP example from IEEE 802.1D-2004 figure 17.6 (stp.at:70): ok     (0m0.008s 0m0.008s)
2503. STP example from IEEE 802.1D-2004 figure 17.7 (stp.at:96): ok     (0m0.015s 0m0.001s)
2504. STP.io.1.1: Link Failure (stp.at:125): ok     (0m0.015s 0m0.002s)
2505. STP.io.1.2: Repeated Network (stp.at:164): ok     (0m0.012s 0m0.003s)
2506. STP.io.1.4: Network Initialization (stp.at:188): ok     (0m0.014s 0m0.003s)
2507. STP.io.1.5: Topology Change (stp.at:214): ok     (0m0.012s 0m0.007s)
2508. STP.op.1.1 and STP.op.1.2 (stp.at:267): ok     (0m0.013s 0m0.001s)
2509. STP.op.1.4: All Ports Initialized to Designated Ports (stp.at:281): ok     (0m0.013s 0m0.004s)
2510. STP.op.3.1: Root Bridge Selection: Root ID Values (stp.at:302): ok     (0m0.012s 0m0.003s)
2511. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:322): ok     (0m0.013s 0m0.003s)
2512. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:345): ok     (0m0.014s 0m0.002s)
2513. STP - dummy interface (stp.at:390): ok     (0m0.267s 0m0.112s)
2514. STP - flush the fdb and mdb when topology changed (stp.at:467): ok     (0m0.416s 0m0.219s)
2515. STP - check link-state when stp is running (stp.at:597): ok     (0m0.292s 0m0.117s)
2516. RSTP Single bridge (rstp.at:3): ok     (0m0.011s 0m0.003s)
2517. RSTP Link failure (rstp.at:13): ok     (0m0.016s 0m0.000s)
2518. RSTP Double link Failure (rstp.at:32): ok     (0m0.020s 0m0.000s)
2519. RSTP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (rstp.at:74): ok     (0m0.019s 0m0.002s)
2520. RSTP example from IEEE 802.1D-2004 figure 17.6 (rstp.at:111): ok     (0m0.007s 0m0.009s)
2521. RSTP example from IEEE 802.1D-2004 figure 17.7 (rstp.at:131): ok     (0m0.014s 0m0.003s)
2522. RSTP - dummy interface (rstp.at:156): ok     (0m0.359s 0m0.202s)
2523. vlog - Python2 (vlog.at:105): ok     (0m0.028s 0m0.009s)
2524. vlog - Python3 (vlog.at:106): ok     (0m0.056s 0m0.005s)
2525. vlog - vlog/reopen - C (vlog.at:115): ok     (0m0.082s 0m0.041s)
2526. vlog - vlog/reopen - Python2 (vlog.at:178): ok     (0m0.076s 0m0.079s)
2527. vlog - vlog/reopen - Python3 (vlog.at:179): ok     (0m0.079s 0m0.122s)
2528. vlog - vlog/reopen without log file - C (vlog.at:181): ok     (0m0.035s 0m0.017s)
2529. vlog - vlog/reopen without log file - Python2 (vlog.at:205): ok     (0m0.054s 0m0.045s)
2530. vlog - vlog/reopen without log file - Python3 (vlog.at:206): ok     (0m0.095s 0m0.004s)
2531. vlog - vlog/reopen can't reopen log file - C (vlog.at:210): ok     (0m0.091s 0m0.049s)
2532. vlog - vlog/reopen can't reopen log file - Python2 (vlog.at:275): ok     (0m0.108s 0m0.065s)
2533. vlog - vlog/reopen can't reopen log file - Python3 (vlog.at:276): ok     (0m0.147s 0m0.047s)
2534. vlog - vlog/close - C (vlog.at:278): ok     (0m0.128s 0m0.055s)
2535. vlog - vlog/close - Python2 (vlog.at:354): ok     (0m0.149s 0m0.064s)
2536. vlog - vlog/close - Python3 (vlog.at:355): ok     (0m0.192s 0m0.054s)
2537. vlog - vlog/set and vlog/list - C (vlog.at:357): ok     (0m0.146s 0m0.054s)
2538. vlog - vlog/set and vlog/list - Python2 (vlog.at:455): ok     (0m0.140s 0m0.082s)
2539. vlog - vlog/set and vlog/list - Python3 (vlog.at:456): ok     (0m0.145s 0m0.116s)
2540. vlog - RFC5424 facility (vlog.at:458): ok     (0m0.102s 0m0.054s)
2541. vlog - RFC5424 facility - Python2 (vlog.at:514): ok     (0m0.097s 0m0.054s)
2542. vlog - RFC5424 facility - Python3 (vlog.at:515): ok     (0m0.136s 0m0.085s)
2543. add-ps a (vtep-ctl.at:135): ok     (0m0.155s 0m0.065s)
2544. add-ps a, add-ps a (vtep-ctl.at:143): ok     (0m0.064s 0m0.033s)
2545. add-ps a, add-ps b (vtep-ctl.at:153): ok     (0m0.117s 0m0.064s)
2546. add-ps a, add-ps b, del-ps a (vtep-ctl.at:162): ok     (0m0.117s 0m0.060s)
2547. add-ps a, del-ps a, add-ps a (vtep-ctl.at:171): ok     (0m0.096s 0m0.062s)
2548. add-ps a, add-port a a1, add-port a a2 (vtep-ctl.at:185): ok     (0m0.144s 0m0.088s)
2549. add-ps a, add-port a a1, add-port a a1 (vtep-ctl.at:198): ok     (0m0.071s 0m0.047s)
2550. add-ps a b, add-port a a1, add-port b b1, del-ps a (vtep-ctl.at:210): ok     (0m0.125s 0m0.065s)
2551. add-ps a b, add-port a a1, add-port b b1, del-port a a1 (vtep-ctl.at:231): ok     (0m0.204s 0m0.110s)
2552. add-ps a b, add-port a p1, add-port b p1, del-port a p1 (vtep-ctl.at:248): ok     (0m0.299s 0m0.156s)
2553. add-ls a (vtep-ctl.at:271): ok     (0m0.098s 0m0.051s)
2554. add-ls a, add-ls a (vtep-ctl.at:279): ok     (0m0.064s 0m0.035s)
2555. add-ls a, add-ls b (vtep-ctl.at:289): ok     (0m0.105s 0m0.085s)
2556. add-ls a, add-ls b, del-ls a (vtep-ctl.at:298): ok     (0m0.134s 0m0.044s)
2557. add-ls a, del-ls a, add-ls a (vtep-ctl.at:307): ok     (0m0.109s 0m0.041s)
2558. add-ls a, get-replication-mode a (vtep-ctl.at:321): ok     (0m0.074s 0m0.019s)
2559. add-ls a, set-replication-mode a source_node (vtep-ctl.at:332): ok     (0m0.071s 0m0.039s)
2560. add-ls a, set-replication-mode a service_node (vtep-ctl.at:343): ok     (0m0.074s 0m0.034s)
2561. bind-ls ps1 pp1 300 ls1 (vtep-ctl.at:357): ok     (0m0.213s 0m0.105s)
2562. bind-ls ps1 pp1 300 ls1, bind-ls ps1 pp1 400 ls2 (vtep-ctl.at:375): ok     (0m0.270s 0m0.107s)
2563. bind-ls ps1 pp1 300, bind-ls ps2 pp2 300 ls2 (vtep-ctl.at:397): ok     (0m0.308s 0m0.160s)
2564. add-ucast-local ls1 (vtep-ctl.at:428): ok     (0m0.142s 0m0.076s)
2565. add-ucast-local ls1, overwrite (vtep-ctl.at:455): ok     (0m0.143s 0m0.061s)
2566. add-ucast-local ls1, del-ucast-local ls1 (vtep-ctl.at:475): ok     (0m0.185s 0m0.049s)
2567. add-ucast-remote ls1 (vtep-ctl.at:506): ok     (0m0.145s 0m0.096s)
2568. add-ucast-remote ls1, overwrite (vtep-ctl.at:533): ok     (0m0.116s 0m0.085s)
2569. add-ucast-remote ls1, del-ucast-remote ls1 (vtep-ctl.at:553): ok     (0m0.175s 0m0.067s)
2570. add-ucast-local ls1, add-ucast-remote ls1 (vtep-ctl.at:584): ok     (0m0.157s 0m0.093s)
2571. add-mcast-local ls1 (vtep-ctl.at:615): ok     (0m0.151s 0m0.083s)
2572. add-mcast-local ls1, del-mcast-local ls1 (vtep-ctl.at:644): ok     (0m0.184s 0m0.081s)
2573. add-mcast-remote ls1 (vtep-ctl.at:681): ok     (0m0.145s 0m0.088s)
2574. add-mcast-remote ls1, del-mcast-remote ls1 (vtep-ctl.at:710): ok     (0m0.210s 0m0.067s)
2575. add-mcast-local ls1, add-mcast-remote ls1 (vtep-ctl.at:747): ok     (0m0.196s 0m0.089s)
2576. add local and remote macs, clear-local-macs (vtep-ctl.at:782): ok     (0m0.232s 0m0.130s)
2577. add local and remote macs, clear-remote-macs (vtep-ctl.at:839): ok     (0m0.230s 0m0.166s)
2578. managers (vtep-ctl.at:899): ok     (0m0.071s 0m0.036s)
2579. show command (vtep-ctl.at:926): ok     (0m0.119s 0m0.069s)
2580. auto-attach - packets (auto-attach.at:3): ok     (0m0.012s 0m0.006s)
2581. ovn -- lexer (ovn.at:36): ok     (0m0.011s 0m0.007s)
2582. ovn -- registers (ovn.at:140): ok     (0m0.013s 0m0.007s)
2583. ovn -- conntrack fields (ovn.at:163): ok     (0m0.010s 0m0.016s)
2584. ovn -- composition (ovn.at:180): ok     (0m0.010s 0m0.006s)
2585. ovn -- expression parser (ovn.at:184): ok     (0m0.011s 0m0.006s)
2586. ovn -- expression annotation (ovn.at:368): ok     (0m0.014s 0m0.003s)
2587. ovn -- 1-term expression conversion (ovn.at:410): ok     (0m0.012s 0m0.004s)
2588. ovn -- 2-term expression conversion (ovn.at:416): ok     (0m0.017s 0m0.009s)
2589. ovn -- 3-term expression conversion (ovn.at:422): ok     (0m0.486s 0m0.010s)
2590. ovn -- 3-term numeric expression simplification (ovn.at:428): ok     (0m2.072s 0m0.009s)
2591. ovn -- 4-term string expression simplification (ovn.at:434): ok     (0m0.071s 0m0.007s)
2592. ovn -- 3-term mixed expression simplification (ovn.at:440): ok     (0m0.232s 0m0.009s)
2593. ovn -- simplification special cases (ovn.at:446): ok     (0m0.072s 0m0.036s)
2594. ovn -- is_chassis_resident simplification (ovn.at:468): ok     (0m0.049s 0m0.024s)
2595. ovn -- 4-term numeric expression normalization (ovn.at:482): ok     (0m2.981s 0m0.002s)
2596. ovn -- 4-term string expression normalization (ovn.at:488): ok     (0m0.037s 0m0.005s)
2597. ovn -- 4-term mixed expression normalization (ovn.at:494): ok     (0m0.304s 0m0.004s)
2598. ovn -- 5-term numeric expression normalization (ovn.at:500): ok     (0m2.072s 0m0.009s)
2599. ovn -- 5-term string expression normalization (ovn.at:506): ok     (0m1.074s 0m0.001s)
2600. ovn -- 5-term mixed expression normalization (ovn.at:512): ok     (0m0.362s 0m0.000s)
2601. ovn -- 4-term numeric expressions to flows (ovn.at:518): ok     (0m0.942s 0m0.007s)
2602. ovn -- 4-term string expressions to flows (ovn.at:525): ok     (0m0.211s 0m0.006s)
2603. ovn -- 4-term mixed expressions to flows (ovn.at:532): ok     (0m0.226s 0m0.011s)
2604. ovn -- 3-term numeric expressions to flows (ovn.at:539): ok     (0m1.624s 0m0.004s)
2605. ovn -- converting expressions to flows -- string fields (ovn.at:546): ok     (0m0.130s 0m0.072s)
2606. ovn -- converting expressions to flows -- address sets (ovn.at:583): ok     (0m0.199s 0m0.139s)
2607. ovn -- converting expressions to flows -- port groups (ovn.at:672): ok     (0m0.045s 0m0.021s)
2608. ovn -- converting expressions to flows -- conjunction (ovn.at:690): ok     (0m0.081s 0m0.030s)
2609. ovn -- action parsing (ovn.at:791): ok     (0m0.010s 0m0.008s)
2610. ovn -- 3 HVs, 1 LS, 3 lports/HV (ovn.at:1343): ok     (0m12.269s 0m5.492s)
2611. ovn -- trace 1 LS, 3 LSPs (ovn.at:1636): ok     (0m1.914s 0m0.649s)
2612. ovn -- 2 HVs, 4 lports/HV, localnet ports (ovn.at:1859): ok     (0m2.024s 0m0.851s)
2613. ovn -- vtep: 3 HVs, 1 VIFs/HV, 1 GW, 1 LS (ovn.at:2052): ok     (0m1.600s 0m0.724s)
2614. ovn -- 3 HVs, 1 VIFs/HV, 1 software GW, 1 LS (ovn.at:2255): ok     (0m1.144s 0m0.557s)
2615. ovn -- 3 HVs, 3 LS, 3 lports/LS, 1 LR (ovn.at:2404): ok     (0m26.353s 0m11.606s)
2616. ovn -- IP relocation using GARP request (ovn.at:2843): ok     (0m0.928s 0m0.362s)
2617. ovn -- portsecurity : 3 HVs, 1 LS, 3 lports/HV (ovn.at:3044): ok     (0m2.132s 0m1.034s)
2618. ovn -- 2 HVs, 2 LS, 1 lport/LS, 2 peer LRs (ovn.at:3421): ok     (0m0.892s 0m0.434s)
2619. ovn -- 1 HV, 1 LS, 2 lport/LS, 1 LR (ovn.at:3567): ok     (0m0.549s 0m0.274s)
2620. ovn -- 1 HV, 2 LSs, 1 lport/LS, 1 LR (ovn.at:3696): ok     (0m0.613s 0m0.317s)
2621. ovn -- 2 HVs, 3 LS, 1 lport/LS, 2 peer LRs, static routes (ovn.at:3812): ok     (0m0.875s 0m0.434s)
2622. ovn -- send gratuitous arp on localnet (ovn.at:3965): ok     (0m0.619s 0m0.272s)
2623. ovn -- 2 HVs, 3 LRs connected via LS, static routes (ovn.at:4019): ok     (0m0.996s 0m0.487s)
2624. ovn -- dhcpv4 : 1 HV, 2 LS, 2 LSPs/LS (ovn.at:4196): ok     (0m1.195s 0m0.748s)
2625. ovn -- dhcpv6 : 1 HV, 2 LS, 5 LSPs (ovn.at:4534): ok     (0m0.830s 0m0.421s)
2626. ovn -- 2 HVs, 2 LRs connected via LS, gateway router (ovn.at:4822): ok     (0m1.040s 0m0.410s)
2627. ovn -- icmp_reply: 1 HVs, 2 LSs, 1 lport/LS, 1 LR (ovn.at:4998): ok     (0m0.984s 0m0.480s)
2628. ovn -- port state up and down (ovn.at:5147): ok     (0m0.452s 0m0.196s)
2629. ovn -- datapath rules added/removed (ovn.at:5172): ok     (0m0.546s 0m0.290s)
2630. ovn -- nd_na  (ovn.at:5236): ok     (0m0.555s 0m0.249s)
2631. ovn -- address sets modification/removal smoke test (ovn.at:5308): ok     (0m0.408s 0m0.200s)
2632. ovn -- ipam (ovn.at:5335): ok     (0m1.417s 0m0.680s)
2633. ovn -- ipam connectivity (ovn.at:5667): ok     (0m0.644s 0m0.274s)
2634. ovn -- ovs-vswitchd restart (ovn.at:5795): ok     (0m0.627s 0m0.280s)
2635. ovn -- send arp for nexthop (ovn.at:5890): ok     (0m0.601s 0m0.266s)
2636. ovn -- send gratuitous arp for nat ips in localnet (ovn.at:6000): ok     (0m0.515s 0m0.261s)
2637. ovn -- send gratuitous arp with nat-addresses router in localnet (ovn.at:6048): ok     (0m0.604s 0m0.270s)
2638. ovn -- delete mac bindings (ovn.at:6108): ok     (0m0.520s 0m0.225s)
2639. ovn -- conntrack zone allocation (ovn.at:6139): ok     (0m0.546s 0m0.226s)
2640. ovn -- tag allocation (ovn.at:6193): ok     (0m0.629s 0m0.348s)
2641. ovn -- lsp deletion and broadcast-flow deletion on localnet (ovn.at:6308): ok     (0m0.821s 0m0.441s)
2642. ovn -- ACL logging (ovn.at:6378): ok     (0m0.609s 0m0.278s)
2643. ovn -- ACL rate-limited logging (ovn.at:6484): ok     (0m3.098s 0m1.325s)
2644. ovn -- DSCP marking and meter check (ovn.at:6566): ok     (0m0.920s 0m0.404s)
2645. ovn -- read-only sb db:ptcp access (ovn.at:6693): ok     (0m0.071s 0m0.049s)
2646. ovn -- read-only sb db:pssl access (ovn.at:6729): ok     (0m0.091s 0m0.042s)
2647. ovn -- nb connection/ssl commands (ovn.at:6786): ok     (0m0.100s 0m0.055s)
2648. ovn -- sb connection/ssl commands (ovn.at:6838): ok     (0m0.110s 0m0.043s)
2649. ovn -- nested containers (ovn.at:6890): ok     (0m0.995s 0m0.414s)
2650. ovn -- 3 HVs, 3 LRs connected via LS, source IP based routes (ovn.at:7095): ok     (0m1.171s 0m0.532s)
2651. ovn -- dns lookup : 1 HV, 2 LS, 2 LSPs/LS (ovn.at:7314): ok     (0m1.173s 0m0.640s)
2652. ovn -- 4 HV, 1 LS, 1 LR, packet test with HA distributed router gateway port (ovn.at:7743): ok     (0m1.468s 0m0.763s)
2653. ovn -- 4 HV, 3 LS, 2 LR, packet test with HA distributed router gateway port (ovn.at:7931): ok     (0m1.665s 0m0.697s)
2654. ovn -- 1 LR with distributed router gateway port (ovn.at:8137): ok     (0m1.518s 0m0.743s)
2655. ovn -- send gratuitous arp for NAT rules on distributed router (ovn.at:8461): ok     (0m1.055s 0m0.471s)
2656. ovn -- IPv6 ND Router Solicitation responder (ovn.at:8590): ok     (0m1.043s 0m0.468s)
2657. ovn -- /32 router IP address (ovn.at:8839): ok     (0m0.745s 0m0.313s)
2658. ovn -- 2 HVs, 1 lport/HV, localport ports (ovn.at:8939): ok     (0m1.024s 0m0.457s)
2659. ovn -- 1 LR with HA distributed router gateway port (ovn.at:9061): ok     (0m2.139s 0m0.925s)
2660. ovn -- send gratuitous ARP for NAT rules on HA distributed router (ovn.at:9328): ok     (0m1.351s 0m0.631s)
2661. ovn -- ensure one gw controller restart in HA doesn't bounce the master (ovn.at:9484): ok     (0m0.898s 0m0.454s)
2662. ovn -- IPv6 Neighbor Solicitation for unknown MAC (ovn.at:9569): ok     (0m0.770s 0m0.373s)
2663. ovn -- options:requested-chassis for logical port (ovn.at:9744): ok     (0m0.776s 0m0.371s)
2664. ovn -- options:requested-chassis with hostname (ovn.at:9823): ok     (0m0.542s 0m0.257s)
2665. ovn -- IPv6 periodic RA (ovn.at:9861): ok     (0m1.314s 0m0.586s)
2666. ovn -- ACL reject rule test (ovn.at:10011): ok     (0m1.123s 0m0.484s)
2667. ovn -- Port Groups (ovn.at:10153): ok     (0m12.338s 0m5.412s)
2668. ovn -- ACLs on Port Groups (ovn.at:10379): ok     (0m32.324s 0m13.754s)
2669. ovn -- Address Set generation from Port Groups (static addressing) (ovn.at:10632): ok     (0m0.279s 0m0.145s)
2670. ovn -- Address Set generation from Port Groups (dynamic addressing) (ovn.at:10682): ok     (0m0.352s 0m0.159s)
2671. ovn -- ACL conjunction (ovn.at:10741): ok     (0m0.485s 0m0.218s)
2672. ovn -- TTL exceeded (ovn.at:10868): ok     (0m0.686s 0m0.361s)
2673. ovn -- router port unreachable (ovn.at:10965): ok     (0m0.753s 0m0.369s)
2674. ovn -- ovn-controller exit (ovn.at:11115): ok     (0m0.759s 0m0.317s)
2675. ovn -- ovn-controller restart (ovn.at:11206): ok     (0m0.749s 0m0.337s)
2676. ovn -- ipam to non-ipam (ovn.at:11301): ok     (0m0.179s 0m0.058s)
2677. ovn -- ipam router ports (ovn.at:11320): ok     (0m0.314s 0m0.150s)
2678. ovn -- check Gateway_Chassis propagation from NBDB to SBDB (ovn-northd.at:2): ok     (0m0.318s 0m0.176s)
2679. ovn -- check Gateway_Chassis propagation from NBDB to SBDB backwards compatibility (ovn-northd.at:59): ok     (0m0.186s 0m0.075s)
2680. ovn -- check up state of VIF LSP (ovn-northd.at:87): ok     (0m0.162s 0m0.057s)
2681. ovn -- check up state of router LSP linked to a distributed LR (ovn-northd.at:101): ok     (0m0.168s 0m0.074s)
2682. ovn -- check up state of router LSP linked to a gateway LR (ovn-northd.at:117): ok     (0m0.160s 0m0.097s)
2683. ovn -- check up state of router LSP linked to an LRP with set Gateway Chassis (ovn-northd.at:137): ok     (0m0.169s 0m0.086s)
2684. ovn -- check IPv6 RA config propagation to SBDB (ovn-northd.at:156): ok     (0m0.582s 0m0.237s)
2685. ovn -- test unixctl (ovn-northd.at:266): ok     (0m0.250s 0m0.099s)
2686. ovn-nbctl - basic switch commands - direct (ovn-nbctl.at:56): ok     (0m0.273s 0m0.156s)
2687. ovn-nbctl - basic switch commands - daemon (ovn-nbctl.at:56): ok     (0m0.279s 0m0.150s)
2688. ovn-nbctl - basic logical switch port commands - direct (ovn-nbctl.at:109): ok     (0m0.241s 0m0.117s)
2689. ovn-nbctl - basic logical switch port commands - daemon (ovn-nbctl.at:109): ok     (0m0.236s 0m0.123s)
2690. ovn-nbctl - lport addresses - direct (ovn-nbctl.at:156): ok     (0m0.108s 0m0.049s)
2691. ovn-nbctl - lport addresses - daemon (ovn-nbctl.at:156): ok     (0m0.126s 0m0.045s)
2692. ovn-nbctl - port security - direct (ovn-nbctl.at:174): ok     (0m0.102s 0m0.055s)
2693. ovn-nbctl - port security - daemon (ovn-nbctl.at:174): ok     (0m0.130s 0m0.035s)
2694. ovn-nbctl - ACLs - direct (ovn-nbctl.at:192): ok     (0m0.606s 0m0.324s)
2695. ovn-nbctl - ACLs - daemon (ovn-nbctl.at:192): ok     (0m0.637s 0m0.265s)
2696. ovn-nbctl - QoS - direct (ovn-nbctl.at:259): ok     (0m0.289s 0m0.128s)
2697. ovn-nbctl - QoS - daemon (ovn-nbctl.at:259): ok     (0m0.312s 0m0.101s)
2698. ovn-nbctl - meters - direct (ovn-nbctl.at:328): ok     (0m0.231s 0m0.063s)
2699. ovn-nbctl - meters - daemon (ovn-nbctl.at:328): ok     (0m0.212s 0m0.086s)
2700. ovn-nbctl - NATs - direct (ovn-nbctl.at:390): ok     (0m0.591s 0m0.241s)
2701. ovn-nbctl - NATs - daemon (ovn-nbctl.at:390): ok     (0m0.559s 0m0.258s)
2702. ovn-nbctl - LBs - direct (ovn-nbctl.at:539): ok     (0m0.938s 0m0.597s)
2703. ovn-nbctl - LBs - daemon (ovn-nbctl.at:539): ok     (0m0.967s 0m0.448s)
2704. ovn-nbctl - LBs IPv6 - direct (ovn-nbctl.at:759): ok     (0m1.039s 0m0.507s)
2705. ovn-nbctl - LBs IPv6 - daemon (ovn-nbctl.at:759): ok     (0m1.019s 0m0.465s)
2706. ovn-nbctl - basic logical router commands - direct (ovn-nbctl.at:1018): ok     (0m0.281s 0m0.142s)
2707. ovn-nbctl - basic logical router commands - daemon (ovn-nbctl.at:1018): ok     (0m0.299s 0m0.124s)
2708. ovn-nbctl - basic logical router port commands - direct (ovn-nbctl.at:1071): ok     (0m0.282s 0m0.140s)
2709. ovn-nbctl - basic logical router port commands - daemon (ovn-nbctl.at:1071): ok     (0m0.302s 0m0.128s)
2710. ovn-nbctl - logical router port gateway chassis - direct (ovn-nbctl.at:1141): ok     (0m0.279s 0m0.113s)
2711. ovn-nbctl - logical router port gateway chassis - daemon (ovn-nbctl.at:1141): ok     (0m0.280s 0m0.107s)
2712. ovn-nbctl - logical router port enable and disable - direct (ovn-nbctl.at:1201): ok     (0m0.129s 0m0.049s)
2713. ovn-nbctl - logical router port enable and disable - daemon (ovn-nbctl.at:1201): ok     (0m0.146s 0m0.043s)
2714. ovn-nbctl - routes - direct (ovn-nbctl.at:1221): ok     (0m0.416s 0m0.171s)
2715. ovn-nbctl - routes - daemon (ovn-nbctl.at:1221): ok     (0m0.419s 0m0.157s)
2716. ovn-nbctl - lsp types - direct (ovn-nbctl.at:1334): ok     (0m0.243s 0m0.103s)
2717. ovn-nbctl - lsp types - daemon (ovn-nbctl.at:1334): ok     (0m0.252s 0m0.099s)
2718. ovn-nbctl - connection - direct (ovn-nbctl.at:1402): ok     (0m0.065s 0m0.030s)
2719. ovn-nbctl - connection - daemon (ovn-nbctl.at:1402): ok     (0m0.074s 0m0.035s)
2720. ovn-nbctl - dry run mode - direct (ovn-nbctl.at:1411): ok     (0m0.098s 0m0.056s)
2721. ovn-nbctl - dry run mode - daemon (ovn-nbctl.at:1411): ok     (0m0.113s 0m0.065s)
2722. ovn-nbctl - oneline output - direct (ovn-nbctl.at:1427): ok     (0m0.098s 0m0.030s)
2723. ovn-nbctl - oneline output - daemon (ovn-nbctl.at:1427): ok     (0m0.100s 0m0.051s)
2724. ovn-nbctl - commands parser error paths - direct (ovn-nbctl.at:1443): ok     (0m0.271s 0m0.102s)
2725. ovn-nbctl - commands parser error paths - daemon (ovn-nbctl.at:1443): ok     (0m0.288s 0m0.102s)
2726. ovn-nbctl - port groups - direct (ovn-nbctl.at:1514): ok     (0m0.061s 0m0.033s)
2727. ovn-nbctl - port groups - daemon (ovn-nbctl.at:1514): ok     (0m0.086s 0m0.029s)
2728. ovn-sbctl - chassis commands (ovn-sbctl.at:37): ok     (0m0.218s 0m0.091s)
2729. ovn-sbctl (ovn-sbctl.at:71): ok     (0m0.341s 0m0.170s)
2730. ovn-sbctl - connection (ovn-sbctl.at:140): ok     (0m0.110s 0m0.069s)
2731. ovn-controller - ovn-bridge-mappings (ovn-controller.at:3): ok     (0m0.531s 0m0.326s)
2732. ovn-controller - Chassis external_ids (ovn-controller.at:122): ok     (0m0.439s 0m0.171s)
2733. ovn-controller - change Encap properties (ovn-controller.at:186): ok     (0m0.389s 0m0.139s)
2734. ovn-controller - check sbdb connection (ovn-controller.at:233): ok     (0m0.299s 0m0.148s)
2735. ovn-controller-vtep - chassis (ovn-controller-vtep.at:107): ok     (0m0.527s 0m0.263s)
2736. ovn-controller-vtep - binding 1 (ovn-controller-vtep.at:175): ok     (0m0.579s 0m0.284s)
2737. ovn-controller-vtep - binding 2 (ovn-controller-vtep.at:240): ok     (0m0.420s 0m0.282s)
2738. ovn-controller-vtep - vtep-lswitch (ovn-controller-vtep.at:279): ok     (0m0.526s 0m0.275s)
2739. ovn-controller-vtep - vtep-macs 1 (ovn-controller-vtep.at:331): ok     (0m0.650s 0m0.361s)
2740. ovn-controller-vtep - vtep-macs 2 (ovn-controller-vtep.at:403): ok     (0m0.590s 0m0.366s)
2741. mcast - check multicasts to trunk ports are not duplicated (mcast-snooping.at:3): ok     (0m0.253s 0m0.195s)
2742. mcast - delete the port mdb when vlan configuration changed (mcast-snooping.at:108): ok     (0m0.182s 0m0.082s)
2743. mcast - delete the port mdb when port destroyed (mcast-snooping.at:165): ok     (0m0.181s 0m0.083s)
2744. ptap - legal flow entries in ptap bridge (packet-type-aware.at:3): ok     (0m0.336s 0m0.100s)
2745. ptap - triangle bridge setup with L2 and L3 GRE tunnels (packet-type-aware.at:34): ok     (0m1.177s 0m0.530s)
2746. ptap - check decap() prerequisits (packet-type-aware.at:515): ok     (0m0.172s 0m0.051s)
2747. ptap - check encap/decap VLAN tagged Ethernet frame (packet-type-aware.at:544): ok     (0m0.435s 0m0.141s)
2748. ptap - L3 over patch port (packet-type-aware.at:619): ok     (0m0.810s 0m0.462s)
2749. ptap - recirculate after packet_type change (packet-type-aware.at:920): ok     (0m0.368s 0m0.165s)
2750. nsh - matching (nsh.at:7): ok     (0m0.157s 0m0.066s)
2751. nsh - md1 encap over a veth link (nsh.at:53): ok     (0m0.341s 0m0.159s)
2752. nsh - md2 encap over a veth link (nsh.at:187): ok     (0m0.214s 0m0.112s)
2753. nsh - double encap over veth link using groups (nsh.at:282): ok     (0m0.257s 0m0.119s)
2754. nsh - triangle PTAP bridge setup with NSH over vxlan-gpe (nsh.at:462): ok     (0m1.092s 0m0.568s)
testsuite: ending at: Sun Jul  5 10:18:37 CST 2020
testsuite: test suite duration: 0h 34m 44s

## ------------- ##
## Test results. ##
## ------------- ##

2732 tests were successful.
22 tests were skipped.
