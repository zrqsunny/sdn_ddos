.\" -*- nroff -*-
.de IQ
.  br
.  ns
.  IP "\\$1"
..
.de ST
.  PP
.  RS -0.15in
.  I "\\$1"
.  RE
..
.TH ovn\-sbctl 8 "2.10.2" "Open vSwitch" "Open vSwitch Manual"
.\" This program's name:
.ds PN ovn\-sbctl
.
.SH NAME
ovn\-sbctl \- utility for querying and configuring \fBOVN_Southbound\fR database
.
.SH SYNOPSIS
\fBovn\-sbctl\fR [\fIoptions\fR] \fB\-\-\fR [\fIoptions\fR] \fIcommand
\fR[\fIargs\fR] [\fB\-\-\fR [\fIoptions\fR] \fIcommand \fR[\fIargs\fR]]...
.
.SH DESCRIPTION
The \fBovn\-sbctl\fR program configures the \fBOVN_Southbound\fR database
by providing a high\-level interface to its configuration database.  See
\fBovn\-sb\fR(5) for comprehensive documentation of the database schema.
.PP
\fBovn\-sbctl\fR connects to an \fBovsdb\-server\fR process that
maintains an OVN_Southbound configuration database.  Using this
connection, it queries and possibly applies changes to the database,
depending on the supplied commands.
.PP
\fBovn\-sbctl\fR can perform any number of commands in a single run,
implemented as a single atomic transaction against the database.
.PP
The \fBovn\-sbctl\fR command line begins with global options (see
\fBOPTIONS\fR below for details).  The global options are followed by
one or more commands.  Each command should begin with \fB\-\-\fR by
itself as a command-line argument, to separate it from the following
commands.  (The \fB\-\-\fR before the first command is optional.)  The
command
itself starts with command-specific options, if any, followed by the
command name and any arguments.
.
.SH OPTIONS
.
The following options affect the behavior of \fBovn\-sbctl\fR as a
whole.  Some individual commands also accept their own options, which
are given just before the command name.  If the first command on the
command line has options, then those options must be separated from
the global options by \fB\-\-\fR.
.
.IP "\fB\-\-db=\fIserver\fR"
The OVSDB database remote to contact.  If the \fBOVN_SB_DB\fR
environment variable is set, its value is used as the default.
Otherwise, the default is \fBunix:/var/run/openvswitch/ovnsb_db.sock\fR, but this
default is unlikely to be useful outside of single-machine OVN test
environments.
.IP
\fIserver\fR may be an OVSDB active or passive connection method,
e.g. \fBssl:192.168.10.5:6640\fR, as described in \fBovsdb\fR(7).
.
.IP "\fB\-\-leader\-only\fR"
.IQ "\fB\-\-no\-leader\-only\fR"
By default, or with \fB\-\-leader\-only\fR, when the database server
is a clustered database, \fBovn\-sbctl\fR will avoid servers other
than the cluster leader.  This ensures that any data that
\fBovn\-sbctl\fR reads and reports is up-to-date.  With
\fB\-\-no\-leader\-only\fR, \fBovn\-sbctl\fR will use any server in
the cluster, which means that for read-only transactions it can report
and act on stale data (transactions that modify the database are
always serialized even with \fB\-\-no\-leader\-only\fR).  Refer to
\fBUnderstanding Cluster Consistency\fR in \fBovsdb\fR(7) for more
information.
.
.IP "\fB\-\-no\-syslog\fR"
By default, \fBovn\-sbctl\fR logs its arguments and the details of any
changes that it makes to the system log.  This option disables this
logging.
.IP
This option is equivalent to \fB\-\-verbose=sbctl:syslog:warn\fR.
.
.IP "\fB\-\-oneline\fR"
Modifies the output format so that the output for each command is printed
on a single line.  New-line characters that would otherwise separate
lines are printed as \fB\\n\fR, and any instances of \fB\\\fR that
would otherwise appear in the output are doubled.
Prints a blank line for each command that has no output.
This option does not affect the formatting of output from the
\fBlist\fR or \fBfind\fR commands; see \fBTable Formatting Options\fR
below.
.
.IP "\fB\-\-dry\-run\fR"
Prevents \fBovn\-sbctl\fR from actually modifying the database.
.
.IP "\fB\-t \fIsecs\fR"
.IQ "\fB\-\-timeout=\fIsecs\fR"
By default, or with a \fIsecs\fR of \fB0\fR, \fBovn\-sbctl\fR waits
forever for a response from the database.  This option limits runtime
to approximately \fIsecs\fR seconds.  If the timeout expires,
\fBovn\-sbctl\fR will exit with a \fBSIGALRM\fR signal.  (A timeout
would normally happen only if the database cannot be contacted, or if
the system is overloaded.)
.
.de IQ
.  br
.  ns
.  IP "\\$1"
..
.IP "\fB\-v\fR[\fIspec\fR]
.IQ "\fB\-\-verbose=\fR[\fIspec\fR]
.
Sets logging levels.  Without any \fIspec\fR, sets the log level for
every module and destination to \fBdbg\fR.  Otherwise, \fIspec\fR is a
list of words separated by spaces or commas or colons, up to one from
each category below:
.
.RS
.IP \(bu
A valid module name, as displayed by the \fBvlog/list\fR command on
\fBovs\-appctl\fR(8), limits the log level change to the specified
module.
.
.IP \(bu
\fBsyslog\fR, \fBconsole\fR, or \fBfile\fR, to limit the log level
change to only to the system log, to the console, or to a file,
respectively.  (If \fB\-\-detach\fR is specified, \fB\*(PN\fR closes
its standard file descriptors, so logging to the console will have no
effect.)
.IP
On Windows platform, \fBsyslog\fR is accepted as a word and is only
useful along with the \fB\-\-syslog\-target\fR option (the word has no
effect otherwise).
.
.IP \(bu
\fBoff\fR, \fBemer\fR, \fBerr\fR, \fBwarn\fR, \fBinfo\fR, or
\fBdbg\fR, to control the log level.  Messages of the given severity
or higher will be logged, and messages of lower severity will be
filtered out.  \fBoff\fR filters out all messages.  See
\fBovs\-appctl\fR(8) for a definition of each log level.
.RE
.
.IP
Case is not significant within \fIspec\fR.
.IP
Regardless of the log levels set for \fBfile\fR, logging to a file
will not take place unless \fB\-\-log\-file\fR is also specified (see
below).
.IP
For compatibility with older versions of OVS, \fBany\fR is accepted as
a word but has no effect.
.
.IP "\fB\-v\fR"
.IQ "\fB\-\-verbose\fR"
Sets the maximum logging verbosity level, equivalent to
\fB\-\-verbose=dbg\fR.
.
.IP "\fB\-vPATTERN:\fIdestination\fB:\fIpattern\fR"
.IQ "\fB\-\-verbose=PATTERN:\fIdestination\fB:\fIpattern\fR"
Sets the log pattern for \fIdestination\fR to \fIpattern\fR.  Refer to
\fBovs\-appctl\fR(8) for a description of the valid syntax for \fIpattern\fR.
.
.IP "\fB\-vFACILITY:\fIfacility\fR"
.IQ "\fB\-\-verbose=FACILITY:\fIfacility\fR"
Sets the RFC5424 facility of the log message. \fIfacility\fR can be one of
\fBkern\fR, \fBuser\fR, \fBmail\fR, \fBdaemon\fR, \fBauth\fR, \fBsyslog\fR,
\fBlpr\fR, \fBnews\fR, \fBuucp\fR, \fBclock\fR, \fBftp\fR, \fBntp\fR,
\fBaudit\fR, \fBalert\fR, \fBclock2\fR, \fBlocal0\fR, \fBlocal1\fR,
\fBlocal2\fR, \fBlocal3\fR, \fBlocal4\fR, \fBlocal5\fR, \fBlocal6\fR or
\fBlocal7\fR. If this option is not specified, \fBdaemon\fR is used as
the default for the local system syslog and \fBlocal0\fR is used while sending
a message to the target provided via the \fB\-\-syslog\-target\fR option.
.
.TP
\fB\-\-log\-file\fR[\fB=\fIfile\fR]
Enables logging to a file.  If \fIfile\fR is specified, then it is
used as the exact name for the log file.  The default log file name
used if \fIfile\fR is omitted is \fB/var/log/openvswitch/\*(PN.log\fR.
.
.IP "\fB\-\-syslog\-target=\fIhost\fB:\fIport\fR"
Send syslog messages to UDP \fIport\fR on \fIhost\fR, in addition to
the system syslog.  The \fIhost\fR must be a numerical IP address, not
a hostname.
.
.IP "\fB\-\-syslog\-method=\fImethod\fR"
Specify \fImethod\fR how syslog messages should be sent to syslog daemon.
Following forms are supported:
.RS
.IP \(bu
\fBlibc\fR, use libc \fBsyslog()\fR function.  This is the default behavior.
Downside of using this options is that libc adds fixed prefix to every
message before it is actually sent to the syslog daemon over \fB/dev/log\fR
UNIX domain socket.
.IP \(bu
\fBunix:\fIfile\fR\fR, use UNIX domain socket directly.  It is possible to
specify arbitrary message format with this option.  However,
\fBrsyslogd 8.9\fR and older versions use hard coded parser function anyway
that limits UNIX domain socket use.  If you want to use arbitrary message
format with older \fBrsyslogd\fR versions, then use UDP socket to localhost
IP address instead.
.IP \(bu
\fBudp:\fIip\fR:\fIport\fR\fR, use UDP socket.  With this method it is
possible to use arbitrary message format also with older \fBrsyslogd\fR.
When sending syslog messages over UDP socket extra precaution needs to
be taken into account, for example, syslog daemon needs to be configured
to listen on the specified UDP port, accidental iptables rules could be
interfering with local syslog traffic and there are some security
considerations that apply to UDP sockets, but do not apply to UNIX domain
sockets.
.RE
.de IQ
.  br
.  ns
.  IP "\\$1"
..
.IP "\fB\-h\fR"
.IQ "\fB\-\-help\fR"
Prints a brief help message to the console.
.
.IP "\fB\-V\fR"
.IQ "\fB\-\-version\fR"
Prints version information to the console.
.
.SS "Table Formatting Options"
These options control the format of output from the \fBlist\fR and
\fBfind\fR commands.
.IP "\fB\-f \fIformat\fR"
.IQ "\fB\-\-format=\fIformat\fR"
Sets the type of table formatting.  The following types of
\fIformat\fR are available:
.RS
.ie '\*(PN'ovsdb\-client' .IP "\fBtable\fR (default)"
.el                       .IP "\fBtable\fR"
2-D text tables with aligned columns.
.ie '\*(PN'ovsdb\-client' .IP "\fBlist\fR"
.el                       .IP "\fBlist\fR (default)"
A list with one column per line and rows separated by a blank line.
.IP "\fBhtml\fR"
HTML tables.
.IP "\fBcsv\fR"
Comma-separated values as defined in RFC 4180.
.IP "\fBjson\fR"
JSON format as defined in RFC 4627.  The output is a sequence of JSON
objects, each of which corresponds to one table.  Each JSON object has
the following members with the noted values:
.RS
.IP "\fBcaption\fR"
The table's caption.  This member is omitted if the table has no
caption.
.IP "\fBheadings\fR"
An array with one element per table column.  Each array element is a
string giving the corresponding column's heading.
.IP "\fBdata\fR"
An array with one element per table row.  Each element is also an
array with one element per table column.  The elements of this
second-level array are the cells that constitute the table.  Cells
that represent OVSDB data or data types are expressed in the format
described in the OVSDB specification; other cells are simply expressed
as text strings.
.RE
.RE
.
.IP "\fB\-d \fIformat\fR"
.IQ "\fB\-\-data=\fIformat\fR"
Sets the formatting for cells within output tables unless the table
format is set to \fBjson\fR, in which case \fBjson\fR formatting is
always used when formatting cells.  The following types of \fIformat\fR
are available:
.RS
.IP "\fBstring\fR (default)"
The simple format described in the \fBDatabase Values\fR
.ie '\*(PN'ovs\-vsctl' section below.
.el                    section of \fBovs\-vsctl\fR(8).
.IP "\fBbare\fR"
The simple format with punctuation stripped off: \fB[]\fR and \fB{}\fR
are omitted around sets, maps, and empty columns, items within sets
and maps are space-separated, and strings are never quoted.  This
format may be easier for scripts to parse.
.IP "\fBjson\fR"
The RFC 4627 JSON format as described above.
.RE
.IP
.
.IP "\fB\-\-no\-headings\fR"
This option suppresses the heading row that otherwise appears in the
first row of table output.
.
.IP "\fB\-\-pretty\fR"
By default, JSON in output is printed as compactly as possible.  This
option causes JSON in output to be printed in a more readable
fashion.  Members of objects and elements of arrays are printed one
per line, with indentation.
.IP
This option does not affect JSON in tables, which is always printed
compactly.
.IP "\fB\-\-bare\fR"
Equivalent to \fB\-\-format=list \-\-data=bare \-\-no\-headings\fR.
.IP "\fB\-\-max\-column-width=\fIn\fR"
For table output only, limits the width of any column in the output to
\fIn\fR columns.  Longer cell data is truncated to fit, as necessary.
Columns are always wide enough to display the column names, if the
heading row is printed.
.
.SS "Public Key Infrastructure Options"
.IP "\fB\-\-bootstrap\-ca\-cert=\fIcacert.pem\fR"
When \fIcacert.pem\fR exists, this option has the same effect as
\fB\-C\fR or \fB\-\-ca\-cert\fR.  If it does not exist, then
\fB\*(PN\fR will attempt to obtain the CA certificate from the
SSL peer on its first SSL connection and save it to the named PEM
file.  If it is successful, it will immediately drop the connection
and reconnect, and from then on all SSL connections must be
authenticated by a certificate signed by the CA certificate thus
obtained.
.IP
\fBThis option exposes the SSL connection to a man-in-the-middle
attack obtaining the initial CA certificate\fR, but it may be useful
for bootstrapping.
.IP
This option is only useful if the SSL peer sends its CA certificate as
part of the SSL certificate chain.  The SSL protocol does not require
the server to send the CA certificate.
.IP
This option is mutually exclusive with \fB\-C\fR and
\fB\-\-ca\-cert\fR.
.de IQ
.  br
.  ns
.  IP "\\$1"
..
.IP "\fB\-p\fR \fIprivkey.pem\fR"
.IQ "\fB\-\-private\-key=\fIprivkey.pem\fR"
Specifies a PEM file containing the private key used as \fB\*(PN\fR's
identity for outgoing SSL connections.
.
.IP "\fB\-c\fR \fIcert.pem\fR"
.IQ "\fB\-\-certificate=\fIcert.pem\fR"
Specifies a PEM file containing a certificate that certifies the
private key specified on \fB\-p\fR or \fB\-\-private\-key\fR to be
trustworthy.  The certificate must be signed by the certificate
authority (CA) that the peer in SSL connections will use to verify it.
.
.IP "\fB\-C\fR \fIcacert.pem\fR"
.IQ "\fB\-\-ca\-cert=\fIcacert.pem\fR"
Specifies a PEM file containing the CA certificate that \fB\*(PN\fR
should use to verify certificates presented to it by SSL peers.  (This
may be the same certificate that SSL peers use to verify the
certificate specified on \fB\-c\fR or \fB\-\-certificate\fR, or it may
be a different one, depending on the PKI design in use.)
.
.IP "\fB\-C none\fR"
.IQ "\fB\-\-ca\-cert=none\fR"
Disables verification of certificates presented by SSL peers.  This
introduces a security risk, because it means that certificates cannot
be verified to be those of known trusted hosts.
.
.SH COMMANDS
The commands implemented by \fBovn\-sbctl\fR are described in the
sections below.
.SS "OVN_Southbound Commands"
These commands work with an \fBOVN_Southbound\fR database as a whole.
.
.IP "\fBinit\fR"
Initializes the database, if it is empty.  If the database has already
been initialized, this command has no effect.
.
.IP "\fBshow\fR"
Prints a brief overview of the database contents.
.
.SS "Chassis Commands"
These commands manipulate \fBOVN_Southbound\fR chassis.
.
.IP "[\fB\-\-may\-exist\fR] \fBchassis\-add \fIchassis\fR \fIencap-type\fR \fIencap-ip\fR"
Creates a new chassis named \fIchassis\fR.  \fIencap-type\fR is a
comma-separated list of tunnel types.  The chassis will have
one encap entry for each specified tunnel type with \fIencap-ip\fR
as the destination IP for each.
.IP
Without \fB\-\-may\-exist\fR, attempting to create a chassis that
exists is an error.  With \fB\-\-may\-exist\fR, this command does
nothing if \fIchassis\fR already exists.
.
.IP "[\fB\-\-if\-exists\fR] \fBchassis\-del \fIchassis\fR"
Deletes \fIchassis\fR and its \fIencaps\fR and \fIgateway_ports\fR.
.IP
Without \fB\-\-if\-exists\fR, attempting to delete a chassis that does
not exist is an error.  With \fB\-\-if\-exists\fR, attempting to
delete a chassis that does not exist has no effect.
.
.SS "Port binding Commands"
.
These commands manipulate \fBOVN_Southbound\fR port bindings.
.
.IP "[\fB\-\-may\-exist\fR] \fBlsp\-bind \fIlogical-port\fR \fIchassis\fR"
Binds the logical port named \fIlogical-port\fR to \fIchassis\fR.
.IP
Without \fB\-\-may\-exist\fR, attempting to bind a logical port that
has already been bound is an error.  With \fB\-\-may\-exist\fR, this
command does nothing if \fIlogical-port\fR has already been bound to
a chassis.
.
.IP "[\fB\-\-if\-exists\fR] \fBlsp\-unbind\fR \fIlogical-port\fR"
Resets the binding of \fIlogical-port\fR to \fINULL\fR.
.IP
Without \fB\-\-if\-exists\fR, attempting to unbind a logical port
that is not bound is an error.  With \fB\-\-if\-exists\fR, attempting
to unbind logical port that is not bound has no effect.
.
.SS "Logical Flow Commands"
.
.IP "[\fB\-\-uuid\fR] [\fB\-\-ovs\fR[\fB=\fIremote\fR]] [\fB\-\-stats\fR] \fBlflow\-list\fR [\fIlogical-datapath\fR] [\fIlflow\fR...]"
List logical flows.  If \fIlogical-datapath\fR is specified, only list
flows for that logical datapath.  The \fIlogical-datapath\fR may be
given as a UUID or as a datapath name (reporting an error if multiple
datapaths have the same name).
.IP
If at least one \fIlflow\fR is given, only matching logical flows, if
any, are listed.  Each \fIlflow\fR may be specified as a UUID or the
first few characters of a UUID, optionally prefixed by \fB0x\fR.
(Because \fBovn\-controller\fR sets OpenFlow flow cookies to the first
32 bits of the corresponding logical flow's UUID, this makes it easy
to look up the logical flow that generated a particular OpenFlow
flow.)
.IP
If \fB\-\-uuid\fR is specified, the output includes the first 32 bits
of each logical flow's UUID.  This makes it easier to find the
OpenFlow flows that correspond to a given logical flow.
.IP
If \fB\-\-ovs\fR is included, \fBovn\-sbctl\fR attempts to obtain and
display the OpenFlow flows that correspond to each OVN logical flow.
To do so, \fBovn\-sbctl\fR connects to \fIremote\fR (by default,
\fBunix:/var/run/openvswitch/br-int.mgmt\fR) over OpenFlow and retrieves the
flows.  If \fIremote\fR is specified, it must be an active OpenFlow
connection method described in \fBovs\-ofctl\fR(8).  Please see the
discussion of the similar \fB\-\-ovs\fR option in \fBovn-trace\fR(8)
for more information about the OpenFlow flow output.
.IP
By default, OpenFlow flow output includes only match and actions.  Add
\fB\-\-stats\fR to include all OpenFlow information, such as packet
and byte counters, duration, and timeouts.
.
.IP "[\fB\-\-uuid\fR] \fBdump\-flows\fR [\fIlogical-datapath\fR]"
Alias for \fBlflow\-list\fB.
.
.SS "Remote Connectivity Commands"
.
These commands manipulate the \fBconnections\fR column in the \fBSB_Global\fR
table and rows in the \fBConnection\fR table.  When \fBovsdb\-server\fR
is configured to use the \fBconnections\fR column for OVSDB connections,
this allows the administrator to use \fBovn\-sbctl\fR to configure database
connections.
.
.IP "\fBget\-connection\fR"
Prints the configured connection(s).
.
.IP "\fBdel\-connection\fR"
Deletes the configured connection(s).
.
.IP "\fBset\-connection\fR [\fIaccess\-specifier\fR] \fItarget\fR\&..."
Sets the configured manager target or targets.  Each \fItarget\fR may
may be an OVSDB active or passive connection method,
e.g. \fBpssl:6640\fR, as described in \fBovsdb\fR(7),
optionally preceded by an optional access-specifier (\fBread\-only\fR or
\fBread\-write\fR).
If provided, the effect of the access specifier persists for subsequent
targets until changed by another access specifier.
.
.SS "SSL Configuration"
When \fBovsdb\-server\fR is configured to connect using SSL, the
following parameters are required:
.TP
\fIprivate-key\fR
Specifies a PEM file containing the private key used for SSL connections.
.TP
\fIcertificate\fR
Specifies a PEM file containing a certificate, signed by the
certificate authority (CA) used by the connection peers, that
certifies the private key, identifying a trustworthy peer.
.TP
\fIca-cert\fR
Specifies a PEM file containing the CA certificate used to verify that
the connection peers are trustworthy.
.PP
These SSL settings apply to all SSL connections made by the southbound
database server.
.
.IP "\fBget\-ssl\fR"
Prints the SSL configuration.
.
.IP "\fBdel\-ssl\fR"
Deletes the current SSL configuration.
.
.IP "[\fB\-\-bootstrap\fR] \fBset\-ssl\fR \fIprivate-key\fR \fIcertificate\fR \fIca-cert\fR [\fIssl-protocol-list\fR [\fIssl-cipher-list\fR]]"
Sets the SSL configuration.  The \fB\-\-bootstrap\fR option is described
below.
.
.ST "CA Certificate Bootstrap"
.PP
Ordinarily, all of the files named in the SSL configuration must exist
before SSL connectivity can be used.  However, if the \fIca-cert\fR file
does not exist and the \fB\-\-bootstrap\fR
option is given, then \fBovsdb\-server\fR will attempt to obtain the
CA certificate from the target on its first SSL connection and
save it to the named PEM file.  If it is successful, it will
immediately drop the connection and reconnect, and from then on all
SSL connections must be authenticated by a certificate signed by the
CA certificate thus obtained.
.PP
\fBThis option exposes the SSL connection to a man-in-the-middle
attack obtaining the initial CA certificate\fR, but it may be useful
for bootstrapping.
.PP
This option is only useful if the SSL peer sends its CA certificate
as part of the SSL certificate chain.  The SSL protocol does not
require the controller to send the CA certificate.
.
.SS "Database Commands"
.
These commands query and modify the contents of \fBovsdb\fR tables.
They are a slight abstraction of the \fBovsdb\fR interface and as such
they operate at a lower level than other \fBovs\-sbctl\fR commands.
.PP
.ST "Identifying Tables, Records, and Columns"
.PP
Each of these commands has a \fItable\fR parameter to identify a table
within the database.  Many of them also take a \fIrecord\fR parameter
that identifies a particular record within a table.  The \fIrecord\fR
parameter may be the UUID for a record, and many tables offer
additional ways to identify records.  Some commands also take
\fIcolumn\fR parameters that identify a particular field within the
records in a table.
.PP
For a list of tables and their columns, see \fBovn\-sb\fR(5) or
see the table listing from the \fB--help\fR option.
.PP
Record names must be specified in full and with correct
capitalization, except that UUIDs may be abbreviated to their first 4
(or more) hex digits, as long as that is unique within the table.
Names of tables and columns are not case-sensitive, and \fB\-\fR and
\fB_\fR are treated interchangeably.  Unique abbreviations of table
and column names are acceptable, e.g. \fBaddr\fR or \fBa\fR is
sufficient to identify the \fBAddress_Set\fR table.
.
.ST "Database Values"
.PP
Each column in the database accepts a fixed type of data.  The
currently defined basic types, and their representations, are:
.IP "integer"
A decimal integer in the range \-2**63 to 2**63\-1, inclusive.
.IP "real"
A floating-point number.
.IP "Boolean"
True or false, written \fBtrue\fR or \fBfalse\fR, respectively.
.IP "string"
An arbitrary Unicode string, except that null bytes are not allowed.
Quotes are optional for most strings that begin with an English letter
or underscore and consist only of letters, underscores, hyphens, and
periods.  However, \fBtrue\fR and \fBfalse\fR and strings that match
the syntax of UUIDs (see below) must be enclosed in double quotes to
distinguish them from other basic types.  When double quotes are used,
the syntax is that of strings in JSON, e.g. backslashes may be used to
escape special characters.  The empty string must be represented as a
pair of double quotes (\fB""\fR).
.IP "UUID"
Either a universally unique identifier in the style of RFC 4122,
e.g. \fBf81d4fae\-7dec\-11d0\-a765\-00a0c91e6bf6\fR, or an \fB@\fIname\fR
defined by a \fBget\fR or \fBcreate\fR command within the same \fB\*(PN\fR
invocation.
.PP
Multiple values in a single column may be separated by spaces or a
single comma.  When multiple values are present, duplicates are not
allowed, and order is not important.  Conversely, some database
columns can have an empty set of values, represented as \fB[]\fR, and
square brackets may optionally enclose other non-empty sets or single
values as well. For a column accepting a set of integers, database commands
accept a range. A range is represented by two integers separated by
\fB-\fR. A range is inclusive. A range has a maximum size of 4096
elements. If more elements are needed, they can be specified in seperate
ranges.
.PP
A few database columns are ``maps'' of key-value pairs, where the key
and the value are each some fixed database type.  These are specified
in the form \fIkey\fB=\fIvalue\fR, where \fIkey\fR and \fIvalue\fR
follow the syntax for the column's key type and value type,
respectively.  When multiple pairs are present (separated by spaces or
a comma), duplicate keys are not allowed, and again the order is not
important.  Duplicate values are allowed.  An empty map is represented
as \fB{}\fR.  Curly braces may optionally enclose non-empty maps as
well (but use quotes to prevent the shell from expanding
\fBother-config={0=x,1=y}\fR into \fBother-config=0=x
other-config=1=y\fR, which may not have the desired effect).
.
.ST "Database Command Syntax"
.
.IP "[\fB\-\-if\-exists\fR] [\fB\-\-columns=\fIcolumn\fR[\fB,\fIcolumn\fR]...] \fBlist \fItable \fR[\fIrecord\fR]..."
Lists the data in each specified \fIrecord\fR.  If no
records are specified, lists all the records in \fItable\fR.
.IP
If \fB\-\-columns\fR is specified, only the requested columns are
listed, in the specified order.  Otherwise, all columns are listed, in
alphabetical order by column name.
.IP
Without \fB\-\-if-exists\fR, it is an error if any specified
\fIrecord\fR does not exist.  With \fB\-\-if-exists\fR, the command
ignores any \fIrecord\fR that does not exist, without producing any
output.
.
.IP "[\fB\-\-columns=\fIcolumn\fR[\fB,\fIcolumn\fR]...] \fBfind \fItable \fR[\fIcolumn\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR]..."
Lists the data in each record in \fItable\fR whose \fIcolumn\fR equals
\fIvalue\fR or, if \fIkey\fR is specified, whose \fIcolumn\fR contains
a \fIkey\fR with the specified \fIvalue\fR.  The following operators
may be used where \fB=\fR is written in the syntax summary:
.RS
.IP "\fB= != < > <= >=\fR"
Selects records in which \fIcolumn\fR[\fB:\fIkey\fR] equals, does not
equal, is less than, is greater than, is less than or equal to, or is
greater than or equal to \fIvalue\fR, respectively.
.IP
Consider \fIcolumn\fR[\fB:\fIkey\fR] and \fIvalue\fR as sets of
elements.  Identical sets are considered equal.  Otherwise, if the
sets have different numbers of elements, then the set with more
elements is considered to be larger.  Otherwise, consider a element
from each set pairwise, in increasing order within each set.  The
first pair that differs determines the result.  (For a column that
contains key-value pairs, first all the keys are compared, and values
are considered only if the two sets contain identical keys.)
.IP "\fB{=} {!=}\fR"
Test for set equality or inequality, respectively.
.IP "\fB{<=}\fR"
Selects records in which \fIcolumn\fR[\fB:\fIkey\fR] is a subset of
\fIvalue\fR.  For example, \fBflood-vlans{<=}1,2\fR selects records in
which the \fBflood-vlans\fR column is the empty set or contains 1 or 2
or both.
.IP "\fB{<}\fR"
Selects records in which \fIcolumn\fR[\fB:\fIkey\fR] is a proper
subset of \fIvalue\fR.  For example, \fBflood-vlans{<}1,2\fR selects
records in which the \fBflood-vlans\fR column is the empty set or
contains 1 or 2 but not both.
.IP "\fB{>=} {>}\fR"
Same as \fB{<=}\fR and \fB{<}\fR, respectively, except that the
relationship is reversed.  For example, \fBflood-vlans{>=}1,2\fR
selects records in which the \fBflood-vlans\fR column contains both 1
and 2.
.RE
.IP
For arithmetic operators (\fB= != < > <= >=\fR), when \fIkey\fR is
specified but a particular record's \fIcolumn\fR does not contain
\fIkey\fR, the record is always omitted from the results.  Thus, the
condition \fBother-config:mtu!=1500\fR matches records that have a
\fBmtu\fR key whose value is not 1500, but not those that lack an
\fBmtu\fR key.
.IP
For the set operators, when \fIkey\fR is specified but a particular
record's \fIcolumn\fR does not contain \fIkey\fR, the comparison is
done against an empty set.  Thus, the condition
\fBother-config:mtu{!=}1500\fR matches records that have a \fBmtu\fR
key whose value is not 1500 and those that lack an \fBmtu\fR key.
.IP
Don't forget to escape \fB<\fR or \fB>\fR from interpretation by the
shell.
.IP
If \fB\-\-columns\fR is specified, only the requested columns are
listed, in the specified order.  Otherwise all columns are listed, in
alphabetical order by column name.
.IP
The UUIDs shown for rows created in the same \fB\*(PN\fR
invocation will be wrong.
.
.IP "[\fB\-\-if\-exists\fR] [\fB\-\-id=@\fIname\fR] \fBget \fItable record \fR[\fIcolumn\fR[\fB:\fIkey\fR]]..."
Prints the value of each specified \fIcolumn\fR in the given
\fIrecord\fR in \fItable\fR.  For map columns, a \fIkey\fR may
optionally be specified, in which case the value associated with
\fIkey\fR in the column is printed, instead of the entire map.
.IP
Without \fB\-\-if\-exists\fR, it is an error if \fIrecord\fR does not
exist or \fIkey\fR is specified, if \fIkey\fR does not exist in
\fIrecord\fR.  With \fB\-\-if\-exists\fR, a missing \fIrecord\fR
yields no output and a missing \fIkey\fR prints a blank line.
.IP
If \fB@\fIname\fR is specified, then the UUID for \fIrecord\fR may be
referred to by that name later in the same \fB\*(PN\fR
invocation in contexts where a UUID is expected.
.IP
Both \fB\-\-id\fR and the \fIcolumn\fR arguments are optional, but
usually at least one or the other should be specified.  If both are
omitted, then \fBget\fR has no effect except to verify that
\fIrecord\fR exists in \fItable\fR.
.IP
\fB\-\-id\fR and \fB\-\-if\-exists\fR cannot be used together.
.
.IP "[\fB\-\-if\-exists\fR] \fBset \fItable record column\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR..."
Sets the value of each specified \fIcolumn\fR in the given
\fIrecord\fR in \fItable\fR to \fIvalue\fR.  For map columns, a
\fIkey\fR may optionally be specified, in which case the value
associated with \fIkey\fR in that column is changed (or added, if none
exists), instead of the entire map.
.IP
Without \fB\-\-if-exists\fR, it is an error if \fIrecord\fR does not
exist.  With \fB\-\-if-exists\fR, this command does nothing if
\fIrecord\fR does not exist.
.
.IP "[\fB\-\-if\-exists\fR] \fBadd \fItable record column \fR[\fIkey\fB=\fR]\fIvalue\fR..."
Adds the specified value or key-value pair to \fIcolumn\fR in
\fIrecord\fR in \fItable\fR.  If \fIcolumn\fR is a map, then \fIkey\fR
is required, otherwise it is prohibited.  If \fIkey\fR already exists
in a map column, then the current \fIvalue\fR is not replaced (use the
\fBset\fR command to replace an existing value).
.IP
Without \fB\-\-if-exists\fR, it is an error if \fIrecord\fR does not
exist.  With \fB\-\-if-exists\fR, this command does nothing if
\fIrecord\fR does not exist.
.
.IP "[\fB\-\-if\-exists\fR] \fBremove \fItable record column \fR\fIvalue\fR..."
.IQ "[\fB\-\-if\-exists\fR] \fBremove \fItable record column \fR\fIkey\fR..."
.IQ "[\fB\-\-if\-exists\fR] \fBremove \fItable record column \fR\fIkey\fB=\fR\fIvalue\fR..."
Removes the specified values or key-value pairs from \fIcolumn\fR in
\fIrecord\fR in \fItable\fR.  The first form applies to columns that
are not maps: each specified \fIvalue\fR is removed from the column.
The second and third forms apply to map columns: if only a \fIkey\fR
is specified, then any key-value pair with the given \fIkey\fR is
removed, regardless of its value; if a \fIvalue\fR is given then a
pair is removed only if both key and value match.
.IP
It is not an error if the column does not contain the specified key or
value or pair.
.IP
Without \fB\-\-if-exists\fR, it is an error if \fIrecord\fR does not
exist.  With \fB\-\-if-exists\fR, this command does nothing if
\fIrecord\fR does not exist.
.
.IP "[\fB\-\-if\-exists\fR] \fBclear\fR \fItable record column\fR..."
Sets each \fIcolumn\fR in \fIrecord\fR in \fItable\fR to the empty set
or empty map, as appropriate.  This command applies only to columns
that are allowed to be empty.
.IP
Without \fB\-\-if-exists\fR, it is an error if \fIrecord\fR does not
exist.  With \fB\-\-if-exists\fR, this command does nothing if
\fIrecord\fR does not exist.
.
.IP "[\fB\-\-id=@\fIname\fR] \fBcreate\fR \fItable column\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR..."
Creates a new record in \fItable\fR and sets the initial values of
each \fIcolumn\fR.  Columns not explicitly set will receive their
default values.  Outputs the UUID of the new row.
.IP
If \fB@\fIname\fR is specified, then the UUID for the new row may be
referred to by that name elsewhere in the same \fB\*(PN\fR
invocation in contexts where a UUID is expected.  Such references may
precede or follow the \fBcreate\fR command.
.
.RS
.IP "Caution (ovs-vsctl as example)"
Records in the Open vSwitch database are significant only when they
can be reached directly or indirectly from the \fBOpen_vSwitch\fR
table.  Except for records in the \fBQoS\fR or \fBQueue\fR tables,
records that are not reachable from the \fBOpen_vSwitch\fR table are
automatically deleted from the database.  This deletion happens
immediately, without waiting for additional \fBovs\-vsctl\fR commands
or other database activity.  Thus, a \fBcreate\fR command must
generally be accompanied by additional commands \fIwithin the same
\fBovs\-vsctl\fI invocation\fR to add a chain of references to the
newly created record from the top-level \fBOpen_vSwitch\fR record.
The \fBEXAMPLES\fR section gives some examples that show how to do
this.
.RE
.
.IP "\fR[\fB\-\-if\-exists\fR] \fBdestroy \fItable record\fR..."
Deletes each specified \fIrecord\fR from \fItable\fR.  Unless
\fB\-\-if\-exists\fR is specified, each \fIrecord\fRs must exist.
.IP "\fB\-\-all destroy \fItable\fR"
Deletes all records from the \fItable\fR.
.
.RS
.IP "Caution (ovs-vsctl as example)"
The \fBdestroy\fR command is only useful for records in the \fBQoS\fR
or \fBQueue\fR tables.  Records in other tables are automatically
deleted from the database when they become unreachable from the
\fBOpen_vSwitch\fR table.  This means that deleting the last reference
to a record is sufficient for deleting the record itself.  For records
in these tables, \fBdestroy\fR is silently ignored.  See the
\fBEXAMPLES\fR section below for more information.
.RE
.
.IP "\fBwait\-until \fItable record \fR[\fIcolumn\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR]..."
Waits until \fItable\fR contains a record named \fIrecord\fR whose
\fIcolumn\fR equals \fIvalue\fR or, if \fIkey\fR is specified, whose
\fIcolumn\fR contains a \fIkey\fR with the specified \fIvalue\fR.  Any
of the operators \fB!=\fR, \fB<\fR, \fB>\fR, \fB<=\fR, or \fB>=\fR may
be substituted for \fB=\fR to test for inequality, less than, greater
than, less than or equal to, or greater than or equal to,
respectively.  (Don't forget to escape \fB<\fR or \fB>\fR from
interpretation by the shell.)
.IP
If no \fIcolumn\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR arguments are given,
this command waits only until \fIrecord\fR exists.  If more than one
such argument is given, the command waits until all of them are
satisfied.
.
.RS
.IP "Caution (ovs-vsctl as example)"
Usually \fBwait\-until\fR should be placed at the beginning of a set
of \fBovs\-vsctl\fR commands.  For example, \fBwait\-until bridge br0
\-\- get bridge br0 datapath_id\fR waits until a bridge named
\fBbr0\fR is created, then prints its \fBdatapath_id\fR column,
whereas \fBget bridge br0 datapath_id \-\- wait\-until bridge br0\fR
will abort if no bridge named \fBbr0\fR exists when \fBovs\-vsctl\fR
initially connects to the database.
.RE
.IP
Consider specifying \fB\-\-timeout=0\fR along with
\fB\-\-wait\-until\fR, to prevent \fB\*(PN\fR from terminating
after waiting only at most 5 seconds.
.IP "\fBcomment \fR[\fIarg\fR]..."
This command has no effect on behavior, but any database log record
created by the command will include the command and its arguments.
.SH "EXIT STATUS"
.IP "0"
Successful program execution.
.IP "1"
Usage, syntax, or configuration file error.
.SH "SEE ALSO"
.
.BR ovn\-sb (5).
