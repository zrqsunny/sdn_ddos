.\" -*- nroff -*-
.de IQ
.  br
.  ns
.  IP "\\$1"
..
.de ST
.  PP
.  RS -0.15in
.  I "\\$1"
.  RE
..
.TH ovn\-sbctl 8 "2.5.5" "Open vSwitch" "Open vSwitch Manual"
.\" This program's name:
.ds PN ovn\-sbctl
.
.SH NAME
ovn\-sbctl \- utility for querying and configuring \fBOVN_Southbound\fR database
.
.SH SYNOPSIS
\fBovn\-sbctl\fR [\fIoptions\fR] \fB\-\-\fR [\fIoptions\fR] \fIcommand
\fR[\fIargs\fR] [\fB\-\-\fR [\fIoptions\fR] \fIcommand \fR[\fIargs\fR]]...
.
.SH DESCRIPTION
The command should only be used for advanced debugging and troubleshooting
of the \fBOVN_Southbound\fR database; and should never be used in normal
operation.
.PP
The \fBovn\-sbctl\fR program configures the \fBOVN_Southbound\fR database
by providing a high\-level interface to its configuration database.  See
\fBovn\-sb\fR(5) for comprehensive documentation of the database schema.
.PP
\fBovn\-sbctl\fR connects to an \fBovsdb\-server\fR process that
maintains an OVN_Southbound configuration database.  Using this
connection, it queries and possibly applies changes to the database,
depending on the supplied commands.
.PP
\fBovn\-sbctl\fR can perform any number of commands in a single run,
implemented as a single atomic transaction against the database.
.PP
The \fBovn\-sbctl\fR command line begins with global options (see
\fBOPTIONS\fR below for details).  The global options are followed by
one or more commands.  Each command should begin with \fB\-\-\fR by
itself as a command-line argument, to separate it from the following
commands.  (The \fB\-\-\fR before the first command is optional.)  The
command
itself starts with command-specific options, if any, followed by the
command name and any arguments.
.
.SH OPTIONS
.
The following options affect the behavior of \fBovn\-sbctl\fR as a
whole.  Some individual commands also accept their own options, which
are given just before the command name.  If the first command on the
command line has options, then those options must be separated from
the global options by \fB\-\-\fR.
.
.IP "\fB\-\-db=\fIserver\fR"
The OVSDB database remote to contact.  If the \fBOVN_SB_DB\fR
environment variable is set, its value is used as the default.
Otherwise, the default is \fBunix:/var/run/openvswitch/db.sock\fR, but this
default is unlikely to be useful outside of single-machine OVN test
environments.
.IP
\fIserver\fR must take one of the following forms:
.RS
.IP "\fBssl:\fIip\fB:\fIport\fR"
The specified SSL \fIport\fR on the host at the given \fIip\fR, which
must be expressed as an IP address (not a DNS name) in IPv4 or IPv6 address
format.  If \fIip\fR is an IPv6 address, then wrap \fIip\fR with square
brackets, e.g.: \fBssl:[::1]:6640\fR.
The \fB\-\-private\-key\fR, \fB\-\-certificate\fR, and \fB\-\-ca\-cert\fR
options are mandatory when this form is used.
.
.IP "\fBtcp:\fIip\fB:\fIport\fR"
Connect to the given TCP \fIport\fR on \fIip\fR, where \fIip\fR can be IPv4
or IPv6 address. If \fIip\fR is an IPv6 address, then wrap \fIip\fR with
square brackets, e.g.: \fBtcp:[::1]:6640\fR.
.
.IP "\fBunix:\fIfile\fR"
On POSIX, connect to the Unix domain server socket named \fIfile\fR.
.IP
On Windows, connect to a localhost TCP port whose value is written in
\fIfile\fR.
.IP "\fBpssl:\fIport\fR[\fB:\fIip\fR]"
Listen on the given SSL \fIport\fR for a connection.  By default,
connections are not bound to a particular local IP address and
it listens only on IPv4 (but not IPv6) addresses, but
specifying \fIip\fR limits connections to those from the given
\fIip\fR, either IPv4 or IPv6 address.  If \fIip\fR is
an IPv6 address, then wrap \fIip\fR with square brackets, e.g.:
\fBpssl:6640:[::1]\fR.  The \fB\-\-private\-key\fR,
\fB\-\-certificate\fR, and \fB\-\-ca\-cert\fR options are mandatory
when this form is used.
.
.IP "\fBptcp:\fIport\fR[\fB:\fIip\fR]"
Listen on the given TCP \fIport\fR for a connection.  By default,
connections are not bound to a particular local IP address and
it listens only on IPv4 (but not IPv6) addresses, but
\fIip\fR may be specified to listen only for connections to the given
\fIip\fR, either IPv4 or IPv6 address.  If \fIip\fR is
an IPv6 address, then wrap \fIip\fR with square brackets, e.g.:
\fBptcp:6640:[::1]\fR.
.
.IP "\fBpunix:\fIfile\fR"
On POSIX, listen on the Unix domain server socket named \fIfile\fR for a
connection.
.IP
On Windows, listen on a kernel chosen TCP port on the localhost. The kernel
chosen TCP port value is written in \fIfile\fR.
.RE
.
.IP "\fB\-\-no\-syslog\fR"
By default, \fBovn\-sbctl\fR logs its arguments and the details of any
changes that it makes to the system log.  This option disables this
logging.
.IP
This option is equivalent to \fB\-\-verbose=sbctl:syslog:warn\fR.
.
.IP "\fB\-\-oneline\fR"
Modifies the output format so that the output for each command is printed
on a single line.  New-line characters that would otherwise separate
lines are printed as \fB\\n\fR, and any instances of \fB\\\fR that
would otherwise appear in the output are doubled.
Prints a blank line for each command that has no output.
This option does not affect the formatting of output from the
\fBlist\fR or \fBfind\fR commands; see \fBTable Formatting Options\fR
below.
.
.IP "\fB\-\-dry\-run\fR"
Prevents \fBovn\-sbctl\fR from actually modifying the database.
.
.IP "\fB\-t \fIsecs\fR"
.IQ "\fB\-\-timeout=\fIsecs\fR"
By default, or with a \fIsecs\fR of \fB0\fR, \fBovn\-sbctl\fR waits
forever for a response from the database.  This option limits runtime
to approximately \fIsecs\fR seconds.  If the timeout expires,
\fBovn\-sbctl\fR will exit with a \fBSIGALRM\fR signal.  (A timeout
would normally happen only if the database cannot be contacted, or if
the system is overloaded.)
.
.SS "Table Formatting Options"
These options control the format of output from the \fBlist\fR and
\fBfind\fR commands.
.IP "\fB\-f \fIformat\fR"
.IQ "\fB\-\-format=\fIformat\fR"
Sets the type of table formatting.  The following types of
\fIformat\fR are available:
.RS
.ie '\*(PN'ovs\-vsctl' .IP "\fBtable\fR"
.el                    .IP "\fBtable\fR (default)"
2-D text tables with aligned columns.
.ie '\*(PN'ovs\-vsctl' .IP "\fBlist\fR (default)"
.el                    .IP "\fBlist\fR"
A list with one column per line and rows separated by a blank line.
.IP "\fBhtml\fR"
HTML tables.
.IP "\fBcsv\fR"
Comma-separated values as defined in RFC 4180.
.IP "\fBjson\fR"
JSON format as defined in RFC 4627.  The output is a sequence of JSON
objects, each of which corresponds to one table.  Each JSON object has
the following members with the noted values:
.RS
.IP "\fBcaption\fR"
The table's caption.  This member is omitted if the table has no
caption.
.IP "\fBheadings\fR"
An array with one element per table column.  Each array element is a
string giving the corresponding column's heading.
.IP "\fBdata\fR"
An array with one element per table row.  Each element is also an
array with one element per table column.  The elements of this
second-level array are the cells that constitute the table.  Cells
that represent OVSDB data or data types are expressed in the format
described in the OVSDB specification; other cells are simply expressed
as text strings.
.RE
.RE
.
.IP "\fB\-d \fIformat\fR"
.IQ "\fB\-\-data=\fIformat\fR"
Sets the formatting for cells within output tables.  The following
types of \fIformat\fR are available:
.RS
.IP "\fBstring\fR (default)"
The simple format described in the \fBDatabase Values\fR
.ie '\*(PN'ovs\-vsctl' section below.
.el                    section of \fBovs\-vsctl\fR(8).
.IP "\fBbare\fR"
The simple format with punctuation stripped off: \fB[]\fR and \fB{}\fR
are omitted around sets, maps, and empty columns, items within sets
and maps are space-separated, and strings are never quoted.  This
format may be easier for scripts to parse.
.IP "\fBjson\fR"
JSON.
.RE
.IP
The \fBjson\fR output format always outputs cells in JSON format,
ignoring this option.
.
.IP "\fB\-\-no\-heading\fR"
This option suppresses the heading row that otherwise appears in the
first row of table output.
.
.IP "\fB\-\-pretty\fR"
By default, JSON in output is printed as compactly as possible.  This
option causes JSON in output to be printed in a more readable
fashion.  Members of objects and elements of arrays are printed one
per line, with indentation.
.IP
This option does not affect JSON in tables, which is always printed
compactly.
.IP "\fB\-\-bare\fR"
Equivalent to \fB\-\-format=list \-\-data=bare \-\-no\-headings\fR.
.
.SH COMMANDS
The commands implemented by \fBovn\-sbctl\fR are described in the
sections below.
.SS "OVN_Southbound Commands"
These commands work with an \fBOVN_Southbound\fR database as a whole.
.
.IP "\fBshow\fR"
Prints a brief overview of the database contents.
.
.SS "Chassis Commands"
These commands manipulate \fBOVN_Southbound\fR chassis.
.
.IP "[\fB\-\-may\-exist\fR] \fBchassis\-add \fIchassis\fR \fIencap\-type\fR \fIencap-ip\fR"
Creates a new chassis named \fIchassis\fR.  \fIencap\-type\fR is a
comma-separated list of tunnel types.  The chassis will have
one encap entry for each specified tunnel type with \fIencap-ip\fR
as the destination IP for each.
.IP
Without \fB\-\-may\-exist\fR, attempting to create a chassis that
exists is an error.  With \fB\-\-may\-exist\fR, this command does
nothing if \fIchassis\fR already exists.
.
.IP "[\fB\-\-if\-exists\fR] \fBchassis\-del \fIchassis\fR"
Deletes \fIchassis\fR and its \fIencaps\fR and \fIgateway_ports\fR.
.IP
Without \fB\-\-if\-exists\fR, attempting to delete a chassis that does
not exist is an error.  With \fB\-\-if\-exists\fR, attempting to
delete a chassis that does not exist has no effect.
.
.SS "Port binding Commands"
.
These commands manipulate \fBOVN_Southbound\fR port bindings.
.
.IP "[\fB\-\-may\-exist\fR] \fBlport\-bind \fIlogical\-port\fR \fIchassis\fR"
Binds the logical port named \fIlogical\-port\fR to \fIchassis\fR.
.IP
Without \fB\-\-may\-exist\fR, attempting to bind a logical port that
has already been bound is an error.  With \fB\-\-may\-exist\fR, this
command does nothing if \fIlogical\-port\fR has already been bound to
a chassis.
.
.IP "[\fB\-\-if\-exists\fR] \fBlport\-unbind\fR \fIlogical\-port\fR"
Resets the binding of \fIlogical\-port\fR to \fINULL\fR.
.IP
Without \fB\-\-if\-exists\fR, attempting to unbind a logical port
that is not bound is an error.  With \fB\-\-if\-exists\fR, attempting
to unbind logical port that is not bound has no effect.
.
.SS "Logical Flow Commands"
.
.IP "\fBlflow\-list\fR [\fIlogical\-datapath\fR]"
List logical flows. If \fIlogical\-datapath\fR is specified, only list flows for
that logical datapath.
.
.IP "\fBdump\-flows\fR [\fIlogical\-datapath\fR]"
Alias for \fBlflow\-list\fB.
.
.ST "Database Values"
.PP
Each column in the database accepts a fixed type of data.  The
currently defined basic types, and their representations, are:
.IP "integer"
A decimal integer in the range \-2**63 to 2**63\-1, inclusive.
.IP "real"
A floating-point number.
.IP "Boolean"
True or false, written \fBtrue\fR or \fBfalse\fR, respectively.
.IP "string"
An arbitrary Unicode string, except that null bytes are not allowed.
Quotes are optional for most strings that begin with an English letter
or underscore and consist only of letters, underscores, hyphens, and
periods.  However, \fBtrue\fR and \fBfalse\fR and strings that match
the syntax of UUIDs (see below) must be enclosed in double quotes to
distinguish them from other basic types.  When double quotes are used,
the syntax is that of strings in JSON, e.g. backslashes may be used to
escape special characters.  The empty string must be represented as a
pair of double quotes (\fB""\fR).
.IP "UUID"
Either a universally unique identifier in the style of RFC 4122,
e.g. \fBf81d4fae\-7dec\-11d0\-a765\-00a0c91e6bf6\fR, or an \fB@\fIname\fR
defined by a \fBget\fR or \fBcreate\fR command within the same \fB\*(PN\fR
invocation.
.PP
Multiple values in a single column may be separated by spaces or a
single comma.  When multiple values are present, duplicates are not
allowed, and order is not important.  Conversely, some database
columns can have an empty set of values, represented as \fB[]\fR, and
square brackets may optionally enclose other non-empty sets or single
values as well.
.PP
A few database columns are ``maps'' of key-value pairs, where the key
and the value are each some fixed database type.  These are specified
in the form \fIkey\fB=\fIvalue\fR, where \fIkey\fR and \fIvalue\fR
follow the syntax for the column's key type and value type,
respectively.  When multiple pairs are present (separated by spaces or
a comma), duplicate keys are not allowed, and again the order is not
important.  Duplicate values are allowed.  An empty map is represented
as \fB{}\fR.  Curly braces may optionally enclose non-empty maps as
well (but use quotes to prevent the shell from expanding
\fBother-config={0=x,1=y}\fR into \fBother-config=0=x
other-config=1=y\fR, which may not have the desired effect).
.
.ST "Database Command Syntax"
.
.IP "[\fB\-\-if\-exists\fR] [\fB\-\-columns=\fIcolumn\fR[\fB,\fIcolumn\fR]...] \fBlist \fItable \fR[\fIrecord\fR]..."
Lists the data in each specified \fIrecord\fR.  If no
records are specified, lists all the records in \fItable\fR.
.IP
If \fB\-\-columns\fR is specified, only the requested columns are
listed, in the specified order.  Otherwise, all columns are listed, in
alphabetical order by column name.
.IP
Without \fB\-\-if-exists\fR, it is an error if any specified
\fIrecord\fR does not exist.  With \fB\-\-if-exists\fR, the command
ignores any \fIrecord\fR that does not exist, without producing any
output.
.
.IP "[\fB\-\-columns=\fIcolumn\fR[\fB,\fIcolumn\fR]...] \fBfind \fItable \fR[\fIcolumn\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR]..."
Lists the data in each record in \fItable\fR whose \fIcolumn\fR equals
\fIvalue\fR or, if \fIkey\fR is specified, whose \fIcolumn\fR contains
a \fIkey\fR with the specified \fIvalue\fR.  The following operators
may be used where \fB=\fR is written in the syntax summary:
.RS
.IP "\fB= != < > <= >=\fR"
Selects records in which \fIcolumn\fR[\fB:\fIkey\fR] equals, does not
equal, is less than, is greater than, is less than or equal to, or is
greater than or equal to \fIvalue\fR, respectively.
.IP
Consider \fIcolumn\fR[\fB:\fIkey\fR] and \fIvalue\fR as sets of
elements.  Identical sets are considered equal.  Otherwise, if the
sets have different numbers of elements, then the set with more
elements is considered to be larger.  Otherwise, consider a element
from each set pairwise, in increasing order within each set.  The
first pair that differs determines the result.  (For a column that
contains key-value pairs, first all the keys are compared, and values
are considered only if the two sets contain identical keys.)
.IP "\fB{=} {!=}\fR"
Test for set equality or inequality, respectively.
.IP "\fB{<=}\fR"
Selects records in which \fIcolumn\fR[\fB:\fIkey\fR] is a subset of
\fIvalue\fR.  For example, \fBflood-vlans{<=}1,2\fR selects records in
which the \fBflood-vlans\fR column is the empty set or contains 1 or 2
or both.
.IP "\fB{<}\fR"
Selects records in which \fIcolumn\fR[\fB:\fIkey\fR] is a proper
subset of \fIvalue\fR.  For example, \fBflood-vlans{<}1,2\fR selects
records in which the \fBflood-vlans\fR column is the empty set or
contains 1 or 2 but not both.
.IP "\fB{>=} {>}\fR"
Same as \fB{<=}\fR and \fB{<}\fR, respectively, except that the
relationship is reversed.  For example, \fBflood-vlans{>=}1,2\fR
selects records in which the \fBflood-vlans\fR column contains both 1
and 2.
.RE
.IP
For arithmetic operators (\fB= != < > <= >=\fR), when \fIkey\fR is
specified but a particular record's \fIcolumn\fR does not contain
\fIkey\fR, the record is always omitted from the results.  Thus, the
condition \fBother-config:mtu!=1500\fR matches records that have a
\fBmtu\fR key whose value is not 1500, but not those that lack an
\fBmtu\fR key.
.IP
For the set operators, when \fIkey\fR is specified but a particular
record's \fIcolumn\fR does not contain \fIkey\fR, the comparison is
done against an empty set.  Thus, the condition
\fBother-config:mtu{!=}1500\fR matches records that have a \fBmtu\fR
key whose value is not 1500 and those that lack an \fBmtu\fR key.
.IP
Don't forget to escape \fB<\fR or \fB>\fR from interpretation by the
shell.
.IP
If \fB\-\-columns\fR is specified, only the requested columns are
listed, in the specified order.  Otherwise all columns are listed, in
alphabetical order by column name.
.IP
The UUIDs shown for rows created in the same \fB\*(PN\fR
invocation will be wrong.
.
.IP "[\fB\-\-if\-exists\fR] [\fB\-\-id=@\fIname\fR] \fBget \fItable record \fR[\fIcolumn\fR[\fB:\fIkey\fR]]..."
Prints the value of each specified \fIcolumn\fR in the given
\fIrecord\fR in \fItable\fR.  For map columns, a \fIkey\fR may
optionally be specified, in which case the value associated with
\fIkey\fR in the column is printed, instead of the entire map.
.IP
Without \fB\-\-if\-exists\fR, it is an error if \fIrecord\fR does not
exist or \fIkey\fR is specified, if \fIkey\fR does not exist in
\fIrecord\fR.  With \fB\-\-if\-exists\fR, a missing \fIrecord\fR
yields no output and a missing \fIkey\fR prints a blank line.
.IP
If \fB@\fIname\fR is specified, then the UUID for \fIrecord\fR may be
referred to by that name later in the same \fB\*(PN\fR
invocation in contexts where a UUID is expected.
.IP
Both \fB\-\-id\fR and the \fIcolumn\fR arguments are optional, but
usually at least one or the other should be specified.  If both are
omitted, then \fBget\fR has no effect except to verify that
\fIrecord\fR exists in \fItable\fR.
.IP
\fB\-\-id\fR and \fB\-\-if\-exists\fR cannot be used together.
.
.IP "[\fB\-\-if\-exists\fR] \fBset \fItable record column\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR..."
Sets the value of each specified \fIcolumn\fR in the given
\fIrecord\fR in \fItable\fR to \fIvalue\fR.  For map columns, a
\fIkey\fR may optionally be specified, in which case the value
associated with \fIkey\fR in that column is changed (or added, if none
exists), instead of the entire map.
.IP
Without \fB\-\-if-exists\fR, it is an error if \fIrecord\fR does not
exist.  With \fB\-\-if-exists\fR, this command does nothing if
\fIrecord\fR does not exist.
.
.IP "[\fB\-\-if\-exists\fR] \fBadd \fItable record column \fR[\fIkey\fB=\fR]\fIvalue\fR..."
Adds the specified value or key-value pair to \fIcolumn\fR in
\fIrecord\fR in \fItable\fR.  If \fIcolumn\fR is a map, then \fIkey\fR
is required, otherwise it is prohibited.  If \fIkey\fR already exists
in a map column, then the current \fIvalue\fR is not replaced (use the
\fBset\fR command to replace an existing value).
.IP
Without \fB\-\-if-exists\fR, it is an error if \fIrecord\fR does not
exist.  With \fB\-\-if-exists\fR, this command does nothing if
\fIrecord\fR does not exist.
.
.IP "[\fB\-\-if\-exists\fR] \fBremove \fItable record column \fR\fIvalue\fR..."
.IQ "[\fB\-\-if\-exists\fR] \fBremove \fItable record column \fR\fIkey\fR..."
.IQ "[\fB\-\-if\-exists\fR] \fBremove \fItable record column \fR\fIkey\fB=\fR\fIvalue\fR..."
Removes the specified values or key-value pairs from \fIcolumn\fR in
\fIrecord\fR in \fItable\fR.  The first form applies to columns that
are not maps: each specified \fIvalue\fR is removed from the column.
The second and third forms apply to map columns: if only a \fIkey\fR
is specified, then any key-value pair with the given \fIkey\fR is
removed, regardless of its value; if a \fIvalue\fR is given then a
pair is removed only if both key and value match.
.IP
It is not an error if the column does not contain the specified key or
value or pair.
.IP
Without \fB\-\-if-exists\fR, it is an error if \fIrecord\fR does not
exist.  With \fB\-\-if-exists\fR, this command does nothing if
\fIrecord\fR does not exist.
.
.IP "[\fB\-\-if\-exists\fR] \fBclear\fR \fItable record column\fR..."
Sets each \fIcolumn\fR in \fIrecord\fR in \fItable\fR to the empty set
or empty map, as appropriate.  This command applies only to columns
that are allowed to be empty.
.IP
Without \fB\-\-if-exists\fR, it is an error if \fIrecord\fR does not
exist.  With \fB\-\-if-exists\fR, this command does nothing if
\fIrecord\fR does not exist.
.
.IP "[\fB\-\-id=@\fIname\fR] \fBcreate\fR \fItable column\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR..."
Creates a new record in \fItable\fR and sets the initial values of
each \fIcolumn\fR.  Columns not explicitly set will receive their
default values.  Outputs the UUID of the new row.
.IP
If \fB@\fIname\fR is specified, then the UUID for the new row may be
referred to by that name elsewhere in the same \fB\*(PN\fR
invocation in contexts where a UUID is expected.  Such references may
precede or follow the \fBcreate\fR command.
.
.RS
.IP "Caution (ovs-vsctl as exmaple)"
Records in the Open vSwitch database are significant only when they
can be reached directly or indirectly from the \fBOpen_vSwitch\fR
table.  Except for records in the \fBQoS\fR or \fBQueue\fR tables,
records that are not reachable from the \fBOpen_vSwitch\fR table are
automatically deleted from the database.  This deletion happens
immediately, without waiting for additional \fBovs\-vsctl\fR commands
or other database activity.  Thus, a \fBcreate\fR command must
generally be accompanied by additional commands \fIwithin the same
\fBovs\-vsctl\fI invocation\fR to add a chain of references to the
newly created record from the top-level \fBOpen_vSwitch\fR record.
The \fBEXAMPLES\fR section gives some examples that show how to do
this.
.RE
.
.IP "\fR[\fB\-\-if\-exists\fR] \fBdestroy \fItable record\fR..."
Deletes each specified \fIrecord\fR from \fItable\fR.  Unless
\fB\-\-if\-exists\fR is specified, each \fIrecord\fRs must exist.
.IP "\fB\-\-all destroy \fItable\fR"
Deletes all records from the \fItable\fR.
.
.RS
.IP "Caution (ovs-vsctl as exmaple)"
The \fBdestroy\fR command is only useful for records in the \fBQoS\fR
or \fBQueue\fR tables.  Records in other tables are automatically
deleted from the database when they become unreachable from the
\fBOpen_vSwitch\fR table.  This means that deleting the last reference
to a record is sufficient for deleting the record itself.  For records
in these tables, \fBdestroy\fR is silently ignored.  See the
\fBEXAMPLES\fR section below for more information.
.RE
.
.IP "\fBwait\-until \fItable record \fR[\fIcolumn\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR]..."
Waits until \fItable\fR contains a record named \fIrecord\fR whose
\fIcolumn\fR equals \fIvalue\fR or, if \fIkey\fR is specified, whose
\fIcolumn\fR contains a \fIkey\fR with the specified \fIvalue\fR.  Any
of the operators \fB!=\fR, \fB<\fR, \fB>\fR, \fB<=\fR, or \fB>=\fR may
be substituted for \fB=\fR to test for inequality, less than, greater
than, less than or equal to, or greater than or equal to,
respectively.  (Don't forget to escape \fB<\fR or \fB>\fR from
interpretation by the shell.)
.IP
If no \fIcolumn\fR[\fB:\fIkey\fR]\fB=\fIvalue\fR arguments are given,
this command waits only until \fIrecord\fR exists.  If more than one
such argument is given, the command waits until all of them are
satisfied.
.
.RS
.IP "Caution (ovs-vsctl as exmaple)"
Usually \fBwait\-until\fR should be placed at the beginning of a set
of \fBovs\-vsctl\fR commands.  For example, \fBwait\-until bridge br0
\-\- get bridge br0 datapath_id\fR waits until a bridge named
\fBbr0\fR is created, then prints its \fBdatapath_id\fR column,
whereas \fBget bridge br0 datapath_id \-\- wait\-until bridge br0\fR
will abort if no bridge named \fBbr0\fR exists when \fBovs\-vsctl\fR
initially connects to the database.
.RE
.IP
Consider specifying \fB\-\-timeout=0\fR along with
\fB\-\-wait\-until\fR, to prevent \fB\*(PN\fR from terminating
after waiting only at most 5 seconds.
.IP "\fBcomment \fR[\fIarg\fR]..."
This command has no effect on behavior, but any database log record
created by the command will include the command and its arguments.
.SH "EXIT STATUS"
.IP "0"
Successful program execution.
.IP "1"
Usage, syntax, or configuration file error.
.SH "SEE ALSO"
.
.BR ovn\-sb (5).
